
{'accuracy_score': 0.7808510638297872, 'balanced_accuracy_score': 0.6462455527120654, 'macro_precision_score': 0.5624200767263428, 'macro_recall_score': 0.6462455527120654, 'macro_f1_score': 0.5652017711673358, 'micro_precision_score': 0.7808510638297872, 'micro_recall_score': 0.7808510638297872, 'micro_f1_score': 0.7808510638297872}
('0', Pipeline(steps=[('0', KNNImputer(n_neighbors=6, weights='distance')),
                ('1', Normalizer(norm='l1')),
                ('2',
                 RandomUnderSampler(random_state=30533, replacement=True,
                                    sampling_strategy='not minority')),
                ('3',
                 AdaBoostClassifier(learning_rate=0.10001890213453367,
                                    random_state=30533))]))
('1', Pipeline(steps=[('0', MinMaxScaler()), ('1', SimpleImputer()),
                ('2',
                 SMOTETomek(random_state=30533, sampling_strategy='minority')),
                ('3',
                 AdaBoostClassifier(learning_rate=0.017317988813058297,
                                    n_estimators=16, random_state=30533))]))
('2', Pipeline(steps=[('0', MinMaxScaler()), ('1', SimpleImputer(strategy='median')),
                ('2',
                 SMOTETomek(random_state=30533,
                            sampling_strategy='not minority')),
                ('3',
                 DecisionTreeClassifier(class_weight='balanced',
                                        max_depth=1.7866233894534285,
                                        max_features=0.6655857070791703,
                                        min_samples_leaf=14,
                                        min_samples_split=14,
                                        random_state=30533))]))
('3', Pipeline(steps=[('0', KNNImputer(n_neighbors=6, weights='distance')),
                ('1', Normalizer(norm='l1')),
                ('2',
                 RandomUnderSampler(random_state=30533, replacement=True,
                                    sampling_strategy='not minority')),
                ('3', BernoulliNB(alpha=2.0272501416479396, fit_prior=False))]))
('4', Pipeline(steps=[('0', KNNImputer(n_neighbors=6)), ('1', Normalizer(norm='l1')),
                ('2',
                 RandomUnderSampler(random_state=30533, replacement=True,
                                    sampling_strategy='not minority')),
                ('3', BernoulliNB(alpha=2.0272501416479396))]))
('5', Pipeline(steps=[('0', MinMaxScaler()), ('1', SimpleImputer()),
                ('2',
                 SMOTETomek(random_state=30533,
                            sampling_strategy='not minority')),
                ('3',
                 DecisionTreeClassifier(class_weight='balanced',
                                        max_depth=1.7866233894534285,
                                        max_features=0.6655857070791703,
                                        min_samples_leaf=14,
                                        min_samples_split=14,
                                        random_state=30533))]))
('6', Pipeline(steps=[('0', MaxAbsScaler()), ('1', SimpleImputer(strategy='median')),
                ('2',
                 SMOTETomek(random_state=30533, sampling_strategy='minority')),
                ('3',
                 AdaBoostClassifier(learning_rate=0.03606050488836248,
                                    n_estimators=99, random_state=30533))]))
('7', Pipeline(steps=[('0', MinMaxScaler()), ('1', SimpleImputer(strategy='median')),
                ('2',
                 SMOTETomek(random_state=30533, sampling_strategy='minority')),
                ('3',
                 AdaBoostClassifier(algorithm='SAMME',
                                    learning_rate=0.01908146436212334,
                                    n_estimators=70, random_state=30533))]))
('8', Pipeline(steps=[('0', MinMaxScaler()),
                ('1', SimpleImputer(strategy='most_frequent')),
                ('2', GaussianNB(var_smoothing=0.0036762384361390434))]))
('9', Pipeline(steps=[('0', MinMaxScaler()), ('1', SimpleImputer()),
                ('2',
                 SMOTETomek(random_state=30533, sampling_strategy='minority')),
                ('3',
                 AdaBoostClassifier(algorithm='SAMME',
                                    learning_rate=0.01836780750034495,
                                    n_estimators=32, random_state=30533))]))


{'accuracy_score': 0.9658119658119658, 'balanced_accuracy_score': 0.9628571428571429, 'macro_precision_score': 0.9628571428571429, 'macro_recall_score': 0.9628571428571429, 'macro_f1_score': 0.9628571428571429, 'micro_precision_score': 0.9658119658119658, 'micro_recall_score': 0.9658119658119658, 'micro_f1_score': 0.9658119658119658}
('0', Pipeline(steps=[('0', MinMaxScaler()), ('1', MaxAbsScaler()),
                ('2', FastICA(n_components=22, random_state=8)),
                ('3',
                 ExtraTreesClassifier(criterion='entropy', max_features='sqrt',
                                      min_samples_split=15, random_state=8))]))
('1', Pipeline(steps=[('0', MinMaxScaler()), ('1', VarianceThreshold()),
                ('2', MaxAbsScaler()),
                ('3', FastICA(n_components=22, random_state=8)),
                ('4',
                 ExtraTreesClassifier(criterion='entropy', max_features='sqrt',
                                      min_samples_split=15, random_state=8))]))
('2', Pipeline(steps=[('0', MinMaxScaler()), ('1', MaxAbsScaler()),
                ('2', FastICA(n_components=22, random_state=8)),
                ('3',
                 ExtraTreesClassifier(criterion='entropy', max_features='log2',
                                      min_samples_split=15, random_state=8))]))
('3', Pipeline(steps=[('0', MinMaxScaler()), ('1', MaxAbsScaler()),
                ('2', FastICA(n_components=22, random_state=8)),
                ('3',
                 ExtraTreesClassifier(criterion='entropy', max_features='sqrt',
                                      min_samples_split=15, n_estimators=55,
                                      random_state=8))]))
('4', Pipeline(steps=[('0', MinMaxScaler()), ('1', MaxAbsScaler()),
                ('2',
                 FastICA(algorithm='deflation', fun='cube', n_components=22,
                         random_state=8)),
                ('3',
                 ExtraTreesClassifier(criterion='entropy', max_features='log2',
                                      min_samples_split=11, random_state=8))]))
('5', Pipeline(steps=[('0', MinMaxScaler()), ('1', MaxAbsScaler()),
                ('2',
                 FastICA(algorithm='deflation', fun='cube', n_components=22,
                         random_state=8)),
                ('3',
                 ExtraTreesClassifier(max_features='sqrt', min_samples_split=6,
                                      n_estimators=45, random_state=8))]))
('6', Pipeline(steps=[('0', MinMaxScaler()), ('1', MaxAbsScaler()),
                ('2', FastICA(n_components=22, random_state=8)),
                ('3',
                 ExtraTreesClassifier(class_weight='balanced',
                                      criterion='entropy', max_features='log2',
                                      min_samples_split=8, random_state=8))]))
('7', Pipeline(steps=[('0', MinMaxScaler()), ('1', MaxAbsScaler()),
                ('2',
                 FastICA(algorithm='deflation', fun='cube', n_components=22,
                         random_state=8)),
                ('3',
                 ExtraTreesClassifier(max_features='log2', min_samples_split=11,
                                      random_state=8))]))
('8', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1',
                 FastICA(algorithm='deflation', fun='exp', n_components=33,
                         random_state=8, whiten=False)),
                ('2',
                 ExtraTreesClassifier(bootstrap=True, class_weight='balanced',
                                      criterion='entropy', max_features='log2',
                                      min_samples_split=14, random_state=8))]))
('9', Pipeline(steps=[('0', Normalizer(norm='max')), ('1', VarianceThreshold()),
                ('2',
                 FastICA(algorithm='deflation', fun='exp', n_components=56,
                         random_state=8, whiten=False)),
                ('3',
                 ExtraTreesClassifier(bootstrap=True,
                                      class_weight='balanced_subsample',
                                      max_features='log2', min_samples_split=12,
                                      random_state=8))]))

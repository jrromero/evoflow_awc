
{'accuracy_score': 1.0, 'balanced_accuracy_score': 1.0, 'macro_precision_score': 1.0, 'macro_recall_score': 1.0, 'macro_f1_score': 1.0, 'micro_precision_score': 1.0, 'micro_recall_score': 1.0, 'micro_f1_score': 1.0}
('0', Pipeline(steps=[('0', Normalizer(norm='max')),
                ('1',
                 PCA(n_components=0.8719598781105159, random_state=4,
                     whiten=True)),
                ('2',
                 RBFSampler(gamma=0.003502702958506446, n_components=98,
                            random_state=4)),
                ('3',
                 ExtraTreesClassifier(class_weight='balanced',
                                      max_features='sqrt', min_samples_leaf=20,
                                      min_samples_split=4, n_estimators=64,
                                      random_state=4))]))
('1', Pipeline(steps=[('0',
                 Nystroem(coef0=-0.5048455896145028, degree=5,
                          gamma=0.19718196847201314, kernel='cosine',
                          n_components=56, random_state=4)),
                ('1', MinMaxScaler()),
                ('2', FeatureAgglomeration(linkage='complete', n_clusters=20)),
                ('3',
                 ExtraTreesClassifier(class_weight='balanced_subsample',
                                      criterion='entropy', max_features='sqrt',
                                      min_samples_leaf=6, min_samples_split=11,
                                      n_estimators=67, random_state=4))]))
('2', Pipeline(steps=[('0', Normalizer(norm='max')),
                ('1',
                 PCA(n_components=0.8719598781105159, random_state=4,
                     whiten=True)),
                ('2',
                 RBFSampler(gamma=0.0046992094001864345, n_components=42,
                            random_state=4)),
                ('3',
                 MLPClassifier(alpha=0.0010270559295254386,
                               learning_rate_init=0.032078619080808515,
                               random_state=4, solver='lbfgs'))]))
('3', Pipeline(steps=[('0', Normalizer()),
                ('1', PCA(n_components=0.8719598781105159, random_state=4)),
                ('2',
                 RBFSampler(gamma=0.0046992094001864345, n_components=42,
                            random_state=4)),
                ('3',
                 KNeighborsClassifier(n_neighbors=9, p=1, weights='distance'))]))
('4', Pipeline(steps=[('0', Normalizer(norm='l1')),
                ('1', PCA(n_components=0.7816120123031904, random_state=4)),
                ('2',
                 RBFSampler(gamma=0.02023622977482699, n_components=82,
                            random_state=4)),
                ('3', KNeighborsClassifier(n_neighbors=6, p=1))]))
('5', Pipeline(steps=[('0', Normalizer(norm='max')),
                ('1',
                 PCA(n_components=0.7525640201755874, random_state=4,
                     whiten=True)),
                ('2',
                 RBFSampler(gamma=0.02023622977482699, n_components=82,
                            random_state=4)),
                ('3', KNeighborsClassifier(n_neighbors=6, p=1))]))
('6', Pipeline(steps=[('0', Normalizer(norm='l1')),
                ('1', KNeighborsClassifier(n_neighbors=7, p=1))]))
('7', Pipeline(steps=[('0', Normalizer(norm='max')),
                ('1', KNeighborsClassifier(n_neighbors=6, weights='distance'))]))
('8', Pipeline(steps=[('0',
                 FeatureAgglomeration(affinity='manhattan', linkage='average',
                                      n_clusters=15)),
                ('1', Normalizer()),
                ('2', KNeighborsClassifier(n_neighbors=3, p=1))]))
('9', Pipeline(steps=[('0', Normalizer(norm='l1')), ('1', MaxAbsScaler()),
                ('2', RobustScaler(with_centering=False)),
                ('3', KNeighborsClassifier(n_neighbors=3, p=1))]))

['8', '14', '9', '8', '8', '7', '7', '9', '9', '17', '16', '11', '4', '8', '7', '8', '8', '8', '9', '9', '19', '9', '16', '10', '13', '12', '20', '20', '15', '13', '9', '6', '14', '7', '6', '7', '20', '7', '5', '3', '12', '27', '12', '10', '27', '27', '15', '4', '6', '5', '15', '20', '11', '18', '12', '22', '16', '16', '10', '9', '19', '18', '16', '6', '20', '7', '15', '8', '13', '7', '3', '3', '3', '4', '6', '6', '5', '19', '20', '11', '15', '7', '23', '22', '21', '22', '23', '14', '23', '5', '8', '7', '4', '7', '6', '7', '7', '14', '13', '15', '14', '10', '14', '19', '7', '8', '11', '13', '12', '22', '10', '16', '9', '9', '8', '9', '7', '10', '10', '11', '10', '10', '19', '21', '26', '20', '19', '19', '12', '7', '14', '14', '4', '4', '3', '15', '7', '8', '26', '15', '18', '9', '13', '13', '12', '17', '16', '10', '17', '10', '8', '7', '4', '7', '3', '18', '8', '9', '8', '10', '4', '21', '9', '8', '12', '7', '7', '20', '13', '12', '8', '21', '12', '16', '8', '11', '17', '17', '15', '23', '14', '8', '7', '4', '8', '12', '9', '18', '8', '7', '9', '7', '6', '15', '7', '8', '7', '4', '6', '15', '10', '17', '15', '6', '15', '9', '19', '8', '5', '3', '5', '15', '10', '8', '7', '6', '5', '3', '18', '23', '15', '19', '14', '15', '7', '23', '19', '18', '9', '14', '19', '19', '19', '14', '8', '14', '17', '14', '23', '15', '14', '14', '16', '8', '13', '8', '23', '6', '6', '6', '6', '8', '9', '9', '11', '9', '11', '18', '20', '29', '20', '11', '19', '12', '27', '4', '4', '5', '4', '5', '6', '6', '6', '6', '6', '6', '7', '6', '7', '8', '7', '7', '7', '8', '8', '7', '8', '8', '7', '8', '8', '8', '8', '8', '8', '8', '14', '9', '15', '10', '14', '9', '9', '19', '11', '11', '12', '11', '11', '17', '17', '12', '19', '29', '12', '3', '4', '5', '5', '6', '6', '7', '7', '7', '8', '6', '7', '7', '6', '6', '8', '8', '8', '8', '8', '8', '8', '9', '8', '8', '9', '8', '9', '9', '9', '9', '8', '9', '9', '11', '10', '10', '11', '11', '11', '27', '9', '12', '13', '27', '6', '6', '6', '6', '6', '6', '7', '6', '6', '6', '6', '6', '7', '7', '6', '7', '7', '8', '8', '8', '8', '8', '8', '8', '8', '8', '9', '9', '8', '14', '8', '8', '11', '10', '8', '8', '10', '9', '14', '10', '10', '9', '11', '20', '10', '11', '9', '11', '16', '19', '10', '11', '11', '29', '13', '19', '3', '6', '6', '6', '8', '6', '8', '12', '8', '8', '9', '8', '9', '9', '9', '10', '8', '10', '18', '19', '10', '9', '13', '9', '15', '5', '5', '6', '7', '6', '7', '6', '7', '7', '7', '7', '8', '7', '9', '8', '8', '8', '8', '8', '7', '8', '8', '9', '8', '8', '9', '9', '8', '8', '8', '12', '12', '13', '9', '12', '10', '10', '10', '9', '9', '10', '9', '10', '12', '9', '11', '9', '10', '11', '10', '19', '11', '11', '19', '9', '11', '11', '12', '21', '27', '4', '8', '6', '8', '23', '19', '11', '8', '9', '10', '9', '27', '11', '10', '11', '11', '16', '11', '11', '4', '6', '7', '7', '7', '7', '9', '8', '8', '8', '8', '9', '9', '13', '13', '9', '9', '8', '8', '8', '8', '8', '8', '13', '11', '9', '9', '8', '9', '15', '10', '20', '9', '9', '9', '9', '9', '10', '9', '10', '9', '17', '15', '9', '11', '18', '12', '26', '19', '12', '20', '11', '20', '11', '3', '4', '5', '5', '5', '5', '6', '6', '6', '6', '6', '6', '7', '8', '9', '10', '8', '9', '10', '9', '11', '5', '6', '6', '6', '7', '8', '9', '8', '17', '9', '12', '8', '12', '11', '12', '9', '11', '29', '6', '8', '17', '5', '9', '8', '4', '7', '16', '8', '13', '4', '10', '9', '20', '7', '13', '6', '3', '16', '20', '20', '14', '14', '10', '11', '4', '5', '5', '27', '25', '17', '14', '20', '17', '14', '23', '16', '16', '18', '9', '19', '10', '19', '11', '10', '17', '20', '8', '9', '11', '8', '13', '14', '8', '7', '20', '19', '20', '7', '15', '16', '9', '20', '11', '9', '14', '21', '17', '9', '18', '21', '20', '13', '12', '22', '22', '11', '20', '7', '10', '4', '23', '9', '7', '7', '13', '13', '8', '13', '7', '9', '7', '15', '7', '18', '4', '18', '23', '9', '4', '19', '19', '9', '12', '8', '16', '18', '18', '13', '15', '14', '7', '19', '23', '10', '23', '19', '5', '5', '6', '6', '7', '7', '8', '18', '8', '10', '22', '29', '19', '12', '4', '5', '6', '6', '6', '7', '7', '7', '7', '8', '8', '9', '9', '9', '10', '10', '13', '8', '23', '23', '21', '5', '7', '7', '6', '8', '7', '8', '8', '8', '8', '8', '8', '8', '9', '9', '9', '9', '9', '9', '9', '27', '9', '9', '11', '9', '11', '9', '11', '11', '11', '11', '13', '4', '4', '6', '6', '6', '6', '6', '7', '7', '7', '8', '8', '8', '8', '9', '8', '10', '16', '9', '9', '14', '23', '11', '10', '10', '11', '20', '10', '27', '4', '6', '8', '8', '8', '10', '9', '11', '10', '9', '9', '9', '9', '10', '10', '21', '6', '6', '8', '7', '9', '8', '8', '8', '8', '8', '9', '11', '8', '9', '9', '9', '10', '11', '8', '10', '13', '10', '10', '9', '11', '10', '10', '13', '11', '11', '20', '11', '13', '12', '10', '10', '7', '17', '8', '8', '27', '10', '9', '27', '10', '12', '10', '11', '29', '9', '8', '8', '9', '16', '8', '13', '8', '8', '20', '10', '16', '16', '12', '9', '12', '11', '16', '18', '24', '6', '6', '20', '6', '7', '7', '12', '10', '14', '14', '6', '3', '4', '11', '11', '21', '10', '8', '8', '19', '23', '13', '15', '7', '5', '7', '22', '13', '23', '13', '9', '14', '14', '11', '10', '17', '9', '7', '11', '8', '20', '7', '15', '11', '17', '13', '7', '14', '8', '18', '14', '9', '15', '8', '12', '14', '20', '20', '15', '11', '29', '8', '15', '10', '18', '16', '19', '9', '6', '14', '17', '21', '7', '16', '6', '13', '13', '7', '12', '23', '26', '8', '8', '13', '9', '7', '7', '21', '23', '8', '7', '21', '8', '4', '6', '8', '23', '10', '19', '6', '6', '6', '6', '9', '19', '20', '10', '10', '10', '6', '7', '6', '6', '7', '8', '8', '8', '8', '8', '14', '9', '10', '9', '20', '10', '11', '18', '7', '8', '8', '8', '8', '9', '10', '9', '21', '9', '11', '4', '5', '6', '7', '8', '7', '7', '8', '8', '8', '8', '8', '8', '9', '9', '10', '10', '10', '12', '20', '19', '11', '21', '11', '11', '11', '18', '3', '7', '7', '8', '9', '9', '11', '10', '10', '11', '19', '5', '6', '6', '7', '8', '8', '8', '8', '8', '8', '8', '10', '10', '12', '10', '9', '12', '21', '12', '11', '20', '12', '10', '20', '11', '27', '5', '6', '7', '7', '15', '8', '10', '4', '10', '19', '6', '7', '9', '7', '8', '11', '15', '8', '9', '10', '10', '10', '11', '26', '12', '10', '20', '22', '20', '21', '29', '8', '8', '8', '8', '20', '20', '18', '13', '23', '3', '16', '7', '23', '8', '16', '15', '29', '23', '14', '6', '15', '14', '6', '23', '5', '25', '9', '7', '17', '8', '12', '16', '26', '7', '8', '19', '13', '9', '16', '17', '4', '9', '20', '13', '18', '11', '4', '5', '7', '7', '8', '8', '11', '11', '13', '22', '6', '6', '9', '29', '6', '7', '7', '8', '10', '10', '29', '10', '11', '8', '6', '7', '7', '8', '11', '12', '9', '10', '12', '10', '12', '11', '10', '12', '11', '6', '27', '9', '9', '11', '11', '7', '8', '8', '9', '13', '11', '10', '21', '20', '12', '11', '7', '11', '7', '6', '8', '12']
{'accuracy_score': 0.20590582601755786, 'balanced_accuracy_score': 0.15972931257251347, 'macro_precision_score': 0.10776161038985972, 'macro_recall_score': 0.13691083934786868, 'macro_f1_score': 0.11075615936086379, 'micro_precision_score': 0.20590582601755786, 'micro_recall_score': 0.20590582601755786, 'micro_f1_score': 0.20590582601755786}
('0', Pipeline(steps=[('0', SimpleImputer(strategy='median')),
                ('1', FastICA(n_components=63, random_state=7)),
                ('2',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        criterion='entropy',
                                        max_features='sqrt',
                                        min_samples_leaf=12,
                                        min_samples_split=8, n_estimators=22,
                                        random_state=7))]))
('1', Pipeline(steps=[('0', FastICA(n_components=17, random_state=7)),
                ('1',
                 RandomOverSampler(random_state=7,
                                   sampling_strategy='not minority')),
                ('2',
                 MLPClassifier(activation='logistic', alpha=0.04100530811265877,
                               learning_rate_init=0.0016238422809657478,
                               random_state=7))]))
('2', Pipeline(steps=[('0', SimpleImputer(strategy='most_frequent')),
                ('1', FastICA(n_components=82, random_state=7)),
                ('2',
                 RandomForestClassifier(class_weight='balanced_subsample',
                                        criterion='entropy',
                                        max_features='sqrt',
                                        min_samples_leaf=15,
                                        min_samples_split=12, n_estimators=76,
                                        random_state=7))]))
('3', Pipeline(steps=[('0', SimpleImputer(strategy='median')),
                ('1', FastICA(n_components=4, random_state=7)),
                ('2',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced_subsample',
                                        max_features='log2',
                                        min_samples_leaf=16,
                                        min_samples_split=10, n_estimators=79,
                                        random_state=7))]))
('4', Pipeline(steps=[('0', SimpleImputer(strategy='median')),
                ('1', FastICA(n_components=94, random_state=7)),
                ('2',
                 RandomForestClassifier(class_weight='balanced',
                                        max_features='sqrt',
                                        min_samples_leaf=12,
                                        min_samples_split=9, n_estimators=79,
                                        random_state=7))]))
('5', Pipeline(steps=[('0', SimpleImputer(strategy='median')),
                ('1', FastICA(n_components=94, random_state=7)),
                ('2',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        criterion='entropy',
                                        max_features='log2',
                                        min_samples_leaf=20,
                                        min_samples_split=9, n_estimators=79,
                                        random_state=7))]))
('6', Pipeline(steps=[('0', MinMaxScaler()),
                ('1', StandardScaler(with_mean=False, with_std=False)),
                ('2', VarianceThreshold()), ('3', MaxAbsScaler()),
                ('4',
                 RandomForestClassifier(class_weight='balanced',
                                        max_features='log2', min_samples_leaf=3,
                                        min_samples_split=12, n_estimators=69,
                                        random_state=7))]))
('7', Pipeline(steps=[('0', SimpleImputer(strategy='median')),
                ('1',
                 RandomForestClassifier(class_weight='balanced_subsample',
                                        max_features='log2',
                                        min_samples_leaf=13,
                                        min_samples_split=6, n_estimators=13,
                                        random_state=7))]))
('8', Pipeline(steps=[('0', FastICA(fun='exp', n_components=44, random_state=7)),
                ('1',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced_subsample',
                                        max_features='sqrt',
                                        min_samples_leaf=13,
                                        min_samples_split=12, n_estimators=89,
                                        random_state=7))]))
('9', Pipeline(steps=[('0', VarianceThreshold()),
                ('1', FastICA(n_components=16, random_state=7)),
                ('2',
                 RandomForestClassifier(class_weight='balanced_subsample',
                                        max_features='log2',
                                        min_samples_leaf=13,
                                        min_samples_split=16, n_estimators=39,
                                        random_state=7))]))

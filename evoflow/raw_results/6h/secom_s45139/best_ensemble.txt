
{'accuracy_score': 0.8085106382978723, 'balanced_accuracy_score': 0.6241807627488921, 'macro_precision_score': 0.5619376731733134, 'macro_recall_score': 0.6241807627488921, 'macro_f1_score': 0.5701219512195121, 'micro_precision_score': 0.8085106382978723, 'micro_recall_score': 0.8085106382978723, 'micro_f1_score': 0.8085106382978723}
('0', Pipeline(steps=[('0', SimpleImputer()), ('1', RobustScaler(with_scaling=False)),
                ('2', MinMaxScaler()),
                ('3',
                 DecisionTreeClassifier(class_weight='balanced',
                                        criterion='entropy',
                                        max_depth=1.8646983950494114,
                                        max_features=0.861985695869587,
                                        min_samples_leaf=8, min_samples_split=5,
                                        random_state=45139))]))
('1', Pipeline(steps=[('0', KNNImputer(weights='distance')),
                ('1',
                 DecisionTreeClassifier(class_weight='balanced',
                                        criterion='entropy',
                                        max_depth=1.8995175654518186,
                                        max_features=0.8693501641192966,
                                        min_samples_leaf=6,
                                        min_samples_split=15,
                                        random_state=45139))]))
('2', Pipeline(steps=[('0', VarianceThreshold()),
                ('1', SimpleImputer(strategy='most_frequent')),
                ('2',
                 SMOTE(k_neighbors=3, random_state=45139,
                       sampling_strategy='minority')),
                ('3',
                 DecisionTreeClassifier(class_weight='balanced',
                                        max_depth=1.8995175654518186,
                                        max_features=0.8072658618178469,
                                        min_samples_leaf=15,
                                        min_samples_split=4,
                                        random_state=45139))]))
('3', Pipeline(steps=[('0',
                 RandomOverSampler(random_state=45139,
                                   sampling_strategy='not majority')),
                ('1', KNNImputer(n_neighbors=8)), ('2', VarianceThreshold()),
                ('3',
                 DecisionTreeClassifier(criterion='entropy',
                                        max_depth=1.7169174159134444,
                                        max_features=0.9335485259188685,
                                        min_samples_leaf=8, min_samples_split=5,
                                        random_state=45139))]))
('4', Pipeline(steps=[('0', VarianceThreshold()),
                ('1', SimpleImputer(strategy='most_frequent')),
                ('2',
                 SMOTE(k_neighbors=4, random_state=45139,
                       sampling_strategy='minority')),
                ('3',
                 DecisionTreeClassifier(class_weight='balanced',
                                        max_depth=1.299562136289035,
                                        max_features=0.0921975550591444,
                                        min_samples_leaf=15,
                                        min_samples_split=4,
                                        random_state=45139))]))
('5', Pipeline(steps=[('0', VarianceThreshold()),
                ('1', SimpleImputer(strategy='most_frequent')),
                ('2',
                 SMOTE(k_neighbors=4, random_state=45139,
                       sampling_strategy='not majority')),
                ('3',
                 DecisionTreeClassifier(class_weight='balanced',
                                        max_depth=1.299562136289035,
                                        max_features=0.0921975550591444,
                                        min_samples_leaf=15,
                                        min_samples_split=4,
                                        random_state=45139))]))
('6', Pipeline(steps=[('0', KNNImputer(n_neighbors=4, weights='distance')),
                ('1', SelectPercentile(percentile=13.211155614315192)),
                ('2', MinMaxScaler()),
                ('3',
                 DecisionTreeClassifier(class_weight='balanced',
                                        max_depth=1.4301563057839688,
                                        max_features=0.20808977786912952,
                                        min_samples_leaf=7,
                                        min_samples_split=19,
                                        random_state=45139))]))
('7', Pipeline(steps=[('0', VarianceThreshold()),
                ('1', SimpleImputer(strategy='most_frequent')),
                ('2',
                 SMOTE(k_neighbors=3, random_state=45139,
                       sampling_strategy='minority')),
                ('3',
                 DecisionTreeClassifier(class_weight='balanced',
                                        max_depth=1.299562136289035,
                                        max_features=0.0921975550591444,
                                        min_samples_leaf=15,
                                        min_samples_split=9,
                                        random_state=45139))]))
('8', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1', SimpleImputer(strategy='most_frequent')),
                ('2',
                 SMOTE(k_neighbors=3, random_state=45139,
                       sampling_strategy='minority')),
                ('3',
                 DecisionTreeClassifier(class_weight='balanced',
                                        max_depth=1.8923989379926638,
                                        max_features=0.9491969238214272,
                                        min_samples_leaf=5, min_samples_split=4,
                                        random_state=45139))]))
('9', Pipeline(steps=[('0', VarianceThreshold()),
                ('1', SimpleImputer(strategy='most_frequent')),
                ('2',
                 SMOTE(k_neighbors=4, random_state=45139,
                       sampling_strategy='minority')),
                ('3',
                 DecisionTreeClassifier(class_weight='balanced',
                                        max_depth=1.299562136289035,
                                        max_features=0.0921975550591444,
                                        min_samples_leaf=15,
                                        min_samples_split=17,
                                        random_state=45139))]))

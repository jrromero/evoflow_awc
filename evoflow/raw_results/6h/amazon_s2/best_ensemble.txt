['Agresti', 'Agresti', 'Agresti', 'Agresti', 'Agresti', 'Agresti', 'Ashbacher', 'Ashbacher', 'Ashbacher', 'Ashbacher', 'Ashbacher', 'Cholette', 'Ashbacher', 'Power', 'Ashbacher', 'Ashbacher', 'Ashbacher', 'Riley', 'Ashbacher', 'Ashbacher', 'Lee', 'Auken', 'Auken', 'Auken', 'Auken', 'Auken', 'Auken', 'Auken', 'Auken', 'Auken', 'Blankenship', 'Blankenship', 'Blankenship', 'Blankenship', 'Blankenship', 'Blankenship', 'Brody', 'Brody', 'Bukowsky', 'Brody', 'Brody', 'Brody', 'Brody', 'Morrison', 'Brown', 'Mitchell', 'Brown', 'Brown', 'Brown', 'Brown', 'Brown', 'Brown', 'Brown', 'Bukowsky', 'Bukowsky', 'Bukowsky', 'Bukowsky', 'Bukowsky', 'Vernon', 'Bukowsky', 'Bukowsky', 'Bukowsky', 'Bukowsky', 'Bukowsky', 'Bukowsky', 'Calvinnme', 'Calvinnme', 'Calvinnme', 'Calvinnme', 'Koenig', 'Calvinnme', 'Calvinnme', 'CFH', 'CFH', 'CFH', 'CFH', 'Dent', 'CFH', 'CFH', 'CFH', 'CFH', 'CFH', 'CFH', 'Chachra', 'Chachra', 'Chachra', 'Chachra', 'Chachra', 'Chachra', 'Chachra', 'Chachra', 'Chachra', 'Chandler', 'Chandler', 'Chandler', 'Chandler', 'Chandler', 'Chandler', 'Chandler', 'Chell', 'Chell', 'Chell', 'Chell', 'Chell', 'Walters', 'Chell', 'Chell', 'Chell', 'Chell', 'CFH', 'Cholette', 'Cholette', 'Cholette', 'Cholette', 'Cholette', 'Cholette', 'Cholette', 'Comdet', 'Comdet', 'Comdet', 'Comdet', 'Calvinnme', 'Comdet', 'Chandler', 'Comdet', 'Agresti', 'Comdet', 'Corn', 'Corn', 'Corn', 'Corn', 'Goonan', 'Goonan', 'Corn', 'Grove', 'Cutey', 'Cutey', 'Cutey', 'Brody', 'Cutey', 'Cutey', 'Cutey', 'Cutey', 'Cutey', 'Cutey', 'Cutey', 'Cutey', 'Lovitt', 'Bukowsky', 'Davisson', 'Ashbacher', 'Davisson', 'Davisson', 'Dent', 'Dent', 'Dent', 'Dent', 'Dent', 'Dent', 'Dent', 'Mark', 'Dent', 'Dent', 'Engineer', 'Engineer', 'Engineer', 'Engineer', 'Engineer', 'Engineer', 'Engineer', 'Engineer', 'Engineer', 'Engineer', 'Engineer', 'Engineer', 'Goonan', 'Goonan', 'Goonan', 'Goonan', 'Goonan', 'Goonan', 'Goonan', 'Goonan', 'Goonan', 'Koenig', 'Goonan', 'Grove', 'Grove', 'Chandler', 'Shea', 'Grove', 'Grove', 'Grove', 'McKee', 'Grove', 'Harp', 'Harp', 'Harp', 'Harp', 'Harp', 'Harp', 'Harp', 'Hayes', 'Brody', 'McKee', 'Hayes', 'Hayes', 'Hayes', 'Johnson', 'Hayes', 'Hayes', 'Janson', 'Janson', 'Janson', 'Janson', 'Janson', 'Janson', 'Janson', 'Lovitt', 'Janson', 'Johnson', 'Johnson', 'Johnson', 'Johnson', 'Johnson', 'Johnson', 'Mark', 'Koenig', 'Koenig', 'Koenig', 'Koenig', 'Koenig', 'Koenig', 'Koenig', 'Koenig', 'Koenig', 'Kolln', 'Kolln', 'Kolln', 'Kolln', 'Kolln', 'Kolln', 'Kolln', 'Kolln', 'Kolln', 'Kolln', 'Kolln', 'Lawyeraau', 'Lawyeraau', 'Lawyeraau', 'Lawyeraau', 'Lawyeraau', 'Messick', 'Lawyeraau', 'Davisson', 'Lawyeraau', 'Lee', 'Lee', 'Chell', 'Lee', 'Chell', 'Bukowsky', 'Wilson', 'Chell', 'Lee', 'Lee', 'Lee', 'Lovitt', 'Lee', 'Agresti', 'Lovitt', 'Chell', 'Lovitt', 'Lovitt', 'Lovitt', 'Lovitt', 'Goonan', 'Mahlers2nd', 'Mahlers2nd', 'Mahlers2nd', 'Mahlers2nd', 'Mahlers2nd', 'Mahlers2nd', 'Mahlers2nd', 'Mahlers2nd', 'Mahlers2nd', 'Riley', 'Mahlers2nd', 'Nigam', 'Mark', 'Mark', 'Mark', 'Mark', 'Mark', 'Mark', 'Mark', 'Mark', 'Messick', 'McKee', 'McKee', 'McKee', 'Comdet', 'Goonan', 'McKee', 'McKee', 'McKee', 'McKee', 'McKee', 'Merritt', 'Merritt', 'Merritt', 'Merritt', 'Merritt', 'Merritt', 'Merritt', 'Merritt', 'Merritt', 'Nigam', 'Merritt', 'Merritt', 'Merritt', 'Messick', 'Messick', 'Messick', 'Messick', 'Lawyeraau', 'Messick', 'Vernon', 'Mitchell', 'Mitchell', 'Mitchell', 'Mitchell', 'Mitchell', 'Mitchell', 'Morrison', 'Morrison', 'Morrison', 'Morrison', 'Morrison', 'Morrison', 'Morrison', 'Morrison', 'Morrison', 'Neal', 'Neal', 'Agresti', 'Neal', 'McKee', 'Neal', 'Peterson', 'Neal', 'Neal', 'Nigam', 'Nigam', 'Vernon', 'Nigam', 'Nigam', 'Koenig', 'Nigam', 'Peterson', 'Peterson', 'Peterson', 'Power', 'Power', 'Power', 'Power', 'Power', 'Power', 'Power', 'Power', 'Power', 'Riley', 'Riley', 'Riley', 'Riley', 'Riley', 'Riley', 'Riley', 'Riley', 'Corn', 'Robert', 'Robert', 'Robert', 'Robert', 'Robert', 'Robert', 'Robert', 'Robert', 'Shea', 'Shea', 'Shea', 'Brown', 'Nigam', 'Shea', 'Shea', 'Lovitt', 'Shea', 'Shea', 'Chandler', 'Sherwin', 'Sherwin', 'Sherwin', 'Sherwin', 'Sherwin', 'Nigam', 'Lee', 'Sherwin', 'Sherwin', 'Sherwin', 'Sherwin', 'Vision', 'Taylor', 'Taylor', 'Taylor', 'Calvinnme', 'Taylor', 'Taylor', 'Taylor', 'Taylor', 'Vernon', 'Vernon', 'Vernon', 'Vernon', 'Vernon', 'Vision', 'Vision', 'Nigam', 'Vision', 'Vision', 'Vision', 'Vision', 'Walters', 'Walters', 'Walters', 'Walters', 'Walters', 'Walters', 'Walters', 'Wilson', 'Wilson', 'Wilson', 'Wilson', 'Lovitt', 'Wilson', 'Wilson', 'Wilson', 'Wilson', 'Wilson', 'Wilson', 'Wilson']
{'accuracy_score': 0.8511111111111112, 'balanced_accuracy_score': 0.8587565212565212, 'macro_precision_score': 0.8542083472083472, 'macro_recall_score': 0.8587565212565212, 'macro_f1_score': 0.8479438330329028, 'micro_precision_score': 0.8511111111111112, 'micro_recall_score': 0.8511111111111112, 'micro_f1_score': 0.8511111111111112}
('0', Pipeline(steps=[('0', SelectFwe(alpha=0.015746766637503195)),
                ('1', StandardScaler(with_mean=False)),
                ('2',
                 PassiveAggressiveClassifier(C=0.3693385940210698,
                                             random_state=2))]))
('1', Pipeline(steps=[('0', MinMaxScaler()),
                ('1', SelectFwe(alpha=0.02155355942397091)),
                ('2', StandardScaler(with_mean=False)),
                ('3',
                 PassiveAggressiveClassifier(C=0.3693385940210698,
                                             loss='squared_hinge',
                                             random_state=2))]))
('2', Pipeline(steps=[('0', MinMaxScaler()),
                ('1', SelectFwe(alpha=0.0018595632000004427)),
                ('2',
                 PassiveAggressiveClassifier(C=0.0007479629706696907,
                                             loss='squared_hinge',
                                             random_state=2))]))
('3', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1',
                 PassiveAggressiveClassifier(C=0.0002859267472894254,
                                             loss='squared_hinge',
                                             random_state=2))]))
('4', Pipeline(steps=[('0', MinMaxScaler()),
                ('1', SelectPercentile(percentile=23.427859729212678)),
                ('2',
                 PassiveAggressiveClassifier(C=3.3045658552306443,
                                             fit_intercept=False,
                                             random_state=2))]))
('5', Pipeline(steps=[('0', Normalizer(norm='max')), ('1', MaxAbsScaler()),
                ('2', StandardScaler()),
                ('3',
                 PassiveAggressiveClassifier(C=0.2770312280117449,
                                             fit_intercept=False,
                                             loss='squared_hinge',
                                             random_state=2))]))
('6', Pipeline(steps=[('0', Normalizer(norm='max')), ('1', MaxAbsScaler()),
                ('2', StandardScaler(with_mean=False, with_std=False)),
                ('3',
                 PassiveAggressiveClassifier(C=0.18474899099910816,
                                             loss='squared_hinge',
                                             random_state=2))]))
('7', Pipeline(steps=[('0', StandardScaler(with_mean=False)),
                ('1', VarianceThreshold()), ('2', MaxAbsScaler()),
                ('3',
                 PassiveAggressiveClassifier(C=0.0007479629706696907,
                                             random_state=2))]))
('8', Pipeline(steps=[('0',
                 SMOTETomek(random_state=2, sampling_strategy='not minority')),
                ('1', SelectFwe(alpha=0.002034562663755711)),
                ('2', MinMaxScaler()),
                ('3',
                 PassiveAggressiveClassifier(C=0.3693385940210698,
                                             random_state=2))]))
('9', Pipeline(steps=[('0', VarianceThreshold()), ('1', MaxAbsScaler()),
                ('2',
                 PassiveAggressiveClassifier(C=0.24885055758087254,
                                             loss='squared_hinge',
                                             random_state=2))]))

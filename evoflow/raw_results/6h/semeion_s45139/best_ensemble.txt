['0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '2', '2', '2', '2', '2', '2', '2', '3', '1', '3', '3', '1', '4', '4', '4', '4', '4', '5', '9', '5', '5', '5', '5', '6', '6', '6', '6', '6', '6', '7', '7', '7', '7', '7', '8', '8', '8', '8', '8', '9', '4', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '2', '2', '2', '2', '3', '3', '7', '3', '3', '3', '3', '3', '6', '1', '4', '4', '4', '4', '4', '4', '5', '5', '5', '5', '6', '6', '6', '6', '1', '7', '7', '7', '7', '7', '7', '7', '8', '8', '8', '8', '9', '9', '9', '4', '0', '0', '5', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '9', '9', '3', '3', '3', '3', '4', '4', '4', '4', '4', '1', '4', '4', '4', '4', '5', '5', '5', '5', '5', '5', '6', '6', '6', '6', '6', '6', '6', '7', '7', '7', '7', '7', '8', '8', '1', '8', '8', '1', '8', '0', '9', '9', '9', '9', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '2', '8', '2', '2', '2', '2', '2', '2', '2', '5', '3', '3', '3', '3', '3', '5', '4', '4', '1', '4', '4', '1', '4', '4', '4', '4', '5', '5', '6', '6', '6', '6', '6', '6', '6', '6', '4', '7', '7', '7', '7', '7', '7', '7', '8', '8', '8', '8', '8', '9', '9', '0', '9', '9', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '2', '2', '2', '2', '2', '2', '2', '2', '7', '2', '2', '2', '3', '3', '2', '3', '3', '3', '3', '3', '4', '4', '4', '4', '4', '4', '4', '4', '4', '5', '5', '5', '5', '5', '5', '5', '5', '5', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '8', '8', '8', '8', '8', '8', '8', '8', '8', '9', '8', '8', '8', '9', '9', '9', '2', '9', '9', '9', '9', '9', '8', '0', '0', '0', '0', '0', '0', '0', '5', '0', '0', '0', '1', '1', '1', '1', '1', '2', '1', '1', '1', '1', '1', '1', '9', '2', '2', '4', '2', '4', '2', '2', '2', '3', '3', '3', '3', '3', '3', '3', '3', '3', '3', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '7', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '6', '6', '6', '6', '6', '6', '0', '6', '6', '6', '6', '6', '1', '7', '4', '7', '7', '1', '7', '7', '7', '7', '7', '7', '7', '7', '8', '8', '8', '8', '8', '8', '8', '8', '8', '8', '3', '8', '8', '9', '9', '9', '9', '9', '9', '9', '9', '9', '3', '9']
{'accuracy_score': 0.9119496855345912, 'balanced_accuracy_score': 0.9071666568273986, 'macro_precision_score': 0.9134043697517032, 'macro_recall_score': 0.9071666568273986, 'macro_f1_score': 0.9094307847236003, 'micro_precision_score': 0.9119496855345912, 'micro_recall_score': 0.9119496855345912, 'micro_f1_score': 0.9119496855345912}
('0', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1',
                 MLPClassifier(activation='logistic', alpha=0.01452871413776837,
                               learning_rate_init=0.008241592277598176,
                               random_state=45139, solver='lbfgs'))]))
('1', Pipeline(steps=[('0', KNNImputer(n_neighbors=10, weights='distance')),
                ('1', MinMaxScaler()),
                ('2',
                 MLPClassifier(activation='logistic', alpha=0.01452871413776837,
                               learning_rate_init=0.015478708733746646,
                               random_state=45139, solver='lbfgs'))]))
('2', Pipeline(steps=[('0',
                 MLPClassifier(activation='logistic', alpha=0.01452871413776837,
                               learning_rate_init=0.008241592277598176,
                               random_state=45139, solver='lbfgs'))]))
('3', Pipeline(steps=[('0',
                 SMOTE(k_neighbors=3, random_state=45139,
                       sampling_strategy='not minority')),
                ('1', StandardScaler(with_std=False)),
                ('2', VarianceThreshold()),
                ('3',
                 MLPClassifier(activation='logistic',
                               alpha=0.012787538818887187,
                               learning_rate_init=0.015853694553243477,
                               random_state=45139))]))
('4', Pipeline(steps=[('0', VarianceThreshold()),
                ('1',
                 RandomOverSampler(random_state=45139,
                                   sampling_strategy='not minority')),
                ('2',
                 MLPClassifier(activation='logistic',
                               alpha=0.017536461102119497,
                               learning_rate_init=0.1301834598261704,
                               random_state=45139, solver='lbfgs'))]))
('5', Pipeline(steps=[('0',
                 SMOTE(k_neighbors=3, random_state=45139,
                       sampling_strategy='not minority')),
                ('1', StandardScaler(with_std=False)),
                ('2', VarianceThreshold()),
                ('3',
                 MLPClassifier(activation='tanh', alpha=0.0033051383448502785,
                               learning_rate_init=0.05227587627385964,
                               random_state=45139))]))
('6', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1',
                 MLPClassifier(activation='logistic', alpha=0.01452871413776837,
                               learning_rate_init=0.005528208072126303,
                               random_state=45139, solver='lbfgs'))]))
('7', Pipeline(steps=[('0',
                 SMOTE(k_neighbors=3, random_state=45139,
                       sampling_strategy='not minority')),
                ('1', StandardScaler(with_std=False)),
                ('2', VarianceThreshold()),
                ('3',
                 MLPClassifier(activation='logistic',
                               alpha=0.0033051383448502785,
                               learning_rate_init=0.05227587627385964,
                               random_state=45139))]))
('8', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1',
                 MLPClassifier(activation='logistic',
                               alpha=0.017536461102119497,
                               learning_rate_init=0.0011144798961859805,
                               random_state=45139, solver='lbfgs'))]))
('9', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1',
                 MLPClassifier(activation='logistic', alpha=0.01452871413776837,
                               learning_rate_init=0.4300280357032197,
                               random_state=45139, solver='lbfgs'))]))

['good', 'bad', 'good', 'bad', 'bad', 'bad', 'bad', 'bad', 'good', 'bad', 'good', 'good', 'bad', 'good', 'good', 'good', 'good', 'good', 'bad', 'good', 'good', 'good', 'good', 'bad', 'good', 'good', 'good', 'good', 'good', 'good', 'good', 'bad', 'good', 'good', 'good', 'bad', 'bad', 'bad', 'good', 'good', 'good', 'bad', 'good', 'good', 'good', 'bad', 'good', 'good', 'good', 'good', 'bad', 'good', 'good', 'good', 'good', 'good', 'good', 'bad', 'good', 'good', 'bad', 'bad', 'bad', 'bad', 'bad', 'good', 'bad', 'good', 'bad', 'bad', 'good', 'good', 'bad', 'good', 'good', 'bad', 'good', 'good', 'good', 'bad', 'bad', 'good', 'good', 'good', 'bad', 'bad', 'bad', 'good', 'good', 'good', 'bad', 'bad', 'good', 'good', 'good', 'bad', 'bad', 'bad', 'bad', 'good', 'good', 'good', 'good', 'good', 'bad', 'bad', 'good', 'good', 'good', 'bad', 'bad', 'good', 'bad', 'good', 'bad', 'bad', 'bad', 'good', 'good', 'bad', 'bad', 'bad', 'bad', 'good', 'good', 'good', 'good', 'good', 'good', 'bad', 'good', 'good', 'good', 'good', 'good', 'bad', 'bad', 'good', 'good', 'bad', 'good', 'good', 'bad', 'good', 'good', 'good', 'bad', 'good', 'bad', 'bad', 'good', 'bad', 'good', 'good', 'good', 'good', 'good', 'good', 'good', 'bad', 'bad', 'bad', 'good', 'bad', 'good', 'good', 'bad', 'good', 'bad', 'bad', 'good', 'good', 'bad', 'good', 'bad', 'good', 'bad', 'good', 'good', 'good', 'good', 'good', 'bad', 'bad', 'good', 'good', 'good', 'bad', 'good', 'bad', 'bad', 'good', 'good', 'good', 'bad', 'bad', 'good', 'good', 'good', 'good', 'bad', 'good', 'bad', 'bad', 'good', 'good', 'good', 'good', 'good', 'bad', 'good', 'good', 'good', 'bad', 'good', 'bad', 'good', 'good', 'bad', 'good', 'bad', 'good', 'good', 'bad', 'good', 'bad', 'good', 'bad', 'good', 'bad', 'good', 'good', 'good', 'good', 'good', 'bad', 'good', 'bad', 'good', 'bad', 'good', 'bad', 'good', 'good', 'good', 'good', 'good', 'good', 'bad', 'good', 'good', 'good', 'good', 'bad', 'good', 'good', 'bad', 'good', 'good', 'good', 'good', 'bad', 'good', 'bad', 'good', 'bad', 'good', 'good', 'bad', 'bad', 'good', 'good', 'bad', 'good', 'good', 'bad', 'bad', 'bad', 'bad', 'good', 'bad', 'bad', 'good', 'good', 'good', 'bad', 'bad', 'good', 'bad', 'good', 'bad', 'good', 'bad', 'good', 'good', 'bad', 'good', 'bad', 'good', 'bad']
{'accuracy_score': 0.6933333333333334, 'balanced_accuracy_score': 0.6750858759345322, 'macro_precision_score': 0.662387556221889, 'macro_recall_score': 0.6750858759345322, 'macro_f1_score': 0.665875744516004, 'micro_precision_score': 0.6933333333333334, 'micro_recall_score': 0.6933333333333334, 'micro_f1_score': 0.6933333333333334}
('0', Pipeline(steps=[('0', SimpleImputer(strategy='most_frequent')),
                ('1',
                 RandomOverSampler(random_state=67949,
                                   sampling_strategy='not majority')),
                ('2',
                 RandomForestClassifier(class_weight='balanced',
                                        max_features='log2',
                                        min_samples_leaf=12,
                                        min_samples_split=9, n_estimators=27,
                                        random_state=67949))]))
('1', Pipeline(steps=[('0', SimpleImputer(strategy='median')),
                ('1',
                 RandomOverSampler(random_state=67949,
                                   sampling_strategy='not majority')),
                ('2',
                 RandomForestClassifier(class_weight='balanced',
                                        max_features='log2',
                                        min_samples_leaf=12,
                                        min_samples_split=9, n_estimators=27,
                                        random_state=67949))]))
('2', Pipeline(steps=[('0', SelectFwe(alpha=0.0015935695824605923)),
                ('1', SimpleImputer(strategy='most_frequent')),
                ('2',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced_subsample',
                                        criterion='entropy',
                                        max_features='log2', min_samples_leaf=7,
                                        min_samples_split=15, n_estimators=59,
                                        random_state=67949))]))
('3', Pipeline(steps=[('0', SimpleImputer(strategy='most_frequent')),
                ('1',
                 RandomOverSampler(random_state=67949,
                                   sampling_strategy='minority')),
                ('2',
                 RandomForestClassifier(class_weight='balanced',
                                        max_features='log2',
                                        min_samples_leaf=12,
                                        min_samples_split=9, n_estimators=27,
                                        random_state=67949))]))
('4', Pipeline(steps=[('0', SimpleImputer(strategy='most_frequent')),
                ('1',
                 RandomOverSampler(random_state=67949,
                                   sampling_strategy='not majority')),
                ('2',
                 RandomForestClassifier(class_weight='balanced_subsample',
                                        max_features='log2',
                                        min_samples_leaf=12,
                                        min_samples_split=9, n_estimators=27,
                                        random_state=67949))]))
('5', Pipeline(steps=[('0', SimpleImputer(strategy='most_frequent')),
                ('1',
                 RandomOverSampler(random_state=67949,
                                   sampling_strategy='minority')),
                ('2',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='sqrt', min_samples_leaf=7,
                                      min_samples_split=16, n_estimators=42,
                                      random_state=67949))]))
('6', Pipeline(steps=[('0', RobustScaler(with_centering=False, with_scaling=False)),
                ('1',
                 RandomOverSampler(random_state=67949,
                                   sampling_strategy='minority')),
                ('2',
                 ExtraTreesClassifier(bootstrap=True,
                                      class_weight='balanced_subsample',
                                      criterion='entropy', max_features='sqrt',
                                      min_samples_leaf=5, min_samples_split=18,
                                      n_estimators=11, random_state=67949))]))
('7', Pipeline(steps=[('0',
                 RandomOverSampler(random_state=67949,
                                   sampling_strategy='minority')),
                ('1',
                 RandomForestClassifier(class_weight='balanced_subsample',
                                        max_features='log2',
                                        min_samples_leaf=12,
                                        min_samples_split=5, n_estimators=16,
                                        random_state=67949))]))
('8', Pipeline(steps=[('0', SelectPercentile(percentile=92.38165698495806)),
                ('1', VarianceThreshold()), ('2', MinMaxScaler()),
                ('3',
                 RandomForestClassifier(class_weight='balanced_subsample',
                                        max_features='log2',
                                        min_samples_split=18, n_estimators=97,
                                        random_state=67949))]))
('9', Pipeline(steps=[('0', MinMaxScaler()),
                ('1',
                 RandomForestClassifier(class_weight='balanced_subsample',
                                        criterion='entropy',
                                        max_features='log2', min_samples_leaf=5,
                                        min_samples_split=12, n_estimators=30,
                                        random_state=67949))]))

['-1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '1', '-1', '1', '-1', '-1', '-1', '-1', '1', '1', '-1', '1', '1', '1', '1', '-1', '-1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '-1', '1', '1', '-1', '1', '-1', '1', '-1', '1', '1', '1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '1', '1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '1', '1', '-1', '-1', '1', '1', '1', '1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '1', '1', '1', '1', '1', '1', '1', '-1', '1', '1', '-1', '1', '-1', '-1', '-1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '-1', '-1', '1', '1', '-1', '-1', '1', '-1', '1', '1', '1', '-1', '1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '1', '1', '-1', '-1', '1', '1', '-1', '1', '1', '-1', '1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '-1', '-1', '1', '-1', '1', '-1', '1', '1', '1', '-1', '1', '1', '1', '-1', '1', '-1', '-1', '1', '1', '-1', '1', '1', '1', '1', '1', '1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '1', '1', '1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '-1', '1', '-1', '-1', '1', '-1', '1', '-1', '-1', '1', '-1', '1', '1', '1', '1', '1', '1', '1', '-1', '1', '1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '-1', '-1', '1', '1', '1', '-1', '1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '-1', '-1', '-1', '-1', '1', '1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '1', '-1', '1', '1', '-1', '-1', '1', '1', '1', '1', '1', '1', '-1', '1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '-1', '1', '-1', '-1', '1', '-1', '-1', '1', '-1', '1', '-1', '-1', '-1', '1', '1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '1', '-1', '-1', '-1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '-1', '1', '1', '-1', '-1', '1', '1', '1', '1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '-1', '-1', '1', '1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '1', '1', '-1', '1', '1', '-1', '1', '1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '1', '-1', '1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '1', '-1', '-1', '1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '1', '1', '1', '-1', '1', '1', '1', '1', '-1', '-1', '-1', '1', '-1', '1', '-1', '1', '1', '1', '-1', '-1', '-1', '1', '-1', '1', '1', '-1', '-1', '1', '-1', '1', '-1', '1', '1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '1', '-1', '1', '1', '-1', '1', '-1', '-1', '1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '-1', '1', '1', '-1', '1', '-1', '1', '-1', '1', '1', '-1', '1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '1', '1', '-1', '-1', '-1', '1', '1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '1', '-1', '1', '1', '1', '-1', '1', '1', '1', '1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '1', '1', '-1', '1', '1']
{'accuracy_score': 0.8871794871794871, 'balanced_accuracy_score': 0.8872291184515043, 'macro_precision_score': 0.8873106060606061, 'macro_recall_score': 0.8872291184515043, 'macro_f1_score': 0.8871765200925731, 'micro_precision_score': 0.8871794871794871, 'micro_recall_score': 0.8871794871794871, 'micro_f1_score': 0.8871794871794871}
('0', Pipeline(steps=[('0',
                 FeatureAgglomeration(affinity='cosine', linkage='complete',
                                      n_clusters=10)),
                ('1', RobustScaler()), ('2', MaxAbsScaler()),
                ('3',
                 KNeighborsClassifier(n_neighbors=6, p=1, weights='distance'))]))
('1', Pipeline(steps=[('0',
                 FeatureAgglomeration(affinity='cosine', linkage='average',
                                      n_clusters=11)),
                ('1', MaxAbsScaler()),
                ('2', RobustScaler(with_centering=False, with_scaling=False)),
                ('3', KNeighborsClassifier(n_neighbors=1))]))
('2', Pipeline(steps=[('0',
                 FeatureAgglomeration(affinity='manhattan', linkage='complete',
                                      n_clusters=10)),
                ('1', RobustScaler(with_scaling=False)), ('2', MaxAbsScaler()),
                ('3',
                 KNeighborsClassifier(n_neighbors=6, p=1, weights='distance'))]))
('3', Pipeline(steps=[('0', FeatureAgglomeration(n_clusters=10)),
                ('1', RobustScaler(with_centering=False)),
                ('2', MaxAbsScaler()),
                ('3', KNeighborsClassifier(n_neighbors=1, weights='distance'))]))
('4', Pipeline(steps=[('0', FeatureAgglomeration(n_clusters=10)),
                ('1', RobustScaler(with_centering=False)),
                ('2', MaxAbsScaler()),
                ('3', KNeighborsClassifier(n_neighbors=6, weights='distance'))]))
('5', Pipeline(steps=[('0',
                 FeatureAgglomeration(affinity='cosine', linkage='average',
                                      n_clusters=11)),
                ('1', RobustScaler(with_scaling=False)),
                ('2',
                 KNeighborsClassifier(n_neighbors=4, p=1, weights='distance'))]))
('6', Pipeline(steps=[('0', FeatureAgglomeration(linkage='complete', n_clusters=11)),
                ('1', VarianceThreshold()),
                ('2', KNeighborsClassifier(n_neighbors=3, p=1))]))
('7', Pipeline(steps=[('0',
                 FeatureAgglomeration(affinity='cosine', linkage='average',
                                      n_clusters=11)),
                ('1', MaxAbsScaler()),
                ('2', RobustScaler(with_centering=False, with_scaling=False)),
                ('3', KNeighborsClassifier(n_neighbors=1, weights='distance'))]))
('8', Pipeline(steps=[('0',
                 FeatureAgglomeration(affinity='manhattan', linkage='complete',
                                      n_clusters=10)),
                ('1', RobustScaler(with_centering=False, with_scaling=False)),
                ('2', MaxAbsScaler()),
                ('3',
                 KNeighborsClassifier(n_neighbors=6, p=1, weights='distance'))]))
('9', Pipeline(steps=[('0',
                 FeatureAgglomeration(affinity='manhattan', linkage='complete',
                                      n_clusters=10)),
                ('1', RobustScaler()), ('2', MaxAbsScaler()),
                ('3',
                 KNeighborsClassifier(n_neighbors=6, p=1, weights='distance'))]))

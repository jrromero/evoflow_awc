['0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '2', '2', '2', '2', '2', '2', '2', '3', '1', '3', '3', '1', '4', '4', '4', '4', '4', '5', '5', '5', '5', '5', '5', '6', '6', '6', '6', '6', '6', '7', '7', '7', '7', '7', '8', '8', '8', '8', '9', '9', '4', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '2', '2', '2', '2', '3', '3', '7', '3', '3', '3', '3', '3', '6', '1', '4', '4', '4', '4', '4', '4', '5', '5', '5', '5', '6', '6', '6', '6', '7', '7', '7', '7', '7', '7', '7', '7', '8', '8', '8', '8', '9', '9', '9', '9', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '2', '9', '3', '3', '3', '3', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '5', '5', '5', '5', '5', '5', '6', '6', '6', '6', '6', '6', '6', '7', '7', '7', '7', '7', '8', '8', '8', '8', '8', '1', '8', '8', '9', '9', '9', '9', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '2', '2', '2', '2', '2', '2', '2', '2', '2', '5', '3', '3', '3', '3', '3', '3', '4', '4', '2', '4', '4', '1', '4', '4', '4', '4', '5', '5', '6', '6', '6', '6', '6', '6', '6', '6', '4', '7', '7', '7', '7', '7', '7', '7', '8', '8', '8', '8', '8', '9', '9', '8', '9', '9', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '4', '1', '1', '1', '1', '1', '1', '7', '2', '2', '2', '2', '2', '2', '2', '2', '2', '2', '2', '2', '3', '3', '3', '3', '3', '3', '3', '3', '4', '4', '4', '4', '4', '4', '4', '4', '4', '5', '5', '5', '5', '5', '5', '5', '5', '5', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '8', '8', '8', '8', '8', '8', '8', '8', '8', '8', '8', '8', '8', '5', '9', '9', '3', '9', '9', '9', '9', '9', '8', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '2', '1', '1', '1', '1', '1', '1', '1', '2', '2', '4', '2', '4', '2', '2', '2', '3', '3', '3', '3', '3', '3', '3', '3', '3', '3', '4', '4', '4', '4', '4', '4', '4', '4', '4', '5', '5', '5', '5', '5', '9', '5', '5', '5', '5', '5', '5', '5', '5', '6', '6', '6', '6', '6', '6', '0', '6', '6', '6', '6', '6', '6', '7', '4', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '8', '8', '8', '8', '8', '8', '8', '8', '8', '8', '9', '8', '8', '9', '9', '9', '9', '9', '9', '9', '9', '9', '3', '9']
{'accuracy_score': 0.939203354297694, 'balanced_accuracy_score': 0.9357617579697116, 'macro_precision_score': 0.937773183773027, 'macro_recall_score': 0.9357617579697116, 'macro_f1_score': 0.9365731435790441, 'micro_precision_score': 0.939203354297694, 'micro_recall_score': 0.939203354297694, 'micro_f1_score': 0.939203354297694}
('0', Pipeline(steps=[('0', Normalizer()), ('1', SimpleImputer()),
                ('2', VarianceThreshold()),
                ('3',
                 ExtraTreesClassifier(class_weight='balanced_subsample',
                                      max_features='log2',
                                      random_state=38727))]))
('1', Pipeline(steps=[('0', SelectPercentile(percentile=91.22499881808429)),
                ('1', VarianceThreshold()), ('2', MinMaxScaler()),
                ('3',
                 ExtraTreesClassifier(class_weight='balanced',
                                      max_features='log2', n_estimators=98,
                                      random_state=38727))]))
('2', Pipeline(steps=[('0',
                 SMOTE(k_neighbors=2, random_state=38727,
                       sampling_strategy='not minority')),
                ('1', VarianceThreshold()), ('2', MinMaxScaler()),
                ('3',
                 ExtraTreesClassifier(class_weight='balanced',
                                      criterion='entropy', max_features='log2',
                                      n_estimators=87, random_state=38727))]))
('3', Pipeline(steps=[('0',
                 RandomOverSampler(random_state=38727,
                                   sampling_strategy='not majority')),
                ('1',
                 SMOTE(k_neighbors=2, random_state=38727,
                       sampling_strategy='not minority')),
                ('2', MinMaxScaler()),
                ('3',
                 ExtraTreesClassifier(class_weight='balanced',
                                      max_features='log2', n_estimators=96,
                                      random_state=38727))]))
('4', Pipeline(steps=[('0', Normalizer(norm='l1')), ('1', MinMaxScaler()),
                ('2', StandardScaler(with_mean=False)),
                ('3',
                 ExtraTreesClassifier(criterion='entropy', max_features='log2',
                                      n_estimators=94, random_state=38727))]))
('5', Pipeline(steps=[('0', SelectFwe(alpha=0.017320291305324465)),
                ('1', VarianceThreshold()), ('2', MinMaxScaler()),
                ('3',
                 ExtraTreesClassifier(class_weight='balanced',
                                      max_features='sqrt', min_samples_split=3,
                                      random_state=38727))]))
('6', Pipeline(steps=[('0', StandardScaler(with_mean=False, with_std=False)),
                ('1',
                 ExtraTreesClassifier(max_features='log2', min_samples_split=4,
                                      n_estimators=69, random_state=38727))]))
('7', Pipeline(steps=[('0', Normalizer()),
                ('1', SimpleImputer(strategy='most_frequent')),
                ('2', VarianceThreshold()),
                ('3',
                 ExtraTreesClassifier(class_weight='balanced_subsample',
                                      max_features='log2',
                                      random_state=38727))]))
('8', Pipeline(steps=[('0', StandardScaler()),
                ('1',
                 MLPClassifier(alpha=0.06351606128507689,
                               learning_rate_init=0.003260134928570579,
                               random_state=38727))]))
('9', Pipeline(steps=[('0', Normalizer()), ('1', SimpleImputer(strategy='median')),
                ('2', VarianceThreshold()),
                ('3',
                 ExtraTreesClassifier(class_weight='balanced_subsample',
                                      max_features='sqrt',
                                      random_state=38727))]))

['0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '2', '2', '2', '2', '2', '2', '2', '3', '1', '3', '3', '1', '4', '4', '4', '4', '4', '5', '7', '5', '5', '5', '5', '6', '6', '6', '6', '6', '6', '7', '7', '7', '7', '7', '8', '8', '8', '8', '9', '9', '1', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '2', '2', '2', '2', '3', '3', '7', '3', '3', '3', '3', '3', '6', '1', '4', '4', '4', '4', '4', '4', '5', '5', '5', '5', '6', '6', '6', '6', '7', '7', '7', '7', '7', '7', '7', '7', '8', '8', '8', '8', '9', '9', '9', '9', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '2', '3', '3', '3', '3', '3', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '5', '5', '5', '5', '5', '5', '6', '6', '6', '6', '6', '6', '6', '7', '7', '7', '7', '7', '8', '8', '8', '8', '8', '7', '8', '8', '9', '9', '9', '9', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '2', '2', '2', '2', '2', '2', '2', '2', '2', '5', '3', '3', '3', '3', '3', '3', '4', '4', '2', '4', '4', '1', '4', '4', '4', '4', '5', '5', '6', '6', '6', '6', '6', '6', '6', '6', '7', '7', '7', '7', '7', '7', '7', '7', '8', '8', '8', '8', '8', '9', '9', '8', '9', '9', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '4', '1', '1', '1', '1', '1', '1', '1', '2', '2', '2', '2', '2', '2', '2', '2', '2', '2', '2', '2', '3', '3', '3', '3', '3', '3', '3', '3', '4', '4', '4', '4', '4', '4', '4', '4', '4', '5', '5', '5', '5', '5', '5', '5', '3', '5', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '8', '8', '8', '8', '8', '8', '8', '8', '8', '8', '8', '8', '8', '5', '9', '9', '3', '9', '9', '9', '9', '9', '8', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '2', '1', '1', '1', '1', '1', '1', '1', '2', '2', '4', '2', '6', '2', '2', '2', '3', '3', '3', '3', '3', '3', '3', '3', '3', '3', '4', '4', '1', '4', '4', '4', '4', '4', '4', '5', '5', '5', '5', '5', '9', '5', '5', '5', '5', '5', '5', '5', '5', '6', '6', '6', '6', '6', '6', '0', '6', '6', '6', '6', '6', '6', '7', '4', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '8', '8', '8', '8', '8', '8', '8', '9', '8', '8', '5', '8', '8', '9', '9', '9', '9', '9', '9', '9', '9', '9', '3', '9']
{'accuracy_score': 0.9371069182389937, 'balanced_accuracy_score': 0.9328088500213635, 'macro_precision_score': 0.9359381091089028, 'macro_recall_score': 0.9328088500213635, 'macro_f1_score': 0.9340048866142665, 'micro_precision_score': 0.9371069182389937, 'micro_recall_score': 0.9371069182389937, 'micro_f1_score': 0.9371069182389937}
('0', Pipeline(steps=[('0',
                 SMOTE(random_state=76083, sampling_strategy='not minority')),
                ('1', MinMaxScaler()),
                ('2',
                 ExtraTreesClassifier(class_weight='balanced_subsample',
                                      max_features='log2', min_samples_split=4,
                                      n_estimators=88, random_state=76083))]))
('1', Pipeline(steps=[('0', SelectFwe(alpha=0.017659514116251454)),
                ('1',
                 ExtraTreesClassifier(class_weight='balanced_subsample',
                                      criterion='entropy', max_features='log2',
                                      min_samples_split=4, n_estimators=88,
                                      random_state=76083))]))
('2', Pipeline(steps=[('0', VarianceThreshold()), ('1', MaxAbsScaler()),
                ('2',
                 ExtraTreesClassifier(max_features='sqrt', min_samples_split=3,
                                      n_estimators=59, random_state=76083))]))
('3', Pipeline(steps=[('0',
                 SMOTE(k_neighbors=4, random_state=76083,
                       sampling_strategy='not majority')),
                ('1', MinMaxScaler()),
                ('2',
                 ExtraTreesClassifier(criterion='entropy', max_features='log2',
                                      n_estimators=88, random_state=76083))]))
('4', Pipeline(steps=[('0', SelectFwe(alpha=0.013538048703817099)),
                ('1',
                 ExtraTreesClassifier(class_weight='balanced_subsample',
                                      criterion='entropy', max_features='log2',
                                      min_samples_split=4, n_estimators=88,
                                      random_state=76083))]))
('5', Pipeline(steps=[('0', MinMaxScaler()),
                ('1',
                 ExtraTreesClassifier(class_weight='balanced_subsample',
                                      max_features='log2', min_samples_split=5,
                                      n_estimators=88, random_state=76083))]))
('6', Pipeline(steps=[('0',
                 RandomOverSampler(random_state=76083,
                                   sampling_strategy='not minority')),
                ('1',
                 ExtraTreesClassifier(class_weight='balanced',
                                      max_features='log2', n_estimators=91,
                                      random_state=76083))]))
('7', Pipeline(steps=[('0', Normalizer()),
                ('1',
                 ExtraTreesClassifier(bootstrap=True, class_weight='balanced',
                                      max_features='log2', min_samples_split=3,
                                      n_estimators=88, random_state=76083))]))
('8', Pipeline(steps=[('0', Normalizer(norm='max')), ('1', MinMaxScaler()),
                ('2',
                 SMOTE(k_neighbors=3, random_state=76083,
                       sampling_strategy='not majority')),
                ('3',
                 ExtraTreesClassifier(class_weight='balanced_subsample',
                                      max_features='log2', min_samples_split=5,
                                      n_estimators=88, random_state=76083))]))
('9', Pipeline(steps=[('0', VarianceThreshold()), ('1', MinMaxScaler()),
                ('2',
                 SMOTE(k_neighbors=3, random_state=76083,
                       sampling_strategy='not majority')),
                ('3',
                 ExtraTreesClassifier(class_weight='balanced',
                                      max_features='log2', min_samples_split=5,
                                      n_estimators=58, random_state=76083))]))


{'accuracy_score': 0.9449275362318841, 'balanced_accuracy_score': 0.7925485008818343, 'macro_precision_score': 0.7583722741433021, 'macro_recall_score': 0.7925485008818343, 'macro_f1_score': 0.7741602067183463, 'micro_precision_score': 0.9449275362318841, 'micro_recall_score': 0.9449275362318841, 'micro_f1_score': 0.9449275362318841}
('0', Pipeline(steps=[('0', MaxAbsScaler()), ('1', MinMaxScaler()),
                ('2', VarianceThreshold()),
                ('3',
                 SGDClassifier(alpha=6.0551766755772844e-05,
                               class_weight='balanced',
                               epsilon=1.0634756489158749e-05,
                               eta0=1.5355226410385686e-06,
                               l1_ratio=0.4044707756122131,
                               loss='squared_hinge',
                               power_t=0.41046772272763543, random_state=3,
                               tol=0.0011988651684115346))]))
('1', Pipeline(steps=[('0', VarianceThreshold()),
                ('1',
                 SGDClassifier(alpha=6.0551766755772844e-05,
                               class_weight='balanced',
                               epsilon=1.0634756489158749e-05,
                               eta0=1.5355226410385686e-06,
                               l1_ratio=0.4044707756122131,
                               loss='squared_hinge',
                               power_t=0.41046772272763543, random_state=3,
                               tol=0.0011988651684115346))]))
('2', Pipeline(steps=[('0', Normalizer()), ('1', MinMaxScaler()),
                ('2',
                 SGDClassifier(alpha=7.448680598818629e-06, average=True,
                               class_weight='balanced',
                               epsilon=0.038512027281996444,
                               eta0=4.143519667479422e-07,
                               l1_ratio=1.2386136506783467e-09,
                               power_t=0.8538745011868982, random_state=3,
                               tol=1.492119795954643e-05))]))
('3', Pipeline(steps=[('0', MinMaxScaler()),
                ('1',
                 SGDClassifier(alpha=7.448680598818629e-06, average=True,
                               class_weight='balanced',
                               epsilon=0.038512027281996444,
                               eta0=4.143519667479422e-07,
                               l1_ratio=1.2386136506783467e-09,
                               power_t=0.3898712328891275, random_state=3,
                               tol=1.492119795954643e-05))]))
('4', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1',
                 PCA(n_components=0.956252669339332, random_state=3,
                     whiten=True)),
                ('2', VarianceThreshold()),
                ('3', BernoulliNB(alpha=2.768770954125306, fit_prior=False))]))
('5', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1', SelectFwe(alpha=0.034395850292158955)),
                ('2',
                 ExtraTreesClassifier(bootstrap=True,
                                      class_weight='balanced_subsample',
                                      criterion='entropy', max_features='sqrt',
                                      min_samples_leaf=9, min_samples_split=9,
                                      n_estimators=32, random_state=3))]))
('6', Pipeline(steps=[('0',
                 RandomUnderSampler(random_state=3,
                                    sampling_strategy='not minority')),
                ('1',
                 LogisticRegression(C=0.000264009408432984,
                                    class_weight='balanced', random_state=3))]))
('7', Pipeline(steps=[('0', SMOTETomek(random_state=3, sampling_strategy='minority')),
                ('1',
                 LinearSVC(C=0.17938274300919646, dual=False, penalty='l1',
                           random_state=3, tol=0.0008935531187093284))]))
('8', Pipeline(steps=[('0', RobustScaler(with_centering=False, with_scaling=False)),
                ('1', MinMaxScaler()),
                ('2',
                 DecisionTreeClassifier(class_weight='balanced',
                                        criterion='entropy',
                                        max_depth=1.8217856769204364,
                                        max_features=0.6482498624748614,
                                        min_samples_leaf=3, min_samples_split=9,
                                        random_state=3))]))
('9', Pipeline(steps=[('0',
                 Nystroem(coef0=-0.06389408438627409, degree=3,
                          gamma=0.4156018313741125, kernel='poly',
                          n_components=71, random_state=3)),
                ('1',
                 RandomUnderSampler(random_state=3,
                                    sampling_strategy='not majority')),
                ('2',
                 DecisionTreeClassifier(class_weight='balanced',
                                        criterion='entropy',
                                        max_depth=1.8217856769204364,
                                        max_features=0.6482498624748614,
                                        min_samples_leaf=3, min_samples_split=9,
                                        random_state=3))]))

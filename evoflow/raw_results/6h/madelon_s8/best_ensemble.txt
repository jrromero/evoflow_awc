['-1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '1', '-1', '-1', '-1', '-1', '1', '1', '-1', '1', '1', '1', '1', '-1', '-1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '-1', '1', '1', '-1', '1', '-1', '1', '-1', '1', '1', '1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '-1', '1', '1', '1', '-1', '-1', '1', '1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '1', '1', '-1', '-1', '1', '1', '1', '1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '1', '1', '1', '1', '1', '1', '1', '-1', '1', '1', '-1', '1', '-1', '-1', '-1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '1', '1', '1', '-1', '1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '1', '1', '-1', '-1', '1', '1', '-1', '1', '1', '-1', '1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '1', '-1', '-1', '1', '-1', '1', '-1', '1', '1', '1', '-1', '1', '1', '1', '-1', '1', '-1', '-1', '1', '1', '-1', '1', '1', '1', '1', '1', '1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '1', '1', '1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '-1', '1', '-1', '1', '1', '-1', '1', '-1', '-1', '1', '-1', '1', '1', '1', '1', '1', '1', '1', '-1', '1', '1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '-1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '-1', '-1', '-1', '-1', '1', '1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '1', '-1', '1', '1', '-1', '-1', '1', '1', '1', '1', '1', '1', '-1', '1', '1', '-1', '1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '1', '1', '-1', '-1', '-1', '1', '1', '1', '-1', '1', '-1', '-1', '1', '-1', '-1', '1', '1', '1', '-1', '-1', '-1', '1', '1', '-1', '1', '1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '1', '-1', '-1', '-1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '-1', '1', '1', '-1', '-1', '1', '1', '1', '1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '-1', '-1', '1', '1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '1', '1', '-1', '1', '1', '-1', '1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '1', '-1', '1', '-1', '-1', '-1', '-1', '1', '1', '-1', '1', '-1', '-1', '-1', '1', '-1', '1', '1', '-1', '1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '1', '-1', '1', '1', '-1', '-1', '1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '1', '1', '1', '-1', '1', '1', '1', '1', '-1', '-1', '-1', '1', '-1', '1', '-1', '1', '1', '1', '-1', '-1', '-1', '1', '-1', '1', '1', '-1', '-1', '1', '-1', '1', '-1', '1', '1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '1', '-1', '1', '1', '-1', '1', '-1', '-1', '1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '-1', '1', '1', '-1', '1', '-1', '1', '-1', '1', '1', '-1', '1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '1', '1', '-1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '1', '1', '-1', '-1', '1', '-1', '1', '1', '1', '-1', '1', '1', '1', '1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '1', '1', '1', '1', '1']
{'accuracy_score': 0.8961538461538462, 'balanced_accuracy_score': 0.8962234378287397, 'macro_precision_score': 0.896424131194127, 'macro_recall_score': 0.8962234378287397, 'macro_f1_score': 0.8961454818024464, 'micro_precision_score': 0.8961538461538462, 'micro_recall_score': 0.8961538461538462, 'micro_f1_score': 0.8961538461538462}
('0', Pipeline(steps=[('0', VarianceThreshold()),
                ('1',
                 SMOTE(k_neighbors=2, random_state=8,
                       sampling_strategy='minority')),
                ('2',
                 FeatureAgglomeration(affinity='cosine', linkage='complete',
                                      n_clusters=16)),
                ('3', KNeighborsClassifier(p=1, weights='distance'))]))
('1', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1', FeatureAgglomeration(linkage='average', n_clusters=15)),
                ('2', KNeighborsClassifier(n_neighbors=4, weights='distance'))]))
('2', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1', FeatureAgglomeration(linkage='complete', n_clusters=17)),
                ('2', KNeighborsClassifier(n_neighbors=6, weights='distance'))]))
('3', Pipeline(steps=[('0', VarianceThreshold()), ('1', MinMaxScaler()),
                ('2', FeatureAgglomeration(n_clusters=15)),
                ('3',
                 KNeighborsClassifier(n_neighbors=10, weights='distance'))]))
('4', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1',
                 FeatureAgglomeration(affinity='manhattan', linkage='average',
                                      n_clusters=16)),
                ('2', KNeighborsClassifier(n_neighbors=4, weights='distance'))]))
('5', Pipeline(steps=[('0', VarianceThreshold()), ('1', MaxAbsScaler()),
                ('2',
                 FeatureAgglomeration(affinity='manhattan', linkage='average',
                                      n_clusters=16)),
                ('3', KNeighborsClassifier(n_neighbors=8, weights='distance'))]))
('6', Pipeline(steps=[('0', VarianceThreshold()), ('1', MinMaxScaler()),
                ('2', FeatureAgglomeration(n_clusters=16)),
                ('3',
                 KNeighborsClassifier(n_neighbors=10, weights='distance'))]))
('7', Pipeline(steps=[('0', VarianceThreshold()), ('1', MinMaxScaler()),
                ('2', FeatureAgglomeration(n_clusters=14)),
                ('3', KNeighborsClassifier(n_neighbors=1))]))
('8', Pipeline(steps=[('0', VarianceThreshold()), ('1', MinMaxScaler()),
                ('2', FeatureAgglomeration(n_clusters=14)),
                ('3', KNeighborsClassifier(n_neighbors=3))]))
('9', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1',
                 FeatureAgglomeration(affinity='manhattan', linkage='complete',
                                      n_clusters=19)),
                ('2', KNeighborsClassifier(n_neighbors=4, weights='distance'))]))

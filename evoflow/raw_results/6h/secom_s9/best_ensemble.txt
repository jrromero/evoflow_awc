
{'accuracy_score': 0.8063829787234043, 'balanced_accuracy_score': 0.6230260283378066, 'macro_precision_score': 0.5607883049592894, 'macro_recall_score': 0.6230260283378066, 'macro_f1_score': 0.5684113865932048, 'micro_precision_score': 0.8063829787234043, 'micro_recall_score': 0.8063829787234043, 'micro_f1_score': 0.8063829787234043}
('0', Pipeline(steps=[('0', MaxAbsScaler()), ('1', VarianceThreshold()),
                ('2', KNNImputer(weights='distance')),
                ('3',
                 DecisionTreeClassifier(class_weight='balanced',
                                        max_depth=1.8772972232707406,
                                        max_features=0.85868565311536,
                                        min_samples_leaf=6,
                                        min_samples_split=13,
                                        random_state=9))]))
('1', Pipeline(steps=[('0', SimpleImputer(strategy='median')),
                ('1',
                 DecisionTreeClassifier(class_weight='balanced',
                                        max_depth=1.8772972232707406,
                                        max_features=0.85868565311536,
                                        min_samples_leaf=6,
                                        min_samples_split=13,
                                        random_state=9))]))
('2', Pipeline(steps=[('0', SimpleImputer(strategy='most_frequent')),
                ('1',
                 DecisionTreeClassifier(class_weight='balanced',
                                        max_depth=1.8772972232707406,
                                        max_features=0.85868565311536,
                                        min_samples_leaf=6,
                                        min_samples_split=13,
                                        random_state=9))]))
('3', Pipeline(steps=[('0', KNNImputer(weights='distance')), ('1', MaxAbsScaler()),
                ('2',
                 DecisionTreeClassifier(class_weight='balanced',
                                        criterion='entropy',
                                        max_depth=1.8772972232707406,
                                        max_features=0.85868565311536,
                                        min_samples_leaf=6,
                                        min_samples_split=13,
                                        random_state=9))]))
('4', Pipeline(steps=[('0', MinMaxScaler()), ('1', SimpleImputer(strategy='median')),
                ('2', GaussianNB(var_smoothing=1.9581770399856056e-05))]))
('5', Pipeline(steps=[('0', SimpleImputer(strategy='median')),
                ('1', VarianceThreshold()),
                ('2',
                 SMOTE(k_neighbors=4, random_state=9,
                       sampling_strategy='not majority')),
                ('3',
                 DecisionTreeClassifier(max_depth=1.6566044995427984,
                                        max_features=0.85868565311536,
                                        min_samples_leaf=6,
                                        min_samples_split=13,
                                        random_state=9))]))
('6', Pipeline(steps=[('0', VarianceThreshold()), ('1', MinMaxScaler()),
                ('2', SimpleImputer()),
                ('3', GaussianNB(var_smoothing=0.0020157029439802337))]))
('7', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1', SimpleImputer(strategy='most_frequent')),
                ('2',
                 DecisionTreeClassifier(class_weight='balanced',
                                        criterion='entropy',
                                        max_depth=1.7856495248887314,
                                        max_features=0.36284069352116854,
                                        min_samples_leaf=17,
                                        min_samples_split=13,
                                        random_state=9))]))
('8', Pipeline(steps=[('0', VarianceThreshold()), ('1', SimpleImputer()),
                ('2',
                 DecisionTreeClassifier(class_weight='balanced',
                                        max_depth=1.8772972232707406,
                                        max_features=0.85868565311536,
                                        min_samples_leaf=6,
                                        min_samples_split=13,
                                        random_state=9))]))
('9', Pipeline(steps=[('0', MaxAbsScaler()), ('1', VarianceThreshold()),
                ('2', KNNImputer()),
                ('3',
                 DecisionTreeClassifier(class_weight='balanced',
                                        max_depth=1.8772972232707406,
                                        max_features=0.8174743930464998,
                                        min_samples_leaf=6,
                                        min_samples_split=13,
                                        random_state=9))]))

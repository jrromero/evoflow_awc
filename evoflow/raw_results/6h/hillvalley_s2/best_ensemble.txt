
{'accuracy_score': 1.0, 'balanced_accuracy_score': 1.0, 'macro_precision_score': 1.0, 'macro_recall_score': 1.0, 'macro_f1_score': 1.0, 'micro_precision_score': 1.0, 'micro_recall_score': 1.0, 'micro_f1_score': 1.0}
('0', Pipeline(steps=[('0', Normalizer(norm='l1')),
                ('1', SMOTE(random_state=2, sampling_strategy='not majority')),
                ('2', KNeighborsClassifier(n_neighbors=6, p=1))]))
('1', Pipeline(steps=[('0',
                 Nystroem(coef0=-0.24993474261396242, degree=3,
                          gamma=0.0005270925481273124, kernel='cosine',
                          n_components=26, random_state=2)),
                ('1', PCA(n_components=0.8547868134940708, random_state=2)),
                ('2',
                 RandomOverSampler(random_state=2,
                                   sampling_strategy='not minority')),
                ('3', KNeighborsClassifier(n_neighbors=6, weights='distance'))]))
('2', Pipeline(steps=[('0', Normalizer(norm='l1')),
                ('1',
                 SMOTE(k_neighbors=4, random_state=2,
                       sampling_strategy='minority')),
                ('2', KNeighborsClassifier(n_neighbors=25, p=1))]))
('3', Pipeline(steps=[('0', Normalizer(norm='max')), ('1', MaxAbsScaler()),
                ('2', StandardScaler()),
                ('3',
                 PassiveAggressiveClassifier(C=0.2770312280117449,
                                             fit_intercept=False,
                                             loss='squared_hinge',
                                             random_state=2))]))
('4', Pipeline(steps=[('0',
                 Nystroem(coef0=-0.24993474261396242, degree=3,
                          gamma=0.7649793288789279, kernel='cosine',
                          n_components=26, random_state=2)),
                ('1', PCA(n_components=0.8547868134940708, random_state=2)),
                ('2',
                 RandomOverSampler(random_state=2,
                                   sampling_strategy='not minority')),
                ('3', KNeighborsClassifier(n_neighbors=1, weights='distance'))]))
('5', Pipeline(steps=[('0', MaxAbsScaler()), ('1', Normalizer(norm='max')),
                ('2', SimpleImputer(strategy='most_frequent')),
                ('3', KNeighborsClassifier(n_neighbors=1, weights='distance'))]))
('6', Pipeline(steps=[('0', Normalizer(norm='l1')), ('1', MaxAbsScaler()),
                ('2', StandardScaler(with_mean=False, with_std=False)),
                ('3', KNeighborsClassifier(n_neighbors=2, weights='distance'))]))
('7', Pipeline(steps=[('0', MaxAbsScaler()), ('1', Normalizer(norm='l1')),
                ('2', SimpleImputer(strategy='median')),
                ('3', KNeighborsClassifier(n_neighbors=6, p=1))]))
('8', Pipeline(steps=[('0', Normalizer(norm='l1')), ('1', MaxAbsScaler()),
                ('2', StandardScaler(with_std=False)),
                ('3', KNeighborsClassifier(n_neighbors=2, weights='distance'))]))
('9', Pipeline(steps=[('0', Normalizer(norm='l1')),
                ('1',
                 SMOTE(k_neighbors=4, random_state=2,
                       sampling_strategy='not majority')),
                ('2', MaxAbsScaler()),
                ('3', KNeighborsClassifier(n_neighbors=2))]))

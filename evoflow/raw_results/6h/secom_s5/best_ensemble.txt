
{'accuracy_score': 0.7957446808510639, 'balanced_accuracy_score': 0.6296111353848075, 'macro_precision_score': 0.5602076024239613, 'macro_recall_score': 0.6296111353848075, 'macro_f1_score': 0.5658866995073892, 'micro_precision_score': 0.7957446808510639, 'micro_recall_score': 0.7957446808510639, 'micro_f1_score': 0.7957446808510639}
('0', Pipeline(steps=[('0', KNNImputer(n_neighbors=4, weights='distance')),
                ('1', MaxAbsScaler()),
                ('2',
                 DecisionTreeClassifier(class_weight='balanced',
                                        max_depth=1.8921716380028952,
                                        max_features=0.66942907871232,
                                        min_samples_leaf=6,
                                        min_samples_split=11,
                                        random_state=5))]))
('1', Pipeline(steps=[('0', KNNImputer(n_neighbors=4, weights='distance')),
                ('1', MaxAbsScaler()),
                ('2',
                 DecisionTreeClassifier(class_weight='balanced',
                                        max_depth=1.8921716380028952,
                                        max_features=0.33362237951540574,
                                        min_samples_leaf=6,
                                        min_samples_split=11,
                                        random_state=5))]))
('2', Pipeline(steps=[('0', SimpleImputer(strategy='most_frequent')),
                ('1', SMOTETomek(random_state=5, sampling_strategy='minority')),
                ('2', SelectFwe(alpha=0.01925965808248894)),
                ('3',
                 DecisionTreeClassifier(max_depth=1.1605216934427616,
                                        max_features=0.23916405291749565,
                                        min_samples_leaf=13,
                                        min_samples_split=11,
                                        random_state=5))]))
('3', Pipeline(steps=[('0', MinMaxScaler()), ('1', KNNImputer(n_neighbors=4)),
                ('2',
                 SMOTETomek(random_state=5, sampling_strategy='not minority')),
                ('3',
                 DecisionTreeClassifier(class_weight='balanced',
                                        max_depth=1.8921716380028952,
                                        max_features=0.26526545063683515,
                                        min_samples_leaf=10,
                                        min_samples_split=7, random_state=5))]))
('4', Pipeline(steps=[('0', SimpleImputer(strategy='most_frequent')),
                ('1', SMOTETomek(random_state=5, sampling_strategy='minority')),
                ('2', SelectFwe(alpha=0.01925965808248894)),
                ('3',
                 DecisionTreeClassifier(class_weight='balanced',
                                        max_depth=1.1605216934427616,
                                        max_features=0.23916405291749565,
                                        min_samples_leaf=13,
                                        min_samples_split=11,
                                        random_state=5))]))
('5', Pipeline(steps=[('0', KNNImputer(n_neighbors=6, weights='distance')),
                ('1', MaxAbsScaler()),
                ('2',
                 DecisionTreeClassifier(class_weight='balanced',
                                        max_depth=1.8921716380028952,
                                        max_features=0.6364193209468625,
                                        min_samples_split=11,
                                        random_state=5))]))
('6', Pipeline(steps=[('0', MinMaxScaler()),
                ('1', KNNImputer(n_neighbors=8, weights='distance')),
                ('2', SMOTETomek(random_state=5, sampling_strategy='minority')),
                ('3',
                 QuadraticDiscriminantAnalysis(reg_param=0.7064983591524269))]))
('7', Pipeline(steps=[('0', MinMaxScaler()),
                ('1', KNNImputer(n_neighbors=8, weights='distance')),
                ('2',
                 SMOTETomek(random_state=5, sampling_strategy='not minority')),
                ('3',
                 DecisionTreeClassifier(class_weight='balanced',
                                        max_depth=1.4069409287551042,
                                        max_features=0.2060256983682106,
                                        min_samples_leaf=8,
                                        min_samples_split=20,
                                        random_state=5))]))
('8', Pipeline(steps=[('0', MinMaxScaler()),
                ('1', KNNImputer(n_neighbors=4, weights='distance')),
                ('2',
                 SMOTETomek(random_state=5, sampling_strategy='not minority')),
                ('3', BernoulliNB(alpha=0.0209303820835748, fit_prior=False))]))
('9', Pipeline(steps=[('0', MinMaxScaler()),
                ('1', KNNImputer(n_neighbors=7, weights='distance')),
                ('2',
                 SMOTETomek(random_state=5, sampling_strategy='not minority')),
                ('3',
                 DecisionTreeClassifier(class_weight='balanced',
                                        criterion='entropy',
                                        max_depth=1.9339660104316099,
                                        max_features=0.2060256983682106,
                                        min_samples_leaf=8, min_samples_split=7,
                                        random_state=5))]))

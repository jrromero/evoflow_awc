
{'accuracy_score': 1.0, 'balanced_accuracy_score': 1.0, 'macro_precision_score': 1.0, 'macro_recall_score': 1.0, 'macro_f1_score': 1.0, 'micro_precision_score': 1.0, 'micro_recall_score': 1.0, 'micro_f1_score': 1.0}
('0', Pipeline(steps=[('0', Normalizer(norm='max')),
                ('1', SimpleImputer(strategy='median')),
                ('2', KNeighborsClassifier(n_neighbors=11))]))
('1', Pipeline(steps=[('0', Normalizer(norm='max')),
                ('1', SimpleImputer(strategy='median')),
                ('2', KNeighborsClassifier(n_neighbors=10))]))
('2', Pipeline(steps=[('0', Normalizer(norm='max')),
                ('1', KNeighborsClassifier(n_neighbors=9))]))
('3', Pipeline(steps=[('0', Normalizer(norm='l1')),
                ('1', SimpleImputer(strategy='median')),
                ('2', KNeighborsClassifier(n_neighbors=4))]))
('4', Pipeline(steps=[('0', Normalizer(norm='max')), ('1', SimpleImputer()),
                ('2', KNeighborsClassifier(n_neighbors=1))]))
('5', Pipeline(steps=[('0', Normalizer(norm='max')),
                ('1', SimpleImputer(strategy='median')),
                ('2', KNeighborsClassifier(n_neighbors=1))]))
('6', Pipeline(steps=[('0', Normalizer()), ('1', SimpleImputer()),
                ('2', KNeighborsClassifier(n_neighbors=1))]))
('7', Pipeline(steps=[('0', Normalizer()), ('1', SimpleImputer(strategy='median')),
                ('2', KNeighborsClassifier(n_neighbors=4, weights='distance'))]))
('8', Pipeline(steps=[('0', Normalizer(norm='l1')),
                ('1', KNeighborsClassifier(n_neighbors=2, p=1))]))
('9', Pipeline(steps=[('0', Normalizer()),
                ('1', KNeighborsClassifier(n_neighbors=3))]))


{'accuracy_score': 0.7829787234042553, 'balanced_accuracy_score': 0.6350415080207228, 'macro_precision_score': 0.5589044079610117, 'macro_recall_score': 0.6350415080207228, 'macro_f1_score': 0.5615671641791045, 'micro_precision_score': 0.7829787234042553, 'micro_recall_score': 0.7829787234042553, 'micro_f1_score': 0.7829787234042553}
('0', Pipeline(steps=[('0', MinMaxScaler()),
                ('1', SimpleImputer(strategy='most_frequent')),
                ('2',
                 SMOTE(k_neighbors=4, random_state=8,
                       sampling_strategy='not majority')),
                ('3',
                 AdaBoostClassifier(learning_rate=0.0117659469267194,
                                    n_estimators=52, random_state=8))]))
('1', Pipeline(steps=[('0', MinMaxScaler()), ('1', SimpleImputer(strategy='median')),
                ('2',
                 SMOTE(k_neighbors=3, random_state=8,
                       sampling_strategy='not majority')),
                ('3',
                 AdaBoostClassifier(learning_rate=0.0117659469267194,
                                    n_estimators=52, random_state=8))]))
('2', Pipeline(steps=[('0', MinMaxScaler()),
                ('1', SimpleImputer(strategy='most_frequent')),
                ('2',
                 SMOTE(k_neighbors=4, random_state=8,
                       sampling_strategy='minority')),
                ('3',
                 AdaBoostClassifier(learning_rate=0.0117659469267194,
                                    n_estimators=52, random_state=8))]))
('3', Pipeline(steps=[('0', MinMaxScaler()),
                ('1', SimpleImputer(strategy='most_frequent')),
                ('2',
                 SMOTE(k_neighbors=4, random_state=8,
                       sampling_strategy='minority')),
                ('3',
                 AdaBoostClassifier(algorithm='SAMME',
                                    learning_rate=0.0117659469267194,
                                    n_estimators=52, random_state=8))]))
('4', Pipeline(steps=[('0', MinMaxScaler()),
                ('1', SimpleImputer(strategy='most_frequent')),
                ('2',
                 SMOTE(k_neighbors=4, random_state=8,
                       sampling_strategy='not majority')),
                ('3',
                 AdaBoostClassifier(learning_rate=0.0117659469267194,
                                    n_estimators=76, random_state=8))]))
('5', Pipeline(steps=[('0', MinMaxScaler()), ('1', KNNImputer(n_neighbors=4)),
                ('2',
                 DecisionTreeClassifier(class_weight='balanced',
                                        criterion='entropy',
                                        max_depth=1.7477572407061979,
                                        max_features=0.7745080087952383,
                                        min_samples_leaf=4,
                                        min_samples_split=13,
                                        random_state=8))]))
('6', Pipeline(steps=[('0',
                 RandomOverSampler(random_state=8,
                                   sampling_strategy='minority')),
                ('1', KNNImputer(n_neighbors=8)),
                ('2',
                 SMOTE(k_neighbors=4, random_state=8,
                       sampling_strategy='not minority')),
                ('3',
                 AdaBoostClassifier(algorithm='SAMME',
                                    learning_rate=0.2913278078103628,
                                    n_estimators=52, random_state=8))]))
('7', Pipeline(steps=[('0', MaxAbsScaler()), ('1', KNNImputer(n_neighbors=9)),
                ('2', GaussianNB(var_smoothing=0.007661173723722483))]))
('8', Pipeline(steps=[('0', MinMaxScaler()),
                ('1', SimpleImputer(strategy='most_frequent')),
                ('2',
                 SMOTE(k_neighbors=4, random_state=8,
                       sampling_strategy='not majority')),
                ('3',
                 AdaBoostClassifier(algorithm='SAMME',
                                    learning_rate=0.01007055380180111,
                                    n_estimators=98, random_state=8))]))
('9', Pipeline(steps=[('0', MinMaxScaler()), ('1', SimpleImputer(strategy='median')),
                ('2',
                 SMOTE(k_neighbors=3, random_state=8,
                       sampling_strategy='not majority')),
                ('3',
                 AdaBoostClassifier(learning_rate=0.027672904877054358,
                                    n_estimators=52, random_state=8))]))

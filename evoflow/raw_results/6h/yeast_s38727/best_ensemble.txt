['POX', 'NUC', 'CYT', 'NUC', 'CYT', 'EXC', 'CYT', 'CYT', 'MIT', 'ME1', 'ME1', 'EXC', 'MIT', 'ME1', 'CYT', 'NUC', 'CYT', 'MIT', 'MIT', 'NUC', 'ME3', 'CYT', 'CYT', 'ME1', 'MIT', 'MIT', 'MIT', 'POX', 'ME3', 'NUC', 'ME1', 'ME3', 'CYT', 'CYT', 'EXC', 'POX', 'NUC', 'MIT', 'CYT', 'EXC', 'ME3', 'NUC', 'NUC', 'CYT', 'NUC', 'CYT', 'MIT', 'NUC', 'CYT', 'NUC', 'CYT', 'NUC', 'NUC', 'MIT', 'NUC', 'MIT', 'POX', 'NUC', 'CYT', 'ME1', 'ME1', 'MIT', 'MIT', 'ME3', 'MIT', 'MIT', 'MIT', 'EXC', 'CYT', 'NUC', 'EXC', 'EXC', 'CYT', 'ME2', 'CYT', 'NUC', 'EXC', 'EXC', 'CYT', 'CYT', 'CYT', 'CYT', 'ME3', 'POX', 'NUC', 'NUC', 'CYT', 'NUC', 'MIT', 'NUC', 'ME3', 'NUC', 'ME3', 'CYT', 'ME3', 'NUC', 'MIT', 'ME2', 'ME3', 'CYT', 'ME3', 'ME3', 'NUC', 'ME1', 'ERL', 'NUC', 'MIT', 'ME3', 'ME3', 'POX', 'ME3', 'ME1', 'ME1', 'CYT', 'ME3', 'ME3', 'ME1', 'NUC', 'NUC', 'NUC', 'MIT', 'ME3', 'NUC', 'NUC', 'ME3', 'CYT', 'NUC', 'CYT', 'ME3', 'CYT', 'CYT', 'NUC', 'ME2', 'ME2', 'NUC', 'NUC', 'MIT', 'NUC', 'NUC', 'CYT', 'NUC', 'MIT', 'NUC', 'CYT', 'NUC', 'NUC', 'MIT', 'MIT', 'ME3', 'NUC', 'CYT', 'NUC', 'MIT', 'MIT', 'MIT', 'NUC', 'CYT', 'ME3', 'ME3', 'CYT', 'MIT', 'MIT', 'CYT', 'MIT', 'CYT', 'NUC', 'ME1', 'ME3', 'NUC', 'MIT', 'ME1', 'NUC', 'ERL', 'MIT', 'ME3', 'ME2', 'ME2', 'NUC', 'NUC', 'NUC', 'ME3', 'ME3', 'ME2', 'CYT', 'NUC', 'NUC', 'ME3', 'ME2', 'CYT', 'MIT', 'CYT', 'MIT', 'MIT', 'ME3', 'CYT', 'MIT', 'ME3', 'NUC', 'NUC', 'MIT', 'CYT', 'NUC', 'NUC', 'NUC', 'MIT', 'MIT', 'MIT', 'MIT', 'CYT', 'CYT', 'MIT', 'MIT', 'MIT', 'ME3', 'MIT', 'NUC', 'CYT', 'MIT', 'CYT', 'MIT', 'ME3', 'NUC', 'ME3', 'ME2', 'ME3', 'MIT', 'NUC', 'ME3', 'CYT', 'ME2', 'NUC', 'CYT', 'EXC', 'NUC', 'ME2', 'ME3', 'ME1', 'CYT', 'NUC', 'CYT', 'MIT', 'CYT', 'CYT', 'CYT', 'NUC', 'ME3', 'NUC', 'ME3', 'NUC', 'MIT', 'MIT', 'POX', 'MIT', 'CYT', 'EXC', 'CYT', 'CYT', 'ME3', 'MIT', 'ME1', 'ME2', 'ME3', 'NUC', 'NUC', 'CYT', 'CYT', 'ME3', 'CYT', 'ME2', 'MIT', 'CYT', 'NUC', 'CYT', 'MIT', 'NUC', 'CYT', 'NUC', 'NUC', 'CYT', 'MIT', 'MIT', 'MIT', 'NUC', 'CYT', 'ME3', 'CYT', 'ME2', 'CYT', 'NUC', 'CYT', 'MIT', 'NUC', 'NUC', 'MIT', 'CYT', 'NUC', 'MIT', 'CYT', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'NUC', 'ME3', 'CYT', 'CYT', 'NUC', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'NUC', 'CYT', 'CYT', 'CYT', 'MIT', 'CYT', 'MIT', 'NUC', 'MIT', 'CYT', 'CYT', 'CYT', 'MIT', 'MIT', 'CYT', 'MIT', 'MIT', 'MIT', 'ME2', 'ME3', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'ME3', 'ME3', 'NUC', 'ME1', 'NUC', 'MIT', 'MIT', 'NUC', 'CYT', 'CYT', 'ME3', 'CYT', 'NUC', 'CYT', 'ME3', 'ME3', 'NUC', 'MIT', 'ME3', 'CYT', 'CYT', 'ME3', 'MIT', 'NUC', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'NUC', 'NUC', 'CYT', 'MIT', 'NUC', 'NUC', 'ME3', 'ME3', 'ME1', 'ME3', 'ME1', 'NUC', 'MIT', 'NUC', 'NUC', 'EXC', 'CYT', 'CYT', 'CYT', 'NUC', 'EXC', 'CYT', 'CYT', 'CYT', 'NUC', 'NUC', 'NUC', 'CYT', 'MIT', 'NUC', 'NUC', 'NUC', 'NUC', 'CYT', 'ME1', 'ME1', 'CYT', 'NUC', 'CYT', 'CYT', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'ME3', 'CYT', 'CYT', 'CYT', 'ME1', 'CYT', 'ME1', 'NUC', 'ME1', 'CYT', 'ME3', 'POX', 'ME1', 'ME3', 'ME3', 'ME3', 'ME3', 'ME3', 'ME3', 'MIT', 'NUC', 'ME3', 'MIT', 'NUC', 'CYT', 'ME3', 'NUC', 'CYT', 'ME2']
{'accuracy_score': 0.5955056179775281, 'balanced_accuracy_score': 0.5758496223923323, 'macro_precision_score': 0.46316585480829675, 'macro_recall_score': 0.518264660153099, 'macro_f1_score': 0.4826149724407179, 'micro_precision_score': 0.5955056179775281, 'micro_recall_score': 0.5955056179775281, 'micro_f1_score': 0.5955056179775281}
('0', Pipeline(steps=[('0', KNNImputer(n_neighbors=4, weights='distance')),
                ('1', VarianceThreshold()),
                ('2',
                 RandomOverSampler(random_state=38727,
                                   sampling_strategy='not majority')),
                ('3',
                 ExtraTreesClassifier(criterion='entropy', max_features='log2',
                                      min_samples_leaf=15, min_samples_split=9,
                                      n_estimators=30, random_state=38727))]))
('1', Pipeline(steps=[('0', VarianceThreshold()), ('1', MaxAbsScaler()),
                ('2',
                 RandomForestClassifier(class_weight='balanced',
                                        max_features='log2',
                                        min_samples_split=15, n_estimators=69,
                                        random_state=38727))]))
('2', Pipeline(steps=[('0',
                 RandomOverSampler(random_state=38727,
                                   sampling_strategy='not majority')),
                ('1',
                 ExtraTreesClassifier(bootstrap=True,
                                      class_weight='balanced_subsample',
                                      criterion='entropy', max_features='sqrt',
                                      min_samples_leaf=10, min_samples_split=14,
                                      n_estimators=30, random_state=38727))]))
('3', Pipeline(steps=[('0', MaxAbsScaler()), ('1', MinMaxScaler()),
                ('2', KNNImputer(n_neighbors=10, weights='distance')),
                ('3',
                 ExtraTreesClassifier(class_weight='balanced',
                                      max_features='log2', min_samples_leaf=3,
                                      min_samples_split=10, n_estimators=16,
                                      random_state=38727))]))
('4', Pipeline(steps=[('0',
                 RBFSampler(gamma=0.8009845776929156, n_components=22,
                            random_state=38727)),
                ('1', MaxAbsScaler()),
                ('2',
                 ExtraTreesClassifier(bootstrap=True, class_weight='balanced',
                                      criterion='entropy', max_features='log2',
                                      min_samples_leaf=3, min_samples_split=10,
                                      n_estimators=34, random_state=38727))]))
('5', Pipeline(steps=[('0', SelectFwe(alpha=0.001359831965356311)),
                ('1', Normalizer(norm='max')), ('2', MinMaxScaler()),
                ('3',
                 ExtraTreesClassifier(class_weight='balanced_subsample',
                                      max_features='log2', min_samples_leaf=3,
                                      min_samples_split=8, n_estimators=96,
                                      random_state=38727))]))
('6', Pipeline(steps=[('0', SelectPercentile(percentile=77.4891412813021)),
                ('1', MaxAbsScaler()), ('2', SimpleImputer(strategy='median')),
                ('3',
                 ExtraTreesClassifier(bootstrap=True, class_weight='balanced',
                                      max_features='sqrt', min_samples_leaf=3,
                                      min_samples_split=18, n_estimators=95,
                                      random_state=38727))]))
('7', Pipeline(steps=[('0',
                 FastICA(algorithm='deflation', fun='exp', n_components=4,
                         random_state=38727, whiten=False)),
                ('1', MaxAbsScaler()), ('2', MinMaxScaler()),
                ('3',
                 ExtraTreesClassifier(class_weight='balanced_subsample',
                                      max_features='log2', min_samples_leaf=3,
                                      min_samples_split=16, n_estimators=95,
                                      random_state=38727))]))
('8', Pipeline(steps=[('0', MaxAbsScaler()), ('1', MinMaxScaler()),
                ('2', KNNImputer(n_neighbors=6)),
                ('3',
                 ExtraTreesClassifier(class_weight='balanced_subsample',
                                      criterion='entropy', max_features='sqrt',
                                      min_samples_leaf=2, min_samples_split=15,
                                      n_estimators=32, random_state=38727))]))
('9', Pipeline(steps=[('0',
                 RandomOverSampler(random_state=38727,
                                   sampling_strategy='not majority')),
                ('1', RobustScaler()), ('2', MaxAbsScaler()),
                ('3',
                 ExtraTreesClassifier(bootstrap=True,
                                      class_weight='balanced_subsample',
                                      criterion='entropy', max_features='sqrt',
                                      min_samples_leaf=15, min_samples_split=14,
                                      n_estimators=47, random_state=38727))]))

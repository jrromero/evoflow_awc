['POX', 'NUC', 'CYT', 'NUC', 'CYT', 'EXC', 'CYT', 'NUC', 'MIT', 'ME1', 'EXC', 'ME2', 'MIT', 'ME2', 'CYT', 'CYT', 'CYT', 'MIT', 'MIT', 'NUC', 'ME3', 'CYT', 'CYT', 'ME1', 'MIT', 'MIT', 'MIT', 'POX', 'ME3', 'MIT', 'ME1', 'ME3', 'CYT', 'CYT', 'CYT', 'POX', 'NUC', 'MIT', 'CYT', 'EXC', 'ME3', 'CYT', 'NUC', 'CYT', 'NUC', 'CYT', 'MIT', 'NUC', 'CYT', 'NUC', 'CYT', 'NUC', 'NUC', 'MIT', 'CYT', 'MIT', 'POX', 'NUC', 'CYT', 'ME1', 'ME1', 'MIT', 'MIT', 'ME3', 'MIT', 'MIT', 'MIT', 'EXC', 'CYT', 'NUC', 'EXC', 'VAC', 'CYT', 'ME2', 'CYT', 'MIT', 'EXC', 'EXC', 'CYT', 'CYT', 'CYT', 'CYT', 'ME3', 'POX', 'NUC', 'NUC', 'CYT', 'NUC', 'MIT', 'NUC', 'ME3', 'NUC', 'ME3', 'CYT', 'ME3', 'NUC', 'CYT', 'ME2', 'CYT', 'CYT', 'NUC', 'ME3', 'NUC', 'ME1', 'NUC', 'NUC', 'MIT', 'ME3', 'ME3', 'POX', 'ME3', 'ME1', 'ME1', 'CYT', 'ME3', 'ME3', 'ME2', 'NUC', 'ME2', 'CYT', 'MIT', 'ME3', 'MIT', 'NUC', 'ME3', 'CYT', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'NUC', 'CYT', 'ME2', 'NUC', 'NUC', 'MIT', 'ME3', 'CYT', 'CYT', 'NUC', 'MIT', 'NUC', 'CYT', 'CYT', 'CYT', 'MIT', 'MIT', 'ME3', 'NUC', 'CYT', 'NUC', 'MIT', 'MIT', 'MIT', 'NUC', 'NUC', 'ME3', 'ME3', 'CYT', 'MIT', 'MIT', 'CYT', 'MIT', 'CYT', 'NUC', 'ME1', 'ME3', 'NUC', 'MIT', 'ME2', 'NUC', 'ERL', 'MIT', 'ME3', 'ME2', 'ME2', 'NUC', 'NUC', 'NUC', 'ME3', 'NUC', 'ME2', 'NUC', 'NUC', 'NUC', 'ME3', 'ME2', 'CYT', 'MIT', 'MIT', 'MIT', 'MIT', 'CYT', 'CYT', 'MIT', 'ME3', 'NUC', 'NUC', 'MIT', 'CYT', 'NUC', 'NUC', 'NUC', 'MIT', 'MIT', 'ME3', 'MIT', 'CYT', 'CYT', 'CYT', 'MIT', 'MIT', 'ME3', 'MIT', 'NUC', 'POX', 'MIT', 'CYT', 'MIT', 'ME3', 'NUC', 'CYT', 'VAC', 'ME3', 'MIT', 'NUC', 'ME3', 'CYT', 'ME2', 'NUC', 'CYT', 'EXC', 'NUC', 'ME2', 'ME3', 'ME2', 'CYT', 'NUC', 'CYT', 'MIT', 'CYT', 'CYT', 'CYT', 'NUC', 'ME3', 'CYT', 'ME3', 'NUC', 'MIT', 'NUC', 'POX', 'MIT', 'CYT', 'EXC', 'CYT', 'CYT', 'NUC', 'CYT', 'ME2', 'ME2', 'ME3', 'NUC', 'NUC', 'CYT', 'CYT', 'ME3', 'CYT', 'ME2', 'MIT', 'CYT', 'NUC', 'CYT', 'MIT', 'NUC', 'CYT', 'NUC', 'NUC', 'CYT', 'MIT', 'MIT', 'MIT', 'NUC', 'CYT', 'ME3', 'CYT', 'ME2', 'CYT', 'NUC', 'CYT', 'MIT', 'NUC', 'NUC', 'MIT', 'NUC', 'NUC', 'MIT', 'NUC', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'NUC', 'CYT', 'CYT', 'CYT', 'MIT', 'CYT', 'MIT', 'NUC', 'MIT', 'CYT', 'CYT', 'CYT', 'MIT', 'MIT', 'CYT', 'MIT', 'MIT', 'MIT', 'ME2', 'CYT', 'NUC', 'CYT', 'CYT', 'CYT', 'NUC', 'ME3', 'ME3', 'NUC', 'ME1', 'NUC', 'MIT', 'MIT', 'NUC', 'CYT', 'CYT', 'ME3', 'CYT', 'NUC', 'CYT', 'ME3', 'ME3', 'NUC', 'MIT', 'ME3', 'CYT', 'CYT', 'ME3', 'MIT', 'NUC', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'NUC', 'NUC', 'CYT', 'MIT', 'NUC', 'NUC', 'CYT', 'ME3', 'EXC', 'ME3', 'ME1', 'CYT', 'MIT', 'NUC', 'NUC', 'ME1', 'NUC', 'CYT', 'CYT', 'NUC', 'MIT', 'CYT', 'CYT', 'CYT', 'NUC', 'NUC', 'NUC', 'CYT', 'MIT', 'NUC', 'NUC', 'NUC', 'NUC', 'CYT', 'ME2', 'ME1', 'CYT', 'NUC', 'CYT', 'CYT', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'ME3', 'CYT', 'CYT', 'CYT', 'ME1', 'CYT', 'ME1', 'NUC', 'ME1', 'CYT', 'ME3', 'POX', 'ME1', 'ME3', 'ME3', 'ME3', 'ME3', 'ME3', 'ME3', 'MIT', 'NUC', 'ME3', 'MIT', 'NUC', 'CYT', 'NUC', 'NUC', 'CYT', 'ME2']
{'accuracy_score': 0.5707865168539326, 'balanced_accuracy_score': 0.5506759657886288, 'macro_precision_score': 0.4948373264362562, 'macro_recall_score': 0.49560836920976586, 'macro_f1_score': 0.4849281177830965, 'micro_precision_score': 0.5707865168539326, 'micro_recall_score': 0.5707865168539326, 'micro_f1_score': 0.5707865168539326}
('0', Pipeline(steps=[('0',
                 RandomOverSampler(random_state=67822,
                                   sampling_strategy='not majority')),
                ('1',
                 RBFSampler(gamma=0.02769910618634132, n_components=25,
                            random_state=67822)),
                ('2', MinMaxScaler()),
                ('3',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        criterion='entropy',
                                        max_features='log2',
                                        min_samples_leaf=12,
                                        min_samples_split=18, n_estimators=74,
                                        random_state=67822))]))
('1', Pipeline(steps=[('0',
                 RandomOverSampler(random_state=67822,
                                   sampling_strategy='minority')),
                ('1',
                 RBFSampler(gamma=0.10410001647550207, n_components=53,
                            random_state=67822)),
                ('2', MinMaxScaler()),
                ('3',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        max_features='sqrt',
                                        min_samples_leaf=12,
                                        min_samples_split=18, n_estimators=99,
                                        random_state=67822))]))
('2', Pipeline(steps=[('0',
                 RandomOverSampler(random_state=67822,
                                   sampling_strategy='not majority')),
                ('1',
                 RBFSampler(gamma=0.011527452604006977, n_components=25,
                            random_state=67822)),
                ('2', MinMaxScaler()),
                ('3',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='log2', min_samples_leaf=6,
                                        min_samples_split=12, n_estimators=55,
                                        random_state=67822))]))
('3', Pipeline(steps=[('0',
                 RandomOverSampler(random_state=67822,
                                   sampling_strategy='not majority')),
                ('1',
                 RBFSampler(gamma=0.014265547388187933, n_components=72,
                            random_state=67822)),
                ('2', MinMaxScaler()),
                ('3',
                 SGDClassifier(alpha=0.0002924858816570282, average=True,
                               class_weight='balanced',
                               epsilon=0.0016776486623889825,
                               eta0=5.541379694790432e-07,
                               l1_ratio=1.5592946890173248e-07,
                               loss='perceptron', power_t=0.0002094118224960755,
                               random_state=67822, tol=0.012345225775606624))]))
('4', Pipeline(steps=[('0',
                 RandomOverSampler(random_state=67822,
                                   sampling_strategy='not majority')),
                ('1',
                 RBFSampler(gamma=0.02769910618634132, n_components=25,
                            random_state=67822)),
                ('2', MinMaxScaler()),
                ('3',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        criterion='entropy',
                                        max_features='log2',
                                        min_samples_leaf=12,
                                        min_samples_split=6, n_estimators=33,
                                        random_state=67822))]))
('5', Pipeline(steps=[('0', VarianceThreshold()),
                ('1',
                 RBFSampler(gamma=0.007491797773094527, n_components=72,
                            random_state=67822)),
                ('2', MinMaxScaler()),
                ('3',
                 RandomForestClassifier(class_weight='balanced',
                                        criterion='entropy',
                                        max_features='sqrt', min_samples_leaf=3,
                                        min_samples_split=11, n_estimators=30,
                                        random_state=67822))]))
('6', Pipeline(steps=[('0',
                 RandomOverSampler(random_state=67822,
                                   sampling_strategy='minority')),
                ('1',
                 RBFSampler(gamma=0.6599924652323268, n_components=53,
                            random_state=67822)),
                ('2', MinMaxScaler()),
                ('3',
                 RandomForestClassifier(class_weight='balanced',
                                        criterion='entropy',
                                        max_features='log2', min_samples_leaf=4,
                                        min_samples_split=14, n_estimators=55,
                                        random_state=67822))]))
('7', Pipeline(steps=[('0',
                 SMOTE(k_neighbors=2, random_state=67822,
                       sampling_strategy='not minority')),
                ('1', VarianceThreshold()),
                ('2',
                 RBFSampler(gamma=0.039838244537343984, n_components=76,
                            random_state=67822)),
                ('3',
                 RandomForestClassifier(class_weight='balanced_subsample',
                                        criterion='entropy',
                                        max_features='sqrt',
                                        min_samples_leaf=17,
                                        min_samples_split=8, n_estimators=69,
                                        random_state=67822))]))
('8', Pipeline(steps=[('0',
                 RandomOverSampler(random_state=67822,
                                   sampling_strategy='minority')),
                ('1',
                 RBFSampler(gamma=0.009467141986183007, n_components=25,
                            random_state=67822)),
                ('2', MinMaxScaler()),
                ('3',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        criterion='entropy',
                                        max_features='sqrt', min_samples_leaf=6,
                                        min_samples_split=16, n_estimators=26,
                                        random_state=67822))]))
('9', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1',
                 RBFSampler(gamma=0.010123809760311044, n_components=48,
                            random_state=67822)),
                ('2', MinMaxScaler()),
                ('3',
                 RandomForestClassifier(class_weight='balanced',
                                        max_features='log2', min_samples_leaf=4,
                                        min_samples_split=18, n_estimators=91,
                                        random_state=67822))]))

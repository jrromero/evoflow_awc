
{'accuracy_score': 0.927536231884058, 'balanced_accuracy_score': 0.8055555555555556, 'macro_precision_score': 0.7075678913738019, 'macro_recall_score': 0.8055555555555556, 'macro_f1_score': 0.7445277094872782, 'micro_precision_score': 0.927536231884058, 'micro_recall_score': 0.927536231884058, 'micro_f1_score': 0.927536231884058}
('0', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1',
                 SMOTE(k_neighbors=4, random_state=67822,
                       sampling_strategy='not minority')),
                ('2', StandardScaler(with_std=False)),
                ('3',
                 PassiveAggressiveClassifier(C=0.00047714530277087017,
                                             fit_intercept=False,
                                             random_state=67822))]))
('1', Pipeline(steps=[('0', VarianceThreshold()),
                ('1',
                 SMOTE(k_neighbors=4, random_state=67822,
                       sampling_strategy='not minority')),
                ('2', StandardScaler(with_std=False)),
                ('3',
                 PassiveAggressiveClassifier(C=0.00047714530277087017,
                                             fit_intercept=False,
                                             random_state=67822))]))
('2', Pipeline(steps=[('0', MinMaxScaler()), ('1', MaxAbsScaler()),
                ('2',
                 LinearSVC(C=0.00011435518311739692, class_weight='balanced',
                           loss='hinge', random_state=67822,
                           tol=0.09131702659832931))]))
('3', Pipeline(steps=[('0',
                 SGDClassifier(alpha=0.0002924858816570282, average=True,
                               class_weight='balanced',
                               epsilon=4.210996341882978e-05,
                               eta0=9.199287672774423e-07,
                               l1_ratio=1.65574903868451e-09, loss='perceptron',
                               power_t=0.5076723558374685, random_state=67822,
                               tol=0.06559744771874365))]))
('4', Pipeline(steps=[('0',
                 PCA(n_components=0.8233899948149973, random_state=67822,
                     whiten=True)),
                ('1', MinMaxScaler()),
                ('2', SelectPercentile(percentile=10.642256535487927)),
                ('3',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        criterion='entropy',
                                        max_features='sqrt',
                                        min_samples_leaf=17,
                                        min_samples_split=8, n_estimators=62,
                                        random_state=67822))]))
('5', Pipeline(steps=[('0', VarianceThreshold()), ('1', MaxAbsScaler()),
                ('2',
                 SGDClassifier(alpha=0.0002924858816570282, average=True,
                               class_weight='balanced',
                               epsilon=4.210996341882978e-05,
                               eta0=9.199287672774423e-07,
                               l1_ratio=1.65574903868451e-09, loss='perceptron',
                               power_t=0.5076723558374685, random_state=67822,
                               tol=0.06559744771874365))]))
('6', Pipeline(steps=[('0',
                 SGDClassifier(alpha=8.500303193891591e-05,
                               class_weight='balanced',
                               epsilon=0.029816105680316077,
                               eta0=0.0006078587603286257,
                               l1_ratio=0.0006957064440193542,
                               power_t=0.18025001332197105, random_state=67822,
                               tol=0.00014963405411751973))]))
('7', Pipeline(steps=[('0',
                 SGDClassifier(alpha=0.0002924858816570282, average=True,
                               class_weight='balanced',
                               epsilon=4.210996341882978e-05,
                               eta0=9.199287672774423e-07,
                               l1_ratio=0.0003747538048386619,
                               loss='perceptron', power_t=0.5076723558374685,
                               random_state=67822, tol=0.06559744771874365))]))
('8', Pipeline(steps=[('0', SelectFwe(alpha=0.0022248193934194184)),
                ('1', RobustScaler(with_centering=False, with_scaling=False)),
                ('2',
                 LogisticRegression(C=0.19534860409333332,
                                    class_weight='balanced',
                                    random_state=67822))]))
('9', Pipeline(steps=[('0', PCA(n_components=0.8635994672513954, random_state=67822)),
                ('1', MaxAbsScaler()),
                ('2',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced_subsample',
                                        criterion='entropy',
                                        max_features='log2',
                                        min_samples_leaf=18,
                                        min_samples_split=14, n_estimators=86,
                                        random_state=67822))]))

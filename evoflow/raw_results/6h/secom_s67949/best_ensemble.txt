
{'accuracy_score': 0.774468085106383, 'balanced_accuracy_score': 0.618063791273953, 'macro_precision_score': 0.5507526362392337, 'macro_recall_score': 0.618063791273953, 'macro_f1_score': 0.5498572409555821, 'micro_precision_score': 0.774468085106383, 'micro_recall_score': 0.774468085106383, 'micro_f1_score': 0.774468085106383}
('0', Pipeline(steps=[('0', KNNImputer(n_neighbors=10, weights='distance')),
                ('1',
                 SMOTETomek(random_state=67949,
                            sampling_strategy='not majority')),
                ('2', MinMaxScaler()),
                ('3',
                 DecisionTreeClassifier(criterion='entropy',
                                        max_depth=1.4310953817556265,
                                        max_features=0.12085128824173208,
                                        min_samples_leaf=3, min_samples_split=5,
                                        random_state=67949))]))
('1', Pipeline(steps=[('0', MinMaxScaler()), ('1', SimpleImputer(strategy='median')),
                ('2',
                 DecisionTreeClassifier(class_weight='balanced',
                                        criterion='entropy',
                                        max_depth=1.7681923159280166,
                                        max_features=0.8333024694205162,
                                        min_samples_leaf=14,
                                        min_samples_split=15,
                                        random_state=67949))]))
('2', Pipeline(steps=[('0', KNNImputer(n_neighbors=9, weights='distance')),
                ('1',
                 SMOTETomek(random_state=67949,
                            sampling_strategy='not majority')),
                ('2', MinMaxScaler()),
                ('3',
                 DecisionTreeClassifier(criterion='entropy',
                                        max_depth=1.4310953817556265,
                                        max_features=0.6039329269312979,
                                        min_samples_leaf=3, min_samples_split=5,
                                        random_state=67949))]))
('3', Pipeline(steps=[('0', KNNImputer(n_neighbors=4, weights='distance')),
                ('1',
                 SMOTETomek(random_state=67949,
                            sampling_strategy='not majority')),
                ('2', MinMaxScaler()),
                ('3',
                 DecisionTreeClassifier(criterion='entropy',
                                        max_depth=1.4310953817556265,
                                        max_features=0.12085128824173208,
                                        min_samples_leaf=3, min_samples_split=5,
                                        random_state=67949))]))
('4', Pipeline(steps=[('0', MinMaxScaler()), ('1', SimpleImputer()),
                ('2', BernoulliNB(alpha=0.04056222026947914, fit_prior=False))]))
('5', Pipeline(steps=[('0', VarianceThreshold()),
                ('1', SimpleImputer(strategy='median')),
                ('2',
                 DecisionTreeClassifier(class_weight='balanced',
                                        criterion='entropy',
                                        max_depth=1.7681923159280166,
                                        max_features=0.8333024694205162,
                                        min_samples_leaf=14,
                                        min_samples_split=15,
                                        random_state=67949))]))
('6', Pipeline(steps=[('0', KNNImputer(n_neighbors=2, weights='distance')),
                ('1',
                 SMOTETomek(random_state=67949,
                            sampling_strategy='not majority')),
                ('2', MinMaxScaler()),
                ('3',
                 DecisionTreeClassifier(criterion='entropy',
                                        max_depth=1.102339507495155,
                                        max_features=0.12085128824173208,
                                        min_samples_leaf=3, min_samples_split=5,
                                        random_state=67949))]))
('7', Pipeline(steps=[('0', MinMaxScaler()),
                ('1', SimpleImputer(strategy='most_frequent')),
                ('2', GaussianNB(var_smoothing=0.0027820677484750025))]))
('8', Pipeline(steps=[('0', SimpleImputer(strategy='median')),
                ('1',
                 SMOTETomek(random_state=67949, sampling_strategy='minority')),
                ('2', MinMaxScaler()),
                ('3',
                 QuadraticDiscriminantAnalysis(reg_param=0.8605068045487061))]))
('9', Pipeline(steps=[('0', SimpleImputer(strategy='most_frequent')),
                ('1',
                 SMOTETomek(random_state=67949,
                            sampling_strategy='not majority')),
                ('2', MinMaxScaler()),
                ('3',
                 DecisionTreeClassifier(class_weight='balanced',
                                        criterion='entropy',
                                        max_depth=1.102339507495155,
                                        max_features=0.8770314978359712,
                                        min_samples_leaf=7, min_samples_split=5,
                                        random_state=67949))]))

['POX', 'NUC', 'CYT', 'CYT', 'NUC', 'ME2', 'CYT', 'NUC', 'MIT', 'ME1', 'ME1', 'ME2', 'MIT', 'ME1', 'CYT', 'CYT', 'CYT', 'MIT', 'MIT', 'NUC', 'ME3', 'CYT', 'CYT', 'ME1', 'MIT', 'MIT', 'MIT', 'POX', 'ME3', 'MIT', 'ME1', 'ME3', 'CYT', 'CYT', 'CYT', 'POX', 'NUC', 'MIT', 'NUC', 'MIT', 'ME3', 'NUC', 'NUC', 'CYT', 'NUC', 'CYT', 'MIT', 'NUC', 'CYT', 'NUC', 'CYT', 'NUC', 'NUC', 'MIT', 'CYT', 'MIT', 'POX', 'NUC', 'CYT', 'ME1', 'ME1', 'MIT', 'MIT', 'ME3', 'MIT', 'MIT', 'MIT', 'EXC', 'CYT', 'NUC', 'EXC', 'ME2', 'CYT', 'ME2', 'CYT', 'MIT', 'EXC', 'EXC', 'CYT', 'CYT', 'CYT', 'CYT', 'ME3', 'POX', 'NUC', 'NUC', 'CYT', 'NUC', 'MIT', 'NUC', 'ME3', 'NUC', 'ME3', 'CYT', 'ME3', 'NUC', 'MIT', 'ME2', 'CYT', 'CYT', 'ME3', 'ME3', 'NUC', 'ME1', 'ERL', 'NUC', 'CYT', 'ME3', 'ME3', 'POX', 'ME3', 'ME1', 'ME1', 'CYT', 'ME3', 'ME3', 'ME1', 'NUC', 'NUC', 'NUC', 'MIT', 'ME3', 'MIT', 'NUC', 'ME3', 'NUC', 'NUC', 'CYT', 'ME3', 'CYT', 'VAC', 'NUC', 'ME2', 'ME2', 'NUC', 'NUC', 'MIT', 'NUC', 'CYT', 'CYT', 'NUC', 'MIT', 'NUC', 'CYT', 'NUC', 'NUC', 'MIT', 'MIT', 'ME3', 'NUC', 'CYT', 'CYT', 'MIT', 'MIT', 'MIT', 'NUC', 'CYT', 'ME3', 'ME3', 'CYT', 'MIT', 'MIT', 'NUC', 'MIT', 'CYT', 'NUC', 'ME1', 'ME3', 'NUC', 'MIT', 'ME1', 'NUC', 'ERL', 'MIT', 'ME3', 'ME2', 'ME2', 'NUC', 'CYT', 'NUC', 'ME3', 'ME3', 'ME2', 'CYT', 'NUC', 'NUC', 'ME3', 'ME2', 'CYT', 'MIT', 'CYT', 'MIT', 'MIT', 'ME3', 'CYT', 'MIT', 'ME3', 'NUC', 'NUC', 'MIT', 'CYT', 'NUC', 'NUC', 'MIT', 'MIT', 'MIT', 'ME3', 'MIT', 'CYT', 'CYT', 'MIT', 'MIT', 'MIT', 'ME3', 'MIT', 'NUC', 'CYT', 'MIT', 'CYT', 'MIT', 'ME3', 'NUC', 'ME3', 'ME2', 'ME3', 'MIT', 'NUC', 'ME3', 'CYT', 'ME2', 'NUC', 'CYT', 'EXC', 'NUC', 'ME2', 'ME3', 'ME1', 'CYT', 'NUC', 'CYT', 'ME2', 'CYT', 'CYT', 'CYT', 'ME3', 'ME3', 'CYT', 'POX', 'NUC', 'MIT', 'MIT', 'POX', 'MIT', 'CYT', 'EXC', 'CYT', 'NUC', 'NUC', 'CYT', 'ME1', 'ME2', 'ME3', 'NUC', 'NUC', 'CYT', 'CYT', 'ME3', 'CYT', 'ME2', 'MIT', 'CYT', 'NUC', 'CYT', 'MIT', 'NUC', 'CYT', 'NUC', 'NUC', 'CYT', 'MIT', 'MIT', 'MIT', 'NUC', 'CYT', 'ME3', 'CYT', 'ME2', 'CYT', 'NUC', 'CYT', 'MIT', 'NUC', 'NUC', 'MIT', 'CYT', 'NUC', 'MIT', 'CYT', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'NUC', 'ME3', 'CYT', 'NUC', 'NUC', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'MIT', 'MIT', 'CYT', 'MIT', 'NUC', 'MIT', 'CYT', 'NUC', 'NUC', 'MIT', 'MIT', 'CYT', 'MIT', 'MIT', 'MIT', 'ME1', 'CYT', 'NUC', 'CYT', 'CYT', 'NUC', 'MIT', 'ME3', 'ME3', 'CYT', 'EXC', 'NUC', 'MIT', 'MIT', 'NUC', 'NUC', 'CYT', 'ME3', 'CYT', 'NUC', 'NUC', 'ME3', 'ME3', 'NUC', 'MIT', 'ME3', 'CYT', 'CYT', 'ME3', 'MIT', 'NUC', 'NUC', 'CYT', 'CYT', 'MIT', 'CYT', 'NUC', 'NUC', 'CYT', 'MIT', 'NUC', 'NUC', 'ME3', 'ME3', 'EXC', 'ME3', 'ME1', 'CYT', 'MIT', 'NUC', 'NUC', 'ME1', 'NUC', 'CYT', 'CYT', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'MIT', 'CYT', 'NUC', 'CYT', 'MIT', 'NUC', 'NUC', 'NUC', 'NUC', 'CYT', 'ME1', 'ME1', 'CYT', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'ME3', 'CYT', 'NUC', 'CYT', 'ME1', 'CYT', 'ME1', 'NUC', 'ME1', 'CYT', 'ME3', 'POX', 'ME1', 'ME3', 'ME3', 'ME3', 'ME3', 'ME3', 'ME3', 'MIT', 'CYT', 'ME3', 'MIT', 'NUC', 'CYT', 'CYT', 'NUC', 'CYT', 'ME2']
{'accuracy_score': 0.597752808988764, 'balanced_accuracy_score': 0.5771231751171242, 'macro_precision_score': 0.4722686942698976, 'macro_recall_score': 0.5194108576054117, 'macro_f1_score': 0.48815887675411157, 'micro_precision_score': 0.597752808988764, 'micro_recall_score': 0.597752808988764, 'micro_f1_score': 0.597752808988764}
('0', Pipeline(steps=[('0', RobustScaler(with_scaling=False)), ('1', MaxAbsScaler()),
                ('2',
                 FastICA(algorithm='deflation', n_components=53,
                         random_state=75549)),
                ('3',
                 ExtraTreesClassifier(bootstrap=True,
                                      class_weight='balanced_subsample',
                                      max_features='log2', min_samples_leaf=3,
                                      min_samples_split=7, n_estimators=86,
                                      random_state=75549))]))
('1', Pipeline(steps=[('0',
                 RBFSampler(gamma=0.0012778353409986741, n_components=20,
                            random_state=75549)),
                ('1', MinMaxScaler()),
                ('2',
                 ExtraTreesClassifier(bootstrap=True, class_weight='balanced',
                                      criterion='entropy', max_features='log2',
                                      min_samples_leaf=3, min_samples_split=4,
                                      n_estimators=78, random_state=75549))]))
('2', Pipeline(steps=[('0', RobustScaler(with_scaling=False)), ('1', MaxAbsScaler()),
                ('2',
                 FastICA(algorithm='deflation', n_components=53,
                         random_state=75549)),
                ('3',
                 ExtraTreesClassifier(bootstrap=True,
                                      class_weight='balanced_subsample',
                                      max_features='log2', min_samples_leaf=3,
                                      min_samples_split=7, n_estimators=95,
                                      random_state=75549))]))
('3', Pipeline(steps=[('0', VarianceThreshold()), ('1', MinMaxScaler()),
                ('2', FastICA(fun='exp', n_components=24, random_state=75549)),
                ('3',
                 ExtraTreesClassifier(class_weight='balanced_subsample',
                                      criterion='entropy', max_features='log2',
                                      min_samples_leaf=2, min_samples_split=19,
                                      n_estimators=55, random_state=75549))]))
('4', Pipeline(steps=[('0', Normalizer(norm='max')), ('1', VarianceThreshold()),
                ('2',
                 ExtraTreesClassifier(bootstrap=True,
                                      class_weight='balanced_subsample',
                                      criterion='entropy', max_features='sqrt',
                                      min_samples_leaf=2, min_samples_split=17,
                                      n_estimators=64, random_state=75549))]))
('5', Pipeline(steps=[('0', RobustScaler()), ('1', MaxAbsScaler()),
                ('2',
                 FastICA(algorithm='deflation', n_components=61,
                         random_state=75549, whiten=False)),
                ('3',
                 ExtraTreesClassifier(class_weight='balanced_subsample',
                                      criterion='entropy', max_features='sqrt',
                                      min_samples_leaf=15, min_samples_split=16,
                                      n_estimators=53, random_state=75549))]))
('6', Pipeline(steps=[('0', SelectPercentile(percentile=75.21251300113988)),
                ('1',
                 ExtraTreesClassifier(bootstrap=True, class_weight='balanced',
                                      criterion='entropy', max_features='sqrt',
                                      min_samples_leaf=3, min_samples_split=13,
                                      n_estimators=75, random_state=75549))]))
('7', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1',
                 ExtraTreesClassifier(bootstrap=True, class_weight='balanced',
                                      criterion='entropy', max_features='sqrt',
                                      min_samples_split=11, n_estimators=16,
                                      random_state=75549))]))
('8', Pipeline(steps=[('0', RobustScaler()), ('1', MaxAbsScaler()),
                ('2',
                 FastICA(algorithm='deflation', n_components=30,
                         random_state=75549)),
                ('3',
                 ExtraTreesClassifier(bootstrap=True,
                                      class_weight='balanced_subsample',
                                      max_features='log2', min_samples_leaf=3,
                                      min_samples_split=7, n_estimators=86,
                                      random_state=75549))]))
('9', Pipeline(steps=[('0', VarianceThreshold()), ('1', KNNImputer()),
                ('2',
                 ExtraTreesClassifier(bootstrap=True, class_weight='balanced',
                                      criterion='entropy', max_features='log2',
                                      min_samples_leaf=2, min_samples_split=8,
                                      n_estimators=16, random_state=75549))]))

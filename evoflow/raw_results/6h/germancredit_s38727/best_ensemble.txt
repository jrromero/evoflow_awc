['good', 'bad', 'good', 'bad', 'bad', 'bad', 'bad', 'bad', 'good', 'bad', 'good', 'good', 'bad', 'good', 'good', 'good', 'good', 'good', 'good', 'good', 'good', 'good', 'good', 'bad', 'good', 'good', 'good', 'good', 'good', 'good', 'good', 'good', 'good', 'good', 'good', 'bad', 'bad', 'good', 'good', 'good', 'good', 'bad', 'good', 'good', 'good', 'bad', 'good', 'good', 'good', 'good', 'bad', 'bad', 'good', 'good', 'bad', 'good', 'good', 'bad', 'good', 'good', 'bad', 'bad', 'bad', 'bad', 'good', 'good', 'bad', 'good', 'bad', 'good', 'good', 'good', 'bad', 'good', 'good', 'bad', 'good', 'good', 'good', 'good', 'bad', 'good', 'good', 'good', 'bad', 'bad', 'bad', 'good', 'good', 'bad', 'good', 'bad', 'good', 'good', 'bad', 'bad', 'bad', 'bad', 'good', 'good', 'good', 'good', 'good', 'good', 'bad', 'bad', 'good', 'good', 'good', 'bad', 'bad', 'good', 'bad', 'good', 'bad', 'bad', 'bad', 'good', 'good', 'bad', 'bad', 'good', 'bad', 'good', 'good', 'good', 'good', 'good', 'good', 'bad', 'good', 'good', 'good', 'good', 'good', 'bad', 'bad', 'bad', 'good', 'bad', 'good', 'good', 'bad', 'good', 'good', 'good', 'good', 'good', 'bad', 'good', 'good', 'bad', 'good', 'good', 'good', 'good', 'bad', 'good', 'good', 'bad', 'bad', 'bad', 'good', 'bad', 'good', 'good', 'bad', 'good', 'good', 'good', 'good', 'good', 'bad', 'good', 'bad', 'good', 'bad', 'good', 'good', 'good', 'good', 'good', 'bad', 'bad', 'good', 'good', 'good', 'bad', 'good', 'bad', 'bad', 'good', 'good', 'good', 'good', 'bad', 'good', 'good', 'good', 'good', 'bad', 'good', 'bad', 'bad', 'good', 'good', 'good', 'good', 'good', 'bad', 'good', 'good', 'good', 'bad', 'good', 'bad', 'good', 'good', 'bad', 'good', 'bad', 'good', 'good', 'good', 'good', 'good', 'good', 'bad', 'good', 'bad', 'good', 'good', 'good', 'good', 'good', 'bad', 'good', 'bad', 'good', 'bad', 'good', 'bad', 'good', 'good', 'good', 'good', 'good', 'good', 'bad', 'good', 'good', 'good', 'good', 'bad', 'good', 'good', 'bad', 'good', 'good', 'good', 'good', 'bad', 'good', 'good', 'good', 'bad', 'good', 'good', 'bad', 'good', 'good', 'good', 'bad', 'good', 'good', 'bad', 'bad', 'bad', 'bad', 'good', 'bad', 'bad', 'good', 'good', 'good', 'bad', 'bad', 'good', 'good', 'good', 'bad', 'good', 'bad', 'good', 'good', 'bad', 'good', 'bad', 'good', 'bad']
{'accuracy_score': 0.7166666666666667, 'balanced_accuracy_score': 0.6845322287330774, 'macro_precision_score': 0.6800305554186585, 'macro_recall_score': 0.6845322287330774, 'macro_f1_score': 0.6820409232035312, 'micro_precision_score': 0.7166666666666667, 'micro_recall_score': 0.7166666666666667, 'micro_f1_score': 0.7166666666666667}
('0', Pipeline(steps=[('0', VarianceThreshold()),
                ('1',
                 ExtraTreesClassifier(bootstrap=True, class_weight='balanced',
                                      criterion='entropy', max_features='sqrt',
                                      min_samples_split=19, n_estimators=47,
                                      random_state=38727))]))
('1', Pipeline(steps=[('0',
                 RandomForestClassifier(class_weight='balanced',
                                        max_features='log2', min_samples_leaf=5,
                                        min_samples_split=10, n_estimators=40,
                                        random_state=38727))]))
('2', Pipeline(steps=[('0', VarianceThreshold()), ('1', Normalizer(norm='l1')),
                ('2',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        max_features='sqrt',
                                        min_samples_leaf=12,
                                        min_samples_split=15, n_estimators=38,
                                        random_state=38727))]))
('3', Pipeline(steps=[('0', SelectPercentile(percentile=84.2034651947954)),
                ('1', RobustScaler(with_scaling=False)),
                ('2', BernoulliNB(alpha=4.036400194874085, fit_prior=False))]))
('4', Pipeline(steps=[('0', Normalizer(norm='l1')),
                ('1',
                 RandomOverSampler(random_state=38727,
                                   sampling_strategy='not minority')),
                ('2',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        max_features='sqrt',
                                        min_samples_leaf=20,
                                        min_samples_split=4, n_estimators=71,
                                        random_state=38727))]))
('5', Pipeline(steps=[('0', MinMaxScaler()), ('1', StandardScaler()),
                ('2', SelectPercentile(percentile=94.89149005347258)),
                ('3',
                 RandomForestClassifier(class_weight='balanced_subsample',
                                        criterion='entropy',
                                        max_features='log2', min_samples_leaf=3,
                                        min_samples_split=11, n_estimators=93,
                                        random_state=38727))]))
('6', Pipeline(steps=[('0', VarianceThreshold()), ('1', StandardScaler()),
                ('2', BernoulliNB(alpha=0.06974164887006441, fit_prior=False))]))
('7', Pipeline(steps=[('0', MinMaxScaler()),
                ('1',
                 RandomForestClassifier(class_weight='balanced_subsample',
                                        max_features='sqrt', min_samples_leaf=2,
                                        min_samples_split=17, n_estimators=44,
                                        random_state=38727))]))
('8', Pipeline(steps=[('0', SelectPercentile(percentile=84.2034651947954)),
                ('1', RobustScaler()),
                ('2', BernoulliNB(alpha=0.25014665533304337, fit_prior=False))]))
('9', Pipeline(steps=[('0',
                 RandomUnderSampler(random_state=38727, replacement=True,
                                    sampling_strategy='not minority')),
                ('1', StandardScaler()), ('2', VarianceThreshold()),
                ('3',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced_subsample',
                                        max_features='log2', min_samples_leaf=4,
                                        min_samples_split=11, n_estimators=45,
                                        random_state=38727))]))

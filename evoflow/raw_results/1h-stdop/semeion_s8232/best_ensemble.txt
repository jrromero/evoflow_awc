['0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '2', '2', '2', '2', '2', '2', '2', '3', '1', '3', '3', '1', '4', '4', '4', '4', '4', '5', '5', '5', '5', '5', '5', '6', '6', '6', '6', '6', '6', '7', '7', '7', '7', '7', '8', '8', '8', '8', '9', '9', '9', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '2', '2', '2', '2', '3', '3', '7', '3', '3', '3', '3', '3', '6', '1', '4', '4', '4', '4', '4', '4', '5', '5', '5', '5', '6', '7', '2', '6', '7', '7', '7', '7', '7', '7', '7', '7', '8', '8', '8', '8', '9', '9', '9', '9', '0', '0', '5', '0', '2', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '2', '3', '3', '3', '3', '3', '4', '4', '4', '4', '4', '1', '4', '4', '4', '4', '5', '5', '5', '5', '5', '5', '6', '6', '6', '6', '6', '6', '6', '7', '7', '7', '7', '7', '8', '8', '8', '8', '2', '1', '8', '8', '9', '9', '9', '9', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '2', '2', '2', '2', '2', '2', '2', '2', '2', '5', '3', '3', '3', '3', '3', '3', '4', '4', '2', '4', '4', '1', '4', '4', '4', '4', '3', '5', '6', '6', '6', '6', '6', '6', '6', '6', '7', '7', '7', '7', '7', '7', '7', '7', '8', '8', '8', '8', '8', '9', '9', '8', '9', '9', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '4', '1', '1', '1', '1', '1', '1', '7', '2', '2', '2', '2', '2', '2', '2', '2', '2', '2', '2', '2', '3', '3', '3', '3', '2', '3', '3', '3', '4', '4', '4', '4', '4', '4', '4', '4', '4', '5', '5', '5', '5', '5', '5', '5', '3', '5', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '8', '8', '8', '8', '8', '8', '8', '8', '8', '8', '8', '8', '8', '5', '9', '9', '2', '9', '9', '9', '9', '9', '8', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '2', '1', '1', '1', '1', '1', '1', '1', '2', '2', '4', '3', '4', '2', '2', '2', '3', '3', '3', '3', '3', '3', '3', '3', '3', '3', '4', '4', '1', '4', '4', '4', '4', '4', '4', '5', '9', '5', '5', '5', '9', '5', '5', '5', '5', '5', '5', '5', '5', '6', '6', '6', '6', '6', '6', '0', '6', '6', '6', '6', '6', '6', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '8', '8', '8', '8', '8', '8', '9', '8', '8', '9', '8', '8', '9', '9', '9', '9', '9', '9', '9', '9', '9', '3', '9']
{'accuracy_score': 0.9224318658280922, 'balanced_accuracy_score': 0.9189097682718266, 'macro_precision_score': 0.9198211421444487, 'macro_recall_score': 0.9189097682718266, 'macro_f1_score': 0.9187243719544943, 'micro_precision_score': 0.9224318658280922, 'micro_recall_score': 0.9224318658280922, 'micro_f1_score': 0.9224318658280922}
('0', Pipeline(steps=[('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt', min_samples_leaf=2,
                                        min_samples_split=3, n_estimators=62,
                                        random_state=8232))]))
('1', Pipeline(steps=[('0', MinMaxScaler()),
                ('1',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt', min_samples_leaf=2,
                                        min_samples_split=3, n_estimators=62,
                                        random_state=8232))]))
('2', Pipeline(steps=[('0', VarianceThreshold()),
                ('1',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt', min_samples_leaf=2,
                                        min_samples_split=3, n_estimators=62,
                                        random_state=8232))]))
('3', Pipeline(steps=[('0', StandardScaler(with_mean=False, with_std=False)),
                ('1',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt', min_samples_leaf=2,
                                        min_samples_split=3, n_estimators=62,
                                        random_state=8232))]))
('4', Pipeline(steps=[('0',
                 SMOTE(k_neighbors=2, random_state=8232,
                       sampling_strategy='not minority')),
                ('1', MinMaxScaler()),
                ('2',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt', min_samples_leaf=2,
                                        min_samples_split=3, n_estimators=62,
                                        random_state=8232))]))
('5', Pipeline(steps=[('0',
                 SMOTE(k_neighbors=2, random_state=8232,
                       sampling_strategy='not minority')),
                ('1',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt', min_samples_leaf=2,
                                        min_samples_split=3, n_estimators=62,
                                        random_state=8232))]))
('6', Pipeline(steps=[('0',
                 SMOTE(k_neighbors=2, random_state=8232,
                       sampling_strategy='not minority')),
                ('1', StandardScaler(with_std=False)),
                ('2',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt', min_samples_leaf=2,
                                        min_samples_split=3, n_estimators=62,
                                        random_state=8232))]))
('7', Pipeline(steps=[('0', VarianceThreshold()), ('1', MaxAbsScaler()),
                ('2',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt', min_samples_leaf=2,
                                        min_samples_split=3, n_estimators=62,
                                        random_state=8232))]))
('8', Pipeline(steps=[('0',
                 RandomUnderSampler(random_state=8232,
                                    sampling_strategy='not majority')),
                ('1', StandardScaler(with_mean=False, with_std=False)),
                ('2',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt', min_samples_leaf=2,
                                        min_samples_split=3, n_estimators=62,
                                        random_state=8232))]))
('9', Pipeline(steps=[('0', StandardScaler(with_std=False)),
                ('1',
                 MLPClassifier(activation='logistic',
                               alpha=0.004443023826516898,
                               learning_rate_init=0.07761221777515452,
                               random_state=8232))]))

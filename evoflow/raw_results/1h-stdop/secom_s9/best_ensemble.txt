
{'accuracy_score': 0.3553191489361702, 'balanced_accuracy_score': 0.4647337869046876, 'macro_precision_score': 0.4886088709677419, 'macro_recall_score': 0.4647337869046876, 'macro_f1_score': 0.3079199692862454, 'micro_precision_score': 0.3553191489361702, 'micro_recall_score': 0.3553191489361702, 'micro_f1_score': 0.3553191489361702}
('0', Pipeline(steps=[('0', KNNImputer(n_neighbors=9)), ('1', MaxAbsScaler()),
                ('2', GaussianNB(var_smoothing=7.004486776698549e-06))]))
('1', Pipeline(steps=[('0', KNNImputer()), ('1', VarianceThreshold()),
                ('2', GaussianNB(var_smoothing=2.4640305786434647e-05))]))
('2', Pipeline(steps=[('0', KNNImputer(n_neighbors=9)), ('1', MaxAbsScaler()),
                ('2', SelectFwe(alpha=0.03233972601264469)),
                ('3',
                 ExtraTreesClassifier(class_weight='balanced',
                                      max_features='log2', min_samples_leaf=6,
                                      min_samples_split=19, n_estimators=99,
                                      random_state=9))]))
('3', Pipeline(steps=[('0', KNNImputer(n_neighbors=9)),
                ('1', SMOTETomek(random_state=9, sampling_strategy='minority')),
                ('2', GaussianNB(var_smoothing=7.004486776698549e-06))]))
('4', Pipeline(steps=[('0', MinMaxScaler()), ('1', VarianceThreshold()),
                ('2', MaxAbsScaler()), ('3', KNNImputer(n_neighbors=3)),
                ('4',
                 SGDClassifier(alpha=8.00519995446584e-05,
                               class_weight='balanced',
                               epsilon=0.0005150451745010018,
                               eta0=0.0008971587086257885,
                               l1_ratio=1.4991238848863761e-09,
                               loss='squared_hinge', power_t=0.6683589715165931,
                               random_state=9, tol=0.00028351419153481005))]))
('5', Pipeline(steps=[('0', MaxAbsScaler()), ('1', KNNImputer(n_neighbors=9)),
                ('2', MinMaxScaler()),
                ('3', GaussianNB(var_smoothing=0.0005428264879255202))]))
('6', Pipeline(steps=[('0', KNNImputer(n_neighbors=3)),
                ('1', GaussianNB(var_smoothing=7.004486776698549e-06))]))
('7', Pipeline(steps=[('0', KNNImputer(n_neighbors=9)), ('1', RobustScaler()),
                ('2', MinMaxScaler()),
                ('3', KNeighborsClassifier(n_neighbors=1))]))
('8', Pipeline(steps=[('0', KNNImputer(n_neighbors=9)), ('1', VarianceThreshold()),
                ('2', SelectFwe(alpha=0.03233972601264469)),
                ('3',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced_subsample',
                                        criterion='entropy',
                                        max_features='log2',
                                        min_samples_leaf=12,
                                        min_samples_split=3, random_state=9))]))
('9', Pipeline(steps=[('0', MinMaxScaler()), ('1', KNNImputer(n_neighbors=9)),
                ('2', GaussianNB(var_smoothing=0.0005428264879255202))]))

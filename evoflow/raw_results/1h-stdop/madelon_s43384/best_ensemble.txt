['-1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '1', '-1', '1', '-1', '1', '1', '1', '-1', '-1', '-1', '1', '-1', '1', '-1', '-1', '-1', '-1', '1', '1', '-1', '1', '1', '1', '1', '-1', '-1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '1', '1', '-1', '1', '-1', '1', '-1', '1', '1', '1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '-1', '1', '1', '1', '-1', '-1', '1', '1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '1', '1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '1', '1', '-1', '-1', '1', '1', '1', '1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '1', '1', '1', '1', '1', '1', '1', '-1', '1', '1', '-1', '1', '-1', '-1', '-1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '1', '1', '-1', '1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '1', '1', '-1', '-1', '1', '1', '-1', '1', '1', '-1', '-1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '1', '-1', '-1', '1', '-1', '1', '-1', '1', '1', '1', '-1', '1', '1', '1', '-1', '1', '-1', '-1', '1', '1', '-1', '1', '1', '1', '1', '1', '1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '1', '1', '1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '-1', '1', '-1', '1', '1', '-1', '1', '-1', '-1', '1', '-1', '1', '1', '1', '1', '1', '1', '1', '-1', '1', '1', '1', '-1', '1', '1', '1', '-1', '1', '-1', '-1', '-1', '-1', '1', '1', '1', '-1', '1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '-1', '-1', '-1', '-1', '1', '1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '1', '1', '-1', '1', '-1', '1', '1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '1', '-1', '1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '1', '-1', '1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '-1', '1', '-1', '-1', '1', '-1', '1', '-1', '-1', '-1', '1', '1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '-1', '1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '-1', '-1', '1', '1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '1', '1', '-1', '1', '1', '-1', '1', '-1', '1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '1', '-1', '1', '1', '-1', '-1', '1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '1', '1', '1', '-1', '1', '1', '1', '1', '-1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '-1', '1', '-1', '1', '1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '1', '-1', '1', '1', '-1', '1', '-1', '-1', '1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '1', '1', '-1', '-1', '-1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '1', '-1', '1', '1', '1', '-1', '1', '1', '1', '1', '1', '1', '1', '1', '-1', '-1', '1', '1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '1', '1', '-1', '1', '1']
{'accuracy_score': 0.8730769230769231, 'balanced_accuracy_score': 0.873159057437408, 'macro_precision_score': 0.8734463314010488, 'macro_recall_score': 0.873159057437408, 'macro_f1_score': 0.8730600227840986, 'micro_precision_score': 0.8730769230769231, 'micro_recall_score': 0.8730769230769231, 'micro_f1_score': 0.873076923076923}
('0', Pipeline(steps=[('0', FeatureAgglomeration(linkage='complete', n_clusters=16)),
                ('1',
                 RandomUnderSampler(random_state=43384,
                                    sampling_strategy='not majority')),
                ('2', MaxAbsScaler()),
                ('3', KNeighborsClassifier(n_neighbors=13))]))
('1', Pipeline(steps=[('0', FeatureAgglomeration(linkage='complete', n_clusters=16)),
                ('1', SelectPercentile(percentile=44.037253353434004)),
                ('2', RobustScaler()),
                ('3', KNeighborsClassifier(n_neighbors=8, weights='distance'))]))
('2', Pipeline(steps=[('0', FeatureAgglomeration(linkage='complete', n_clusters=16)),
                ('1',
                 RandomUnderSampler(random_state=43384,
                                    sampling_strategy='not majority')),
                ('2', MaxAbsScaler()),
                ('3',
                 KNeighborsClassifier(n_neighbors=17, weights='distance'))]))
('3', Pipeline(steps=[('0', FeatureAgglomeration(linkage='complete', n_clusters=16)),
                ('1', SelectPercentile(percentile=44.037253353434004)),
                ('2', MaxAbsScaler()),
                ('3', KNeighborsClassifier(n_neighbors=3, p=1))]))
('4', Pipeline(steps=[('0', FeatureAgglomeration(linkage='complete', n_clusters=16)),
                ('1', SelectPercentile(percentile=44.037253353434004)),
                ('2', MaxAbsScaler()),
                ('3', KNeighborsClassifier(n_neighbors=7, weights='distance'))]))
('5', Pipeline(steps=[('0', FeatureAgglomeration(linkage='complete', n_clusters=16)),
                ('1', SelectPercentile(percentile=44.037253353434004)),
                ('2', MaxAbsScaler()),
                ('3', KNeighborsClassifier(n_neighbors=8, weights='distance'))]))
('6', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1',
                 RandomUnderSampler(random_state=43384,
                                    sampling_strategy='not majority')),
                ('2', FeatureAgglomeration(linkage='complete', n_clusters=16)),
                ('3', KNeighborsClassifier(n_neighbors=7, weights='distance'))]))
('7', Pipeline(steps=[('0', MaxAbsScaler()), ('1', Normalizer()),
                ('2', FeatureAgglomeration(linkage='complete', n_clusters=16)),
                ('3', KNeighborsClassifier(n_neighbors=8, weights='distance'))]))
('8', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1',
                 RandomUnderSampler(random_state=43384,
                                    sampling_strategy='not majority')),
                ('2', FeatureAgglomeration(linkage='complete', n_clusters=16)),
                ('3', KNeighborsClassifier(n_neighbors=8, weights='distance'))]))
('9', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1', SelectPercentile(percentile=44.037253353434004)),
                ('2', FeatureAgglomeration(linkage='complete', n_clusters=16)),
                ('3',
                 KNeighborsClassifier(n_neighbors=16, weights='distance'))]))

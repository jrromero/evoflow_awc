['POX', 'NUC', 'CYT', 'CYT', 'CYT', 'EXC', 'CYT', 'CYT', 'MIT', 'ME1', 'ME1', 'ME2', 'MIT', 'ME1', 'CYT', 'NUC', 'CYT', 'MIT', 'MIT', 'NUC', 'ME3', 'CYT', 'CYT', 'ME1', 'MIT', 'MIT', 'MIT', 'POX', 'ME3', 'MIT', 'ME1', 'ME3', 'CYT', 'CYT', 'CYT', 'POX', 'NUC', 'MIT', 'CYT', 'MIT', 'ME3', 'NUC', 'NUC', 'CYT', 'NUC', 'CYT', 'MIT', 'NUC', 'CYT', 'NUC', 'CYT', 'NUC', 'NUC', 'MIT', 'CYT', 'MIT', 'POX', 'NUC', 'CYT', 'ME1', 'ME1', 'MIT', 'MIT', 'ME3', 'MIT', 'MIT', 'MIT', 'EXC', 'CYT', 'NUC', 'EXC', 'EXC', 'CYT', 'ME2', 'CYT', 'MIT', 'EXC', 'EXC', 'CYT', 'CYT', 'CYT', 'CYT', 'ME3', 'POX', 'CYT', 'NUC', 'CYT', 'NUC', 'MIT', 'NUC', 'ME3', 'NUC', 'ME3', 'CYT', 'ME3', 'NUC', 'CYT', 'ME2', 'CYT', 'CYT', 'ME3', 'ME3', 'NUC', 'ME1', 'ERL', 'NUC', 'CYT', 'ME3', 'ME3', 'POX', 'ME3', 'ME1', 'ME1', 'CYT', 'ME3', 'ME3', 'ME1', 'NUC', 'NUC', 'NUC', 'MIT', 'ME3', 'MIT', 'NUC', 'ME3', 'NUC', 'NUC', 'CYT', 'ME3', 'CYT', 'CYT', 'NUC', 'ME2', 'ME2', 'NUC', 'NUC', 'MIT', 'NUC', 'CYT', 'CYT', 'NUC', 'MIT', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'ME3', 'NUC', 'CYT', 'NUC', 'MIT', 'MIT', 'MIT', 'NUC', 'CYT', 'ME3', 'ME3', 'CYT', 'MIT', 'MIT', 'CYT', 'MIT', 'CYT', 'NUC', 'ME1', 'ME3', 'NUC', 'MIT', 'ME1', 'NUC', 'ERL', 'MIT', 'ME3', 'ME2', 'ME2', 'CYT', 'NUC', 'NUC', 'ME3', 'ME3', 'ME2', 'CYT', 'NUC', 'NUC', 'ME3', 'ME2', 'CYT', 'MIT', 'CYT', 'MIT', 'MIT', 'ME3', 'MIT', 'MIT', 'ME3', 'NUC', 'NUC', 'MIT', 'CYT', 'NUC', 'NUC', 'NUC', 'MIT', 'MIT', 'MIT', 'MIT', 'CYT', 'CYT', 'MIT', 'MIT', 'MIT', 'ME3', 'MIT', 'NUC', 'CYT', 'MIT', 'CYT', 'MIT', 'ME3', 'NUC', 'ME3', 'ME2', 'ME3', 'MIT', 'NUC', 'ME3', 'CYT', 'ME2', 'NUC', 'CYT', 'EXC', 'NUC', 'ME2', 'ME3', 'ME1', 'CYT', 'NUC', 'CYT', 'MIT', 'CYT', 'CYT', 'CYT', 'NUC', 'ME3', 'NUC', 'POX', 'CYT', 'MIT', 'NUC', 'POX', 'MIT', 'CYT', 'EXC', 'CYT', 'CYT', 'NUC', 'MIT', 'ME1', 'ME2', 'ME3', 'NUC', 'NUC', 'CYT', 'CYT', 'ME3', 'CYT', 'ME2', 'MIT', 'CYT', 'NUC', 'CYT', 'MIT', 'NUC', 'CYT', 'NUC', 'NUC', 'CYT', 'MIT', 'MIT', 'MIT', 'NUC', 'CYT', 'ME3', 'CYT', 'ME2', 'CYT', 'NUC', 'CYT', 'MIT', 'NUC', 'NUC', 'MIT', 'NUC', 'NUC', 'ME3', 'CYT', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'NUC', 'CYT', 'CYT', 'CYT', 'NUC', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'MIT', 'CYT', 'MIT', 'NUC', 'MIT', 'CYT', 'CYT', 'CYT', 'MIT', 'MIT', 'CYT', 'MIT', 'MIT', 'MIT', 'ME2', 'ME3', 'NUC', 'CYT', 'CYT', 'CYT', 'NUC', 'ME3', 'ME3', 'NUC', 'EXC', 'NUC', 'MIT', 'MIT', 'NUC', 'CYT', 'CYT', 'ME3', 'CYT', 'NUC', 'NUC', 'ME3', 'ME3', 'NUC', 'MIT', 'ME3', 'CYT', 'CYT', 'ME3', 'MIT', 'NUC', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'NUC', 'CYT', 'MIT', 'NUC', 'NUC', 'ME3', 'ME3', 'EXC', 'ME3', 'ME1', 'NUC', 'MIT', 'NUC', 'NUC', 'ME1', 'CYT', 'CYT', 'CYT', 'MIT', 'CYT', 'CYT', 'CYT', 'CYT', 'NUC', 'NUC', 'NUC', 'CYT', 'MIT', 'NUC', 'NUC', 'NUC', 'NUC', 'CYT', 'ME1', 'ME1', 'CYT', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'ME3', 'CYT', 'CYT', 'CYT', 'ME1', 'CYT', 'ME1', 'NUC', 'ME1', 'CYT', 'ME3', 'POX', 'ME1', 'ME3', 'ME3', 'ME3', 'ME3', 'ME3', 'ME3', 'MIT', 'NUC', 'ME3', 'MIT', 'NUC', 'CYT', 'ME3', 'NUC', 'CYT', 'ME2']
{'accuracy_score': 0.5955056179775281, 'balanced_accuracy_score': 0.5682273204964354, 'macro_precision_score': 0.46409049747693826, 'macro_recall_score': 0.5114045884467918, 'macro_f1_score': 0.48157159923389614, 'micro_precision_score': 0.5955056179775281, 'micro_recall_score': 0.5955056179775281, 'micro_f1_score': 0.5955056179775281}
('0', Pipeline(steps=[('0', SimpleImputer()), ('1', MaxAbsScaler()),
                ('2', MinMaxScaler()),
                ('3',
                 ExtraTreesClassifier(bootstrap=True, class_weight='balanced',
                                      criterion='entropy', max_features='log2',
                                      min_samples_leaf=2, min_samples_split=13,
                                      n_estimators=52, random_state=43384))]))
('1', Pipeline(steps=[('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      class_weight='balanced_subsample',
                                      criterion='entropy', max_features='sqrt',
                                      min_samples_split=14, n_estimators=91,
                                      random_state=43384))]))
('2', Pipeline(steps=[('0',
                 SGDClassifier(alpha=0.002090779491650328, average=True,
                               class_weight='balanced',
                               epsilon=0.006262427040806611,
                               eta0=6.668486025653025e-06,
                               l1_ratio=1.5338610822860726e-09,
                               loss='modified_huber',
                               power_t=0.8497842582236876, random_state=43384,
                               tol=1.5620041105322657e-05))]))
('3', Pipeline(steps=[('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      class_weight='balanced_subsample',
                                      max_features='log2', min_samples_split=8,
                                      n_estimators=72, random_state=43384))]))
('4', Pipeline(steps=[('0',
                 ExtraTreesClassifier(class_weight='balanced_subsample',
                                      max_features='sqrt', min_samples_leaf=2,
                                      min_samples_split=11, n_estimators=21,
                                      random_state=43384))]))
('5', Pipeline(steps=[('0', MinMaxScaler()), ('1', MaxAbsScaler()),
                ('2', RobustScaler(with_scaling=False)),
                ('3',
                 ExtraTreesClassifier(bootstrap=True,
                                      class_weight='balanced_subsample',
                                      criterion='entropy', max_features='sqrt',
                                      min_samples_split=14, n_estimators=91,
                                      random_state=43384))]))
('6', Pipeline(steps=[('0',
                 RBFSampler(gamma=0.001048497734395849, n_components=65,
                            random_state=43384)),
                ('1', VarianceThreshold()), ('2', MaxAbsScaler()),
                ('3',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        criterion='entropy',
                                        max_features='sqrt',
                                        min_samples_leaf=14,
                                        min_samples_split=9, n_estimators=44,
                                        random_state=43384))]))
('7', Pipeline(steps=[('0', MinMaxScaler()),
                ('1',
                 ExtraTreesClassifier(class_weight='balanced_subsample',
                                      criterion='entropy', max_features='log2',
                                      min_samples_leaf=2, min_samples_split=12,
                                      n_estimators=80, random_state=43384))]))
('8', Pipeline(steps=[('0', SelectFwe(alpha=0.0010611094573836264)),
                ('1', KNNImputer(n_neighbors=2, weights='distance')),
                ('2', Normalizer(norm='max')),
                ('3',
                 ExtraTreesClassifier(bootstrap=True,
                                      class_weight='balanced_subsample',
                                      max_features='log2', min_samples_split=8,
                                      n_estimators=72, random_state=43384))]))
('9', Pipeline(steps=[('0', MinMaxScaler()),
                ('1',
                 SMOTE(k_neighbors=3, random_state=43384,
                       sampling_strategy='not majority')),
                ('2',
                 MultinomialNB(alpha=0.37582480836489385, fit_prior=False))]))

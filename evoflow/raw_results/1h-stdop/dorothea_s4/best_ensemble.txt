
{'accuracy_score': 0.9478260869565217, 'balanced_accuracy_score': 0.7940917107583774, 'macro_precision_score': 0.7701863354037266, 'macro_recall_score': 0.7940917107583774, 'macro_f1_score': 0.7815226569096538, 'micro_precision_score': 0.9478260869565217, 'micro_recall_score': 0.9478260869565217, 'micro_f1_score': 0.9478260869565217}
('0', Pipeline(steps=[('0',
                 SGDClassifier(alpha=0.0015371446603013963, average=True,
                               class_weight='balanced',
                               epsilon=0.0017287625012702887,
                               eta0=0.06597158433455541,
                               l1_ratio=7.703167437248208e-09,
                               power_t=0.5324849096501242, random_state=4,
                               tol=0.00016313463729769996))]))
('1', Pipeline(steps=[('0', VarianceThreshold()), ('1', StandardScaler()),
                ('2',
                 LinearSVC(C=0.0006274089942952286, random_state=4,
                           tol=0.002371410646059894))]))
('2', Pipeline(steps=[('0', SelectPercentile(percentile=10.063256154073134)),
                ('1',
                 SGDClassifier(alpha=3.749106121664956e-05,
                               class_weight='balanced',
                               epsilon=0.009521230715496163,
                               eta0=4.725137362768448e-05,
                               l1_ratio=1.551044585931092e-05,
                               loss='perceptron', power_t=0.4362549753279327,
                               random_state=4, tol=0.09135906439263061))]))
('3', Pipeline(steps=[('0', Normalizer(norm='l1')),
                ('1', SelectPercentile(percentile=51.07906596339584)),
                ('2',
                 Nystroem(coef0=0.7535526731238946, degree=5,
                          gamma=0.2650547688242564, kernel='cosine',
                          n_components=66, random_state=4)),
                ('3',
                 LogisticRegression(C=6.765252482866307,
                                    class_weight='balanced', random_state=4))]))
('4', Pipeline(steps=[('0', VarianceThreshold()),
                ('1',
                 RandomOverSampler(random_state=4,
                                   sampling_strategy='not minority')),
                ('2', MinMaxScaler()),
                ('3',
                 LinearSVC(C=0.010778075826792972, class_weight='balanced',
                           dual=False, penalty='l1', random_state=4,
                           tol=0.00562194466629735))]))
('5', Pipeline(steps=[('0', VarianceThreshold()),
                ('1',
                 Nystroem(coef0=0.16164425406806493, degree=3,
                          gamma=0.06827799741467283, kernel='poly',
                          n_components=95, random_state=4)),
                ('2',
                 RandomOverSampler(random_state=4,
                                   sampling_strategy='minority')),
                ('3',
                 PassiveAggressiveClassifier(C=3.74098056590367e-05,
                                             fit_intercept=False,
                                             random_state=4))]))
('6', Pipeline(steps=[('0',
                 Nystroem(coef0=-0.5048455896145028, degree=5,
                          gamma=0.19718196847201314, kernel='cosine',
                          n_components=56, random_state=4)),
                ('1', MinMaxScaler()),
                ('2', FeatureAgglomeration(linkage='complete', n_clusters=20)),
                ('3',
                 ExtraTreesClassifier(class_weight='balanced_subsample',
                                      criterion='entropy', max_features='sqrt',
                                      min_samples_leaf=6, min_samples_split=11,
                                      n_estimators=67, random_state=4))]))
('7', Pipeline(steps=[('0', MinMaxScaler()), ('1', VarianceThreshold()),
                ('2',
                 RandomOverSampler(random_state=4,
                                   sampling_strategy='not minority')),
                ('3',
                 MLPClassifier(alpha=0.0032143618268623423,
                               learning_rate_init=0.1912188122721929,
                               random_state=4, solver='lbfgs'))]))
('8', Pipeline(steps=[('0',
                 Nystroem(coef0=-0.6037807440160627, degree=5,
                          gamma=0.00015329970316404573, kernel='cosine',
                          n_components=34, random_state=4)),
                ('1',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced_subsample',
                                        max_features='sqrt',
                                        min_samples_leaf=19,
                                        min_samples_split=13, n_estimators=14,
                                        random_state=4))]))
('9', Pipeline(steps=[('0', MaxAbsScaler()), ('1', VarianceThreshold()),
                ('2',
                 SGDClassifier(alpha=0.0023523231315445378,
                               epsilon=0.026211081834524436,
                               eta0=0.001081944068557031,
                               l1_ratio=1.74662765824855e-08, loss='perceptron',
                               power_t=0.8432487807076754, random_state=4,
                               tol=0.0007465399900213314))]))

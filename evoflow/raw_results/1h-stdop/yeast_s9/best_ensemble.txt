['POX', 'CYT', 'CYT', 'CYT', 'MIT', 'EXC', 'CYT', 'CYT', 'CYT', 'ME1', 'ME1', 'ME2', 'MIT', 'ME1', 'CYT', 'NUC', 'CYT', 'MIT', 'CYT', 'NUC', 'ME3', 'CYT', 'CYT', 'ME1', 'MIT', 'MIT', 'MIT', 'POX', 'ME3', 'NUC', 'ME1', 'ME3', 'CYT', 'CYT', 'CYT', 'POX', 'NUC', 'MIT', 'CYT', 'MIT', 'ME3', 'NUC', 'NUC', 'CYT', 'NUC', 'CYT', 'MIT', 'NUC', 'CYT', 'NUC', 'CYT', 'NUC', 'NUC', 'MIT', 'CYT', 'MIT', 'POX', 'NUC', 'CYT', 'ME1', 'ME3', 'MIT', 'MIT', 'ME3', 'MIT', 'MIT', 'MIT', 'EXC', 'CYT', 'CYT', 'EXC', 'VAC', 'CYT', 'ME2', 'CYT', 'NUC', 'EXC', 'EXC', 'CYT', 'CYT', 'CYT', 'CYT', 'ME3', 'POX', 'CYT', 'NUC', 'CYT', 'NUC', 'MIT', 'NUC', 'ME3', 'NUC', 'ME3', 'CYT', 'ME3', 'NUC', 'CYT', 'ME2', 'CYT', 'CYT', 'NUC', 'ME3', 'NUC', 'EXC', 'NUC', 'NUC', 'CYT', 'ME3', 'ME3', 'POX', 'ME3', 'ME1', 'ME1', 'CYT', 'ME3', 'ME3', 'ME1', 'NUC', 'NUC', 'NUC', 'MIT', 'ME3', 'MIT', 'NUC', 'ME3', 'NUC', 'NUC', 'CYT', 'NUC', 'CYT', 'CYT', 'NUC', 'ME2', 'ME2', 'NUC', 'NUC', 'MIT', 'NUC', 'NUC', 'CYT', 'NUC', 'MIT', 'NUC', 'CYT', 'NUC', 'NUC', 'CYT', 'CYT', 'ME3', 'NUC', 'CYT', 'CYT', 'MIT', 'MIT', 'MIT', 'NUC', 'CYT', 'ME3', 'ME3', 'CYT', 'MIT', 'MIT', 'CYT', 'MIT', 'CYT', 'NUC', 'ME1', 'ME3', 'NUC', 'MIT', 'ME1', 'NUC', 'MIT', 'MIT', 'ME3', 'ME2', 'ME2', 'NUC', 'CYT', 'ME3', 'ME3', 'ME3', 'ME2', 'CYT', 'NUC', 'NUC', 'ME3', 'ME2', 'CYT', 'MIT', 'MIT', 'MIT', 'ME3', 'ME3', 'CYT', 'MIT', 'ME3', 'NUC', 'NUC', 'MIT', 'CYT', 'NUC', 'NUC', 'NUC', 'MIT', 'MIT', 'ME3', 'MIT', 'CYT', 'CYT', 'NUC', 'MIT', 'MIT', 'ME3', 'MIT', 'NUC', 'CYT', 'MIT', 'CYT', 'MIT', 'ME3', 'NUC', 'NUC', 'VAC', 'ME3', 'MIT', 'NUC', 'ME3', 'CYT', 'ME2', 'NUC', 'CYT', 'MIT', 'NUC', 'ME2', 'ME3', 'ME2', 'CYT', 'CYT', 'CYT', 'MIT', 'CYT', 'CYT', 'CYT', 'NUC', 'ME3', 'CYT', 'POX', 'CYT', 'MIT', 'NUC', 'POX', 'MIT', 'CYT', 'EXC', 'CYT', 'CYT', 'ME3', 'CYT', 'ME1', 'ME2', 'ME3', 'NUC', 'NUC', 'CYT', 'CYT', 'ME3', 'CYT', 'ME2', 'MIT', 'CYT', 'NUC', 'CYT', 'MIT', 'NUC', 'CYT', 'NUC', 'NUC', 'CYT', 'CYT', 'MIT', 'NUC', 'NUC', 'CYT', 'ME3', 'CYT', 'ME2', 'CYT', 'NUC', 'CYT', 'MIT', 'NUC', 'NUC', 'MIT', 'NUC', 'NUC', 'ME3', 'CYT', 'NUC', 'CYT', 'NUC', 'CYT', 'CYT', 'CYT', 'NUC', 'ME3', 'CYT', 'CYT', 'NUC', 'NUC', 'CYT', 'CYT', 'CYT', 'EXC', 'CYT', 'CYT', 'CYT', 'CYT', 'MIT', 'CYT', 'MIT', 'NUC', 'MIT', 'CYT', 'CYT', 'CYT', 'MIT', 'MIT', 'CYT', 'MIT', 'MIT', 'MIT', 'EXC', 'POX', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'ME3', 'ME3', 'CYT', 'ME1', 'NUC', 'MIT', 'MIT', 'NUC', 'CYT', 'CYT', 'ME3', 'CYT', 'NUC', 'CYT', 'ME3', 'ME3', 'NUC', 'MIT', 'ME3', 'CYT', 'CYT', 'ME3', 'MIT', 'NUC', 'NUC', 'CYT', 'CYT', 'MIT', 'CYT', 'NUC', 'NUC', 'CYT', 'MIT', 'NUC', 'CYT', 'ME3', 'ME3', 'EXC', 'ME3', 'ME1', 'NUC', 'MIT', 'NUC', 'CYT', 'ME1', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'NUC', 'NUC', 'NUC', 'CYT', 'MIT', 'NUC', 'CYT', 'NUC', 'NUC', 'CYT', 'ME1', 'ME1', 'CYT', 'NUC', 'CYT', 'CYT', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'ME3', 'CYT', 'CYT', 'CYT', 'ME1', 'MIT', 'ME1', 'NUC', 'ME1', 'CYT', 'ME3', 'ME3', 'ME3', 'ME3', 'ME3', 'ME3', 'ME3', 'ME3', 'ME3', 'MIT', 'NUC', 'ME3', 'MIT', 'NUC', 'CYT', 'CYT', 'NUC', 'CYT', 'ME2']
{'accuracy_score': 0.6089887640449438, 'balanced_accuracy_score': 0.5908053432341309, 'macro_precision_score': 0.5834554064935681, 'macro_recall_score': 0.5908053432341309, 'macro_f1_score': 0.5718284416373149, 'micro_precision_score': 0.6089887640449438, 'micro_recall_score': 0.6089887640449438, 'micro_f1_score': 0.6089887640449438}
('0', Pipeline(steps=[('0', SelectPercentile(percentile=79.74705019575472)),
                ('1', MaxAbsScaler()),
                ('2',
                 RandomForestClassifier(class_weight='balanced',
                                        max_features='sqrt', min_samples_leaf=2,
                                        min_samples_split=10, n_estimators=17,
                                        random_state=9))]))
('1', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1',
                 RandomForestClassifier(class_weight='balanced',
                                        criterion='entropy',
                                        max_features='log2',
                                        min_samples_split=14, n_estimators=99,
                                        random_state=9))]))
('2', Pipeline(steps=[('0', VarianceThreshold()),
                ('1',
                 RandomForestClassifier(class_weight='balanced',
                                        criterion='entropy',
                                        max_features='log2',
                                        min_samples_split=14, n_estimators=99,
                                        random_state=9))]))
('3', Pipeline(steps=[('0', SelectPercentile(percentile=79.74705019575472)),
                ('1',
                 RandomForestClassifier(class_weight='balanced',
                                        max_features='sqrt', min_samples_leaf=2,
                                        min_samples_split=10, n_estimators=17,
                                        random_state=9))]))
('4', Pipeline(steps=[('0',
                 ExtraTreesClassifier(class_weight='balanced_subsample',
                                      max_features='sqrt', min_samples_leaf=4,
                                      min_samples_split=17, n_estimators=58,
                                      random_state=9))]))
('5', Pipeline(steps=[('0',
                 RandomForestClassifier(class_weight='balanced',
                                        criterion='entropy',
                                        max_features='log2',
                                        min_samples_split=14, n_estimators=99,
                                        random_state=9))]))
('6', Pipeline(steps=[('0',
                 RBFSampler(gamma=0.18800343120663315, n_components=56,
                            random_state=9)),
                ('1',
                 RandomForestClassifier(class_weight='balanced',
                                        criterion='entropy',
                                        max_features='log2',
                                        min_samples_split=14, n_estimators=99,
                                        random_state=9))]))
('7', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1', SelectPercentile(percentile=72.13915862869071)),
                ('2',
                 RandomForestClassifier(class_weight='balanced',
                                        criterion='entropy',
                                        max_features='log2',
                                        min_samples_split=14, n_estimators=99,
                                        random_state=9))]))
('8', Pipeline(steps=[('0',
                 RandomForestClassifier(class_weight='balanced',
                                        max_features='sqrt', min_samples_leaf=2,
                                        min_samples_split=10, n_estimators=17,
                                        random_state=9))]))
('9', Pipeline(steps=[('0', Normalizer(norm='max')),
                ('1',
                 RandomOverSampler(random_state=9,
                                   sampling_strategy='not majority')),
                ('2',
                 SGDClassifier(alpha=1.810963947416918e-05, average=True,
                               class_weight='balanced',
                               epsilon=0.027458580149134375,
                               eta0=0.0033766197394447858,
                               l1_ratio=0.010902601255379752,
                               power_t=0.3356883494103112, random_state=9,
                               tol=0.0017868576890873468))]))

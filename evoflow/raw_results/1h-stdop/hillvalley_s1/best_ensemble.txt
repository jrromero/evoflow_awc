
{'accuracy_score': 1.0, 'balanced_accuracy_score': 1.0, 'macro_precision_score': 1.0, 'macro_recall_score': 1.0, 'macro_f1_score': 1.0, 'micro_precision_score': 1.0, 'micro_recall_score': 1.0, 'micro_f1_score': 1.0}
('0', Pipeline(steps=[('0', VarianceThreshold()), ('1', Normalizer(norm='max')),
                ('2', MinMaxScaler()),
                ('3',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='sqrt', min_samples_leaf=4,
                                      min_samples_split=12, n_estimators=84,
                                      random_state=1))]))
('1', Pipeline(steps=[('0', VarianceThreshold()), ('1', Normalizer(norm='max')),
                ('2', MinMaxScaler()),
                ('3',
                 PassiveAggressiveClassifier(C=0.05058699882948137,
                                             fit_intercept=False,
                                             loss='squared_hinge',
                                             random_state=1))]))
('2', Pipeline(steps=[('0',
                 Nystroem(coef0=-0.747448052727745, degree=2,
                          gamma=0.00019454190287504971, kernel='cosine',
                          n_components=62, random_state=1)),
                ('1', MinMaxScaler()),
                ('2',
                 MLPClassifier(activation='logistic',
                               alpha=0.00037981575377879246,
                               learning_rate_init=0.006116799532217015,
                               random_state=1, solver='lbfgs'))]))
('3', Pipeline(steps=[('0', Normalizer(norm='max')),
                ('1',
                 FeatureAgglomeration(affinity='manhattan', linkage='complete',
                                      n_clusters=16)),
                ('2',
                 MLPClassifier(activation='logistic',
                               alpha=0.00037981575377879246,
                               learning_rate_init=0.006116799532217015,
                               random_state=1, solver='lbfgs'))]))
('4', Pipeline(steps=[('0', VarianceThreshold()), ('1', Normalizer(norm='max')),
                ('2',
                 FeatureAgglomeration(affinity='manhattan', linkage='complete',
                                      n_clusters=16)),
                ('3',
                 KNeighborsClassifier(n_neighbors=1, p=1, weights='distance'))]))
('5', Pipeline(steps=[('0', Normalizer()), ('1', FeatureAgglomeration(n_clusters=14)),
                ('2',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced_subsample',
                                        criterion='entropy',
                                        max_features='sqrt',
                                        min_samples_leaf=12,
                                        min_samples_split=18, n_estimators=84,
                                        random_state=1))]))
('6', Pipeline(steps=[('0', Normalizer(norm='max')),
                ('1', FeatureAgglomeration(n_clusters=14)),
                ('2', MinMaxScaler()),
                ('3',
                 MLPClassifier(activation='logistic',
                               alpha=0.00037981575377879246,
                               learning_rate_init=0.006116799532217015,
                               random_state=1, solver='lbfgs'))]))
('7', Pipeline(steps=[('0', Normalizer(norm='max')),
                ('1', FeatureAgglomeration(linkage='average', n_clusters=24)),
                ('2', MinMaxScaler()),
                ('3',
                 MLPClassifier(activation='logistic',
                               alpha=0.00037981575377879246,
                               learning_rate_init=0.006116799532217015,
                               random_state=1, solver='lbfgs'))]))
('8', Pipeline(steps=[('0', Normalizer(norm='max')),
                ('1',
                 FeatureAgglomeration(affinity='manhattan', linkage='complete',
                                      n_clusters=16)),
                ('2', MinMaxScaler()),
                ('3',
                 MLPClassifier(activation='logistic',
                               alpha=0.00037981575377879246,
                               learning_rate_init=0.006116799532217015,
                               random_state=1, solver='lbfgs'))]))
('9', Pipeline(steps=[('0', VarianceThreshold()), ('1', Normalizer(norm='max')),
                ('2',
                 FeatureAgglomeration(affinity='manhattan', linkage='complete',
                                      n_clusters=16)),
                ('3',
                 MLPClassifier(activation='logistic',
                               alpha=0.00037981575377879246,
                               learning_rate_init=0.006116799532217015,
                               random_state=1, solver='lbfgs'))]))

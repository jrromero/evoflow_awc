['1', '1', '1', '2', '2', '2', '2', '1', '1', '1', '1', '1', '1', '2', '1', '1', '2', '1', '1', '1', '2', '2', '1', '1', '1', '1', '1', '2', '1', '2', '1', '2', '2', '2', '2', '1', '1', '1', '2', '2', '1', '2', '1', '1', '2', '1', '1', '1', '2', '2', '1', '2', '1', '1', '2', '2', '1', '2', '1', '2', '2', '1', '1', '2', '1', '2', '2', '1', '1', '2', '2', '1', '1', '1', '2', '2', '1', '1', '2', '1', '2', '1', '2', '1', '1', '2', '2', '1', '1', '1', '2', '1', '2', '1', '2', '2', '1', '1', '2', '2', '2', '1', '1', '2', '1', '2', '1', '2', '2', '1', '2', '1', '2', '2', '2', '2', '2', '2', '2', '1', '2', '1', '2', '2', '2', '2', '1', '2', '1', '2', '1', '2', '1', '1', '1', '1', '2', '2', '1', '1', '2', '1', '1', '1', '2', '2', '1', '2', '1', '1', '1', '1', '2', '2', '1', '2', '2', '1', '2', '1', '2', '1', '1', '2', '1', '1', '2', '1', '1', '1', '1', '1', '2', '1', '2', '2', '1', '1', '2', '2', '2', '1', '1', '1', '1', '1', '2', '2', '1', '1', '2', '1', '1', '1', '2', '1', '2', '2', '2', '1', '2', '2', '2', '1', '1', '1', '1', '2', '1', '1', '2', '1', '1', '1', '1', '2', '1', '1', '2', '2', '2', '1', '1', '1', '1', '1', '1', '1', '1', '2', '1', '1', '2', '1', '2', '1', '2', '1', '2', '2', '1', '2', '1', '1', '2', '2', '2', '1', '1', '1', '2', '1', '1', '2', '2', '1', '1', '1', '1', '1', '1', '1', '2', '2', '1', '2', '2', '1', '2', '1', '1', '2', '1', '1', '1', '1', '2', '2', '1', '1', '2', '1', '1', '2', '1', '2', '2', '2', '2', '1', '1', '1', '2', '1', '1', '2', '2', '1', '1', '2', '1', '1', '2', '2', '2', '1', '2', '2', '1', '2', '1', '1', '1', '1', '2', '2', '1', '1', '2', '1', '1', '1', '2', '2', '1', '2', '2', '2', '2', '2', '1', '2', '2', '1', '2', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '2', '2', '2', '1', '1', '2', '2', '1', '2', '1', '1', '2', '2', '1', '1', '1', '1', '2', '1', '1', '1', '1', '2', '1', '1', '2', '1', '1', '1', '2', '2', '1', '1', '1', '1', '1', '1', '1', '2', '1', '2', '2', '2', '1', '1', '1', '1', '2', '1', '1', '2', '2', '2', '1', '1', '1', '1', '1', '1', '2', '1', '1', '1', '1', '2', '1', '1', '1', '1', '2', '2', '1', '2', '1', '1', '1', '1', '2', '1', '2', '1', '2', '1', '1', '2', '2', '1', '1', '1', '1', '2', '2', '2', '1', '1', '1', '2', '1', '1', '2', '1', '2', '1', '1', '2', '1', '1', '1', '1', '1', '2', '1', '2', '2', '2', '1', '2', '2', '1', '2', '1', '1', '1', '1', '2', '2', '2', '2', '2', '2', '1', '2', '2', '1', '1', '1', '1', '1', '1', '1', '1', '2', '2', '1', '1', '2', '1', '2', '1', '1', '1', '1', '1', '1', '2', '2', '2', '1', '2', '2', '1', '1', '1', '1', '2', '1', '2', '1', '1', '1', '1', '1', '1', '1', '2', '1', '2', '2', '1', '1', '1', '2', '2', '1', '2', '2', '1', '1', '1', '1', '1', '2', '2', '1', '2', '1', '2', '1', '1', '2', '2', '1', '1', '1', '2', '2', '1', '2', '1', '1', '1', '2', '2', '1', '2', '1', '1', '1', '2', '2', '1', '1', '2', '2', '1', '2', '1', '1', '1', '2', '2', '1', '1', '2', '2', '1', '1', '2', '2', '2', '2', '1', '1', '1', '1', '1', '2', '1', '2', '1', '2', '1', '2', '1', '1', '1', '1', '1', '2', '1', '1', '2', '1', '1', '2', '2', '2', '1', '1', '2', '2', '1', '1', '2', '2', '2', '1', '1', '1', '1', '1', '1', '1', '2', '1', '2', '2', '2', '1', '1', '1', '1', '2', '1', '1', '1', '1', '1', '1', '2', '2', '1', '1', '1', '1', '1', '1', '1', '2', '1', '1', '1', '1', '1', '1', '1', '2', '2', '1', '1', '2', '2', '1', '1', '1', '1', '2', '1', '1', '2', '1', '2', '1', '1', '1', '2', '1', '2', '1', '1', '1', '1', '2', '1', '2', '1', '2', '1', '1', '2', '2', '2', '2', '2', '2', '1', '1', '2', '1', '1', '2', '2', '1', '1', '2', '1', '1', '2', '1', '2', '1', '1', '1', '1', '1', '1', '2', '1', '1', '1', '2', '1', '1', '1', '1', '2', '2', '1', '2', '1', '1', '1', '1', '1', '1', '1', '2', '2', '1', '1', '1', '1', '2', '2', '1', '2', '1', '2', '1', '1', '1', '1', '1', '1', '1', '1', '2', '1', '1', '1', '1', '2', '2', '2', '2', '1', '2', '2', '1', '2', '2', '1', '1', '1', '2', '1', '2', '1', '1', '2', '1', '2', '1', '2', '1', '1', '1', '2', '1', '2', '2', '2', '2', '1', '1', '1', '1', '2', '2', '1', '1', '1', '2', '1', '1', '2', '2', '2', '1', '1', '2', '2', '1', '1', '2', '2', '2', '2', '1', '1', '1', '1', '1', '1', '1', '1', '1', '2', '1', '1', '1', '1', '2', '1', '1', '1', '1', '2', '1', '2', '2', '1', '1', '2', '2', '1', '1', '1', '1', '1', '1', '1', '2', '1', '1', '1', '2', '2', '1', '1', '1', '1', '1', '2', '1', '2', '2', '2', '2', '2', '1', '1', '1', '2', '1', '2', '1', '1', '1', '1', '2', '1', '1', '1', '2', '1', '1', '1', '2', '2', '1', '1', '1', '2', '1', '2', '2', '2', '2', '1', '2', '1', '2', '1', '2', '2', '1', '1', '1', '2', '2', '2', '1', '1', '1', '1', '2', '1', '1', '2', '1', '2', '1', '1', '2', '1', '1', '2', '1', '2', '1', '1', '1', '1', '1', '1', '1', '1', '2', '2', '1', '1', '2', '1', '1', '1', '2', '2', '2', '1', '1', '2', '1', '1', '2', '2', '1', '2', '2', '2', '1', '2', '2', '1', '1', '1', '1', '1', '1', '1', '1', '1', '2', '2', '1', '1', '1', '1', '1', '1', '2', '2', '2', '1', '1', '1', '1', '1', '1', '1', '2', '1', '1', '1', '2', '2', '2', '1', '1', '1', '2', '2', '1', '1', '1', '1', '1', '2', '1', '1', '2', '1', '2', '2', '1', '1', '1', '2', '2', '1', '1', '1', '2', '2', '1', '1', '2', '1', '1', '1', '2', '1', '1', '1', '2', '1', '1', '1', '2', '2', '2', '1', '1', '1', '2', '1', '2', '1', '1', '1', '2', '2', '2', '1', '2', '2', '1', '2', '1', '2', '2', '1', '2', '2', '2', '1', '1', '1', '2', '2', '2', '1', '1', '1', '1', '2', '1', '1', '2', '2', '1', '1', '1', '2', '1', '1', '1', '2', '1', '2', '2', '1', '1', '1', '1', '2', '1', '2', '1', '1', '1', '1', '1', '1', '1', '2', '1', '1', '1', '1', '1', '1', '1', '2', '1', '2', '1', '1', '1', '2', '1', '1', '2', '1', '2', '1', '1', '2', '1', '1', '2', '2', '2', '1', '2', '1', '1', '2', '2', '1', '2', '2', '2', '1', '2', '1', '1', '2', '2', '2', '2', '1', '1', '1', '1', '1', '2', '1', '2', '1', '1', '2', '1', '1', '2', '1', '1', '1', '2', '1', '1', '2', '2', '2', '1', '1', '2', '1', '2', '1', '1', '2', '2', '2', '1', '2', '2', '1', '1', '2', '1', '1', '1', '2', '2', '2', '1', '2', '1', '2', '1', '1', '2', '1', '1', '2', '1', '2', '1', '1', '1', '1', '1', '2', '2', '1', '1', '1', '1', '2', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '2', '2', '2', '1', '1', '1', '2', '1', '2', '1', '2', '2', '1', '1', '2', '2', '2', '2', '1', '1', '1', '1', '2', '2', '1', '2', '1', '2', '1', '1', '1', '1', '1', '2', '1', '2', '2', '1', '1', '2', '2', '2', '1', '2', '1', '1', '2', '2', '1', '1', '1', '1', '1', '1', '1', '1', '2', '1', '1', '1', '1', '1', '1', '1', '1', '1', '2', '1', '2', '1', '1', '2', '2', '2', '2', '2', '1', '1', '2', '1', '1', '1', '1', '1', '1', '1', '2', '1', '2', '1', '1', '1', '2', '2', '2', '1', '1', '1', '1', '1', '1', '1', '1', '2', '2', '1', '2', '2', '2', '2', '1', '2', '1', '2', '1', '2', '1', '1', '1', '1', '1', '2', '1', '1', '2', '1', '2', '1', '1', '1', '2', '1', '2', '1', '1', '1', '2', '2', '1', '1', '2', '1', '1', '2', '2', '2', '2', '1', '1', '1', '1', '2', '2', '2', '1', '1', '1', '2', '2', '1', '2', '1', '1', '1', '1', '2', '1', '1', '1', '2', '1', '1', '1', '1', '2', '1', '1', '2', '1', '2', '1', '2', '1', '1', '1', '2', '1', '1', '1', '2', '2', '1', '2', '1', '2', '1', '2', '2', '1', '2', '1', '2', '1', '1', '2', '1', '1', '1', '1', '2', '1', '2', '2', '2', '1', '1', '1', '2', '1', '1', '2', '1', '1', '1', '1', '1', '1', '2', '2', '1', '1', '2', '1', '2', '1', '1', '1', '1', '1', '1', '1', '1', '2', '1', '2', '1', '1', '1', '2', '1', '1', '1', '2', '2', '1', '1', '1', '1', '1', '2', '2', '1', '2', '2', '2', '2', '1', '2', '2', '2', '1', '1', '1', '1', '1', '2', '1', '1', '2', '1', '1', '1', '2', '1', '2', '1', '1', '2', '1', '1', '2', '2', '1', '1', '2']
{'accuracy_score': 0.9517601043024772, 'balanced_accuracy_score': 0.9488980274870042, 'macro_precision_score': 0.9499553890078516, 'macro_recall_score': 0.9488980274870042, 'macro_f1_score': 0.949419317582308, 'micro_precision_score': 0.9517601043024772, 'micro_recall_score': 0.9517601043024772, 'micro_f1_score': 0.9517601043024772}
('0', Pipeline(steps=[('0',
                 SMOTE(k_neighbors=2, random_state=76083,
                       sampling_strategy='minority')),
                ('1', MaxAbsScaler()),
                ('2',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        criterion='entropy',
                                        max_features='log2', min_samples_leaf=2,
                                        min_samples_split=18, n_estimators=50,
                                        random_state=76083))]))
('1', Pipeline(steps=[('0', VarianceThreshold()),
                ('1', SimpleImputer(strategy='median')),
                ('2',
                 SMOTE(k_neighbors=2, random_state=76083,
                       sampling_strategy='minority')),
                ('3',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        criterion='entropy',
                                        max_features='log2', min_samples_leaf=2,
                                        min_samples_split=18, n_estimators=50,
                                        random_state=76083))]))
('2', Pipeline(steps=[('0', MinMaxScaler()),
                ('1', KNNImputer(n_neighbors=4, weights='distance')),
                ('2', StandardScaler(with_mean=False, with_std=False)),
                ('3',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2', min_samples_leaf=4,
                                        n_estimators=77, random_state=76083))]))
('3', Pipeline(steps=[('0',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        criterion='entropy',
                                        max_features='sqrt', min_samples_leaf=3,
                                        min_samples_split=4, n_estimators=70,
                                        random_state=76083))]))
('4', Pipeline(steps=[('0',
                 SMOTE(k_neighbors=2, random_state=76083,
                       sampling_strategy='minority')),
                ('1',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        criterion='entropy',
                                        max_features='log2', min_samples_leaf=2,
                                        min_samples_split=18, n_estimators=50,
                                        random_state=76083))]))
('5', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        criterion='entropy',
                                        max_features='sqrt', min_samples_leaf=3,
                                        min_samples_split=4, n_estimators=70,
                                        random_state=76083))]))
('6', Pipeline(steps=[('0',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        criterion='entropy',
                                        max_features='log2', min_samples_leaf=2,
                                        min_samples_split=18, n_estimators=50,
                                        random_state=76083))]))
('7', Pipeline(steps=[('0',
                 RandomUnderSampler(random_state=76083, replacement=True,
                                    sampling_strategy='not minority')),
                ('1',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        criterion='entropy',
                                        max_features='log2', min_samples_leaf=2,
                                        min_samples_split=18, n_estimators=50,
                                        random_state=76083))]))
('8', Pipeline(steps=[('0', VarianceThreshold()),
                ('1', SimpleImputer(strategy='most_frequent')),
                ('2',
                 SMOTE(k_neighbors=2, random_state=76083,
                       sampling_strategy='minority')),
                ('3',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        criterion='entropy',
                                        max_features='log2', min_samples_leaf=2,
                                        min_samples_split=18, n_estimators=50,
                                        random_state=76083))]))
('9', Pipeline(steps=[('0', VarianceThreshold()),
                ('1',
                 SMOTE(k_neighbors=2, random_state=76083,
                       sampling_strategy='minority')),
                ('2', SelectPercentile(percentile=86.2697220152946)),
                ('3',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        criterion='entropy',
                                        max_features='log2', min_samples_leaf=2,
                                        min_samples_split=18, n_estimators=50,
                                        random_state=76083))]))

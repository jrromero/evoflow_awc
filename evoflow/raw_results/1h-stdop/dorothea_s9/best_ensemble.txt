
{'accuracy_score': 0.9420289855072463, 'balanced_accuracy_score': 0.7242063492063492, 'macro_precision_score': 0.7462867290926702, 'macro_recall_score': 0.7242063492063492, 'macro_f1_score': 0.7346153846153846, 'micro_precision_score': 0.9420289855072463, 'micro_recall_score': 0.9420289855072463, 'micro_f1_score': 0.9420289855072463}
('0', Pipeline(steps=[('0', SelectFwe(alpha=0.003341858172629575)),
                ('1', SimpleImputer(strategy='median')),
                ('2', GaussianNB(var_smoothing=0.00011376714194016197))]))
('1', Pipeline(steps=[('0', PCA(n_components=0.590638361874953, random_state=9)),
                ('1', VarianceThreshold()),
                ('2',
                 PassiveAggressiveClassifier(C=0.0007699264300368712,
                                             fit_intercept=False,
                                             loss='squared_hinge',
                                             random_state=9))]))
('2', Pipeline(steps=[('0', SelectFwe(alpha=0.008394155504755111)),
                ('1',
                 RBFSampler(gamma=0.06926954384159359, n_components=56,
                            random_state=9)),
                ('2', SelectPercentile(percentile=30.802760647494118)),
                ('3',
                 SGDClassifier(alpha=1.6490682353412218e-06,
                               class_weight='balanced',
                               epsilon=0.0004249693915670733,
                               eta0=1.3888336623059765e-06,
                               l1_ratio=0.0004992838377330081, loss='log',
                               power_t=0.39887494971897897, random_state=9,
                               tol=2.3838216064989323e-05))]))
('3', Pipeline(steps=[('0', MinMaxScaler()),
                ('1',
                 ExtraTreesClassifier(class_weight='balanced',
                                      criterion='entropy', max_features='sqrt',
                                      min_samples_leaf=11, min_samples_split=19,
                                      n_estimators=86, random_state=9))]))
('4', Pipeline(steps=[('0', VarianceThreshold()),
                ('1',
                 FastICA(algorithm='deflation', n_components=63,
                         random_state=9)),
                ('2',
                 ExtraTreesClassifier(bootstrap=True,
                                      class_weight='balanced_subsample',
                                      criterion='entropy', max_features='sqrt',
                                      min_samples_leaf=18, min_samples_split=20,
                                      n_estimators=79, random_state=9))]))
('5', Pipeline(steps=[('0', MaxAbsScaler()), ('1', VarianceThreshold()),
                ('2',
                 SGDClassifier(alpha=8.795681426253634e-06, average=True,
                               epsilon=0.004615024074761087,
                               eta0=9.554191270068582e-07,
                               l1_ratio=1.4911557139690114e-05,
                               loss='squared_hinge', power_t=0.5296658522166785,
                               random_state=9, tol=0.0010266515528489933))]))
('6', Pipeline(steps=[('0', VarianceThreshold()),
                ('1',
                 SMOTE(k_neighbors=3, random_state=9,
                       sampling_strategy='not minority')),
                ('2', RobustScaler()),
                ('3',
                 AdaBoostClassifier(algorithm='SAMME',
                                    learning_rate=0.6104041287563441,
                                    n_estimators=34, random_state=9))]))
('7', Pipeline(steps=[('0', MaxAbsScaler()), ('1', VarianceThreshold()),
                ('2',
                 DecisionTreeClassifier(class_weight='balanced',
                                        max_depth=1.7906068988471684,
                                        max_features=0.33021669841000845,
                                        min_samples_leaf=3, min_samples_split=8,
                                        random_state=9))]))
('8', Pipeline(steps=[('0',
                 LogisticRegression(C=0.0010370651375306724,
                                    class_weight='balanced', random_state=9))]))
('9', Pipeline(steps=[('0',
                 SMOTE(k_neighbors=2, random_state=9,
                       sampling_strategy='not majority')),
                ('1',
                 MLPClassifier(activation='tanh', alpha=0.001320234367932181,
                               learning_rate_init=0.2638997126733204,
                               random_state=9, solver='lbfgs'))]))

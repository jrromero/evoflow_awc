
{'accuracy_score': 0.8170212765957446, 'balanced_accuracy_score': 0.6535172585980901, 'macro_precision_score': 0.5765698452725632, 'macro_recall_score': 0.6535172585980901, 'macro_f1_score': 0.5892276422764229, 'micro_precision_score': 0.8170212765957446, 'micro_recall_score': 0.8170212765957446, 'micro_f1_score': 0.8170212765957445}
('0', Pipeline(steps=[('0',
                 RandomOverSampler(random_state=38727,
                                   sampling_strategy='not majority')),
                ('1', KNNImputer(n_neighbors=8)), ('2', MinMaxScaler()),
                ('3',
                 AdaBoostClassifier(learning_rate=0.13672559965861553,
                                    n_estimators=27, random_state=38727))]))
('1', Pipeline(steps=[('0',
                 RandomOverSampler(random_state=38727,
                                   sampling_strategy='not majority')),
                ('1', KNNImputer(n_neighbors=8)), ('2', MinMaxScaler()),
                ('3', BernoulliNB(alpha=21.804936881166412, fit_prior=False))]))
('2', Pipeline(steps=[('0',
                 RandomOverSampler(random_state=38727,
                                   sampling_strategy='not majority')),
                ('1', KNNImputer(weights='distance')), ('2', MinMaxScaler()),
                ('3', BernoulliNB(alpha=21.804936881166412, fit_prior=False))]))
('3', Pipeline(steps=[('0',
                 RandomOverSampler(random_state=38727,
                                   sampling_strategy='not minority')),
                ('1', KNNImputer(n_neighbors=6, weights='distance')),
                ('2',
                 DecisionTreeClassifier(class_weight='balanced',
                                        criterion='entropy',
                                        max_depth=1.8680410301071249,
                                        max_features=0.5947717210461807,
                                        min_samples_leaf=6, min_samples_split=3,
                                        random_state=38727))]))
('4', Pipeline(steps=[('0', SimpleImputer(strategy='median')),
                ('1',
                 SMOTE(k_neighbors=2, random_state=38727,
                       sampling_strategy='not majority')),
                ('2', Normalizer()),
                ('3',
                 DecisionTreeClassifier(max_depth=1.8631326091006168,
                                        max_features=0.9657737950039332,
                                        min_samples_leaf=17,
                                        min_samples_split=4,
                                        random_state=38727))]))
('5', Pipeline(steps=[('0', SimpleImputer(strategy='median')),
                ('1',
                 SMOTE(random_state=38727, sampling_strategy='not majority')),
                ('2', MinMaxScaler()),
                ('3', KNeighborsClassifier(n_neighbors=3))]))
('6', Pipeline(steps=[('0', SimpleImputer()),
                ('1',
                 SMOTE(k_neighbors=2, random_state=38727,
                       sampling_strategy='not majority')),
                ('2',
                 SMOTETomek(random_state=38727, sampling_strategy='minority')),
                ('3',
                 DecisionTreeClassifier(max_depth=1.8631326091006168,
                                        max_features=0.9657737950039332,
                                        min_samples_leaf=17,
                                        min_samples_split=4,
                                        random_state=38727))]))
('7', Pipeline(steps=[('0', SimpleImputer(strategy='median')), ('1', MinMaxScaler()),
                ('2',
                 SMOTETomek(random_state=38727, sampling_strategy='minority')),
                ('3',
                 DecisionTreeClassifier(max_depth=1.8631326091006168,
                                        max_features=0.9657737950039332,
                                        min_samples_leaf=17,
                                        min_samples_split=4,
                                        random_state=38727))]))
('8', Pipeline(steps=[('0', SimpleImputer(strategy='median')),
                ('1',
                 SMOTE(k_neighbors=2, random_state=38727,
                       sampling_strategy='not majority')),
                ('2', Normalizer()),
                ('3',
                 AdaBoostClassifier(learning_rate=0.055861202925639016,
                                    n_estimators=70, random_state=38727))]))
('9', Pipeline(steps=[('0',
                 RandomOverSampler(random_state=38727,
                                   sampling_strategy='not minority')),
                ('1', KNNImputer(n_neighbors=8)),
                ('2',
                 DecisionTreeClassifier(class_weight='balanced',
                                        criterion='entropy',
                                        max_depth=1.8680410301071249,
                                        max_features=0.5947717210461807,
                                        min_samples_leaf=6, min_samples_split=3,
                                        random_state=38727))]))

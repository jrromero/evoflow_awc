['0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '2', '2', '2', '2', '2', '2', '2', '3', '1', '3', '3', '1', '4', '4', '4', '4', '4', '5', '7', '5', '5', '5', '5', '6', '6', '6', '6', '6', '6', '7', '7', '7', '7', '7', '8', '8', '8', '8', '8', '9', '4', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '2', '2', '2', '2', '3', '3', '7', '3', '3', '3', '3', '3', '6', '1', '4', '4', '4', '4', '4', '4', '5', '5', '5', '5', '6', '6', '6', '6', '1', '7', '7', '7', '7', '7', '7', '7', '8', '8', '8', '8', '9', '9', '9', '4', '0', '0', '5', '0', '2', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '7', '1', '2', '9', '3', '3', '3', '3', '4', '4', '4', '4', '4', '1', '4', '4', '4', '4', '5', '5', '5', '5', '5', '5', '6', '6', '6', '6', '6', '6', '6', '7', '7', '7', '7', '7', '8', '8', '8', '8', '8', '7', '8', '0', '9', '9', '9', '9', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '2', '2', '2', '2', '2', '2', '2', '2', '2', '5', '3', '3', '3', '3', '3', '5', '4', '4', '1', '4', '4', '1', '4', '4', '4', '4', '3', '5', '6', '6', '6', '6', '6', '6', '6', '6', '4', '7', '7', '7', '7', '7', '7', '7', '8', '8', '8', '8', '8', '9', '9', '0', '9', '9', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '2', '2', '2', '2', '2', '2', '2', '2', '2', '2', '2', '2', '3', '3', '2', '3', '3', '3', '3', '3', '4', '4', '4', '4', '4', '4', '4', '4', '4', '5', '5', '5', '5', '5', '5', '5', '5', '5', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '8', '8', '8', '8', '8', '8', '8', '8', '8', '0', '8', '8', '8', '9', '9', '9', '2', '9', '9', '9', '9', '9', '8', '0', '0', '0', '0', '0', '0', '0', '5', '0', '0', '0', '1', '1', '1', '1', '1', '2', '1', '1', '1', '1', '1', '1', '1', '2', '2', '4', '2', '4', '2', '2', '2', '3', '3', '3', '3', '3', '3', '3', '3', '3', '3', '4', '4', '1', '4', '4', '4', '4', '4', '4', '5', '5', '5', '5', '5', '9', '5', '5', '5', '5', '5', '5', '5', '5', '6', '6', '6', '6', '6', '6', '0', '6', '6', '6', '6', '6', '6', '7', '7', '7', '7', '1', '7', '7', '7', '7', '7', '7', '7', '7', '8', '8', '8', '8', '8', '8', '8', '9', '8', '8', '3', '8', '8', '9', '9', '9', '9', '9', '9', '9', '9', '9', '3', '9']
{'accuracy_score': 0.9182389937106918, 'balanced_accuracy_score': 0.9144137754942137, 'macro_precision_score': 0.9190099345292138, 'macro_recall_score': 0.9144137754942137, 'macro_f1_score': 0.9159737778685646, 'micro_precision_score': 0.9182389937106918, 'micro_recall_score': 0.9182389937106918, 'micro_f1_score': 0.9182389937106918}
('0', Pipeline(steps=[('0', MinMaxScaler()),
                ('1', SelectFwe(alpha=0.009660352942999117)),
                ('2',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        criterion='entropy',
                                        max_features='sqrt',
                                        min_samples_split=9, n_estimators=56,
                                        random_state=2))]))
('1', Pipeline(steps=[('0', StandardScaler(with_std=False)),
                ('1',
                 MLPClassifier(activation='logistic',
                               alpha=0.030932015254291335,
                               learning_rate_init=0.002714403208962006,
                               random_state=2))]))
('2', Pipeline(steps=[('0', StandardScaler(with_mean=False, with_std=False)),
                ('1', PCA(n_components=0.7209544695480589, random_state=2)),
                ('2',
                 QuadraticDiscriminantAnalysis(reg_param=0.6363987741855647))]))
('3', Pipeline(steps=[('0', RobustScaler(with_scaling=False)),
                ('1', SelectFwe(alpha=0.015664342866296633)),
                ('2',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        criterion='entropy',
                                        max_features='sqrt',
                                        min_samples_split=9, n_estimators=56,
                                        random_state=2))]))
('4', Pipeline(steps=[('0', MinMaxScaler()),
                ('1', SelectFwe(alpha=0.004275137170101325)),
                ('2',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        criterion='entropy',
                                        max_features='sqrt',
                                        min_samples_split=9, n_estimators=56,
                                        random_state=2))]))
('5', Pipeline(steps=[('0', MinMaxScaler()), ('1', RobustScaler(with_scaling=False)),
                ('2', SelectFwe(alpha=0.009660352942999117)),
                ('3',
                 MLPClassifier(activation='tanh', alpha=0.000658034909896617,
                               learning_rate_init=0.05178606780361082,
                               random_state=2))]))
('6', Pipeline(steps=[('0', MinMaxScaler()),
                ('1', SelectFwe(alpha=0.009660352942999117)),
                ('2',
                 MLPClassifier(alpha=0.027651066406744133,
                               learning_rate_init=0.014700726251278379,
                               random_state=2))]))
('7', Pipeline(steps=[('0',
                 MLPClassifier(activation='logistic', alpha=0.03089360884322128,
                               learning_rate_init=0.8703253937464329,
                               random_state=2, solver='sgd'))]))
('8', Pipeline(steps=[('0', MinMaxScaler()),
                ('1', SelectFwe(alpha=0.009660352942999117)),
                ('2',
                 MLPClassifier(activation='logistic',
                               alpha=0.030932015254291335,
                               learning_rate_init=0.002714403208962006,
                               random_state=2))]))
('9', Pipeline(steps=[('0', StandardScaler(with_std=False)),
                ('1', SMOTETomek(random_state=2, sampling_strategy='minority')),
                ('2', MaxAbsScaler()),
                ('3',
                 MLPClassifier(activation='logistic', alpha=0.03089360884322128,
                               learning_rate_init=0.8703253937464329,
                               random_state=2, solver='sgd'))]))

['good', 'good', 'good', 'bad', 'bad', 'bad', 'bad', 'bad', 'good', 'bad', 'good', 'good', 'bad', 'good', 'good', 'bad', 'good', 'good', 'good', 'good', 'good', 'good', 'good', 'bad', 'good', 'good', 'good', 'good', 'good', 'good', 'good', 'good', 'good', 'good', 'good', 'bad', 'bad', 'bad', 'good', 'good', 'good', 'good', 'good', 'good', 'good', 'bad', 'good', 'good', 'good', 'good', 'bad', 'bad', 'good', 'good', 'bad', 'good', 'good', 'bad', 'bad', 'good', 'bad', 'bad', 'bad', 'bad', 'good', 'good', 'bad', 'good', 'bad', 'good', 'good', 'good', 'bad', 'good', 'good', 'bad', 'good', 'good', 'good', 'good', 'bad', 'good', 'good', 'good', 'bad', 'bad', 'bad', 'good', 'good', 'good', 'good', 'bad', 'good', 'good', 'good', 'bad', 'bad', 'bad', 'good', 'good', 'good', 'good', 'good', 'good', 'bad', 'bad', 'good', 'good', 'good', 'bad', 'bad', 'good', 'bad', 'good', 'bad', 'bad', 'bad', 'good', 'good', 'bad', 'bad', 'good', 'good', 'good', 'good', 'good', 'good', 'good', 'good', 'good', 'good', 'good', 'good', 'good', 'good', 'bad', 'bad', 'bad', 'good', 'bad', 'good', 'good', 'bad', 'good', 'good', 'good', 'bad', 'good', 'bad', 'good', 'good', 'bad', 'good', 'bad', 'good', 'good', 'good', 'good', 'good', 'bad', 'bad', 'bad', 'good', 'bad', 'bad', 'good', 'bad', 'good', 'good', 'good', 'good', 'good', 'bad', 'good', 'bad', 'good', 'bad', 'good', 'good', 'good', 'bad', 'good', 'bad', 'bad', 'good', 'good', 'good', 'bad', 'good', 'bad', 'bad', 'good', 'good', 'good', 'good', 'bad', 'bad', 'good', 'good', 'good', 'good', 'good', 'bad', 'good', 'good', 'good', 'good', 'good', 'good', 'bad', 'good', 'good', 'good', 'good', 'good', 'bad', 'bad', 'good', 'bad', 'good', 'bad', 'good', 'bad', 'good', 'good', 'good', 'good', 'bad', 'good', 'bad', 'good', 'good', 'good', 'good', 'good', 'bad', 'good', 'bad', 'good', 'bad', 'good', 'bad', 'good', 'good', 'good', 'good', 'good', 'good', 'bad', 'good', 'good', 'good', 'good', 'bad', 'good', 'good', 'bad', 'good', 'good', 'good', 'good', 'bad', 'good', 'good', 'good', 'bad', 'good', 'bad', 'bad', 'good', 'good', 'good', 'good', 'good', 'good', 'bad', 'bad', 'bad', 'bad', 'good', 'bad', 'bad', 'good', 'good', 'good', 'bad', 'bad', 'good', 'good', 'good', 'bad', 'good', 'bad', 'good', 'good', 'bad', 'good', 'bad', 'good', 'good']
{'accuracy_score': 0.7066666666666667, 'balanced_accuracy_score': 0.6718528995756718, 'macro_precision_score': 0.6684491978609626, 'macro_recall_score': 0.6718528995756718, 'macro_f1_score': 0.6699999999999999, 'micro_precision_score': 0.7066666666666667, 'micro_recall_score': 0.7066666666666667, 'micro_f1_score': 0.7066666666666667}
('0', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1',
                 SMOTE(k_neighbors=3, random_state=8,
                       sampling_strategy='not majority')),
                ('2', SelectPercentile(percentile=57.690645040075296)),
                ('3', BernoulliNB(alpha=0.04684368992548058))]))
('1', Pipeline(steps=[('0', RobustScaler(with_scaling=False)),
                ('1',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced_subsample',
                                        max_features='sqrt',
                                        min_samples_split=7, n_estimators=83,
                                        random_state=8))]))
('2', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1',
                 SMOTE(k_neighbors=3, random_state=8,
                       sampling_strategy='not majority')),
                ('2', SelectPercentile(percentile=57.690645040075296)),
                ('3', BernoulliNB(alpha=0.33743492243260675))]))
('3', Pipeline(steps=[('0', MinMaxScaler()), ('1', MaxAbsScaler()),
                ('2',
                 MultinomialNB(alpha=0.07229277175152811, fit_prior=False))]))
('4', Pipeline(steps=[('0', SimpleImputer()),
                ('1',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced_subsample',
                                        max_features='sqrt',
                                        min_samples_split=7, n_estimators=83,
                                        random_state=8))]))
('5', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1',
                 SMOTE(k_neighbors=3, random_state=8,
                       sampling_strategy='not majority')),
                ('2', SelectPercentile(percentile=57.690645040075296)),
                ('3', BernoulliNB(alpha=0.8937256196567978))]))
('6', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1',
                 RandomForestClassifier(class_weight='balanced_subsample',
                                        max_features='sqrt', min_samples_leaf=7,
                                        min_samples_split=4, n_estimators=10,
                                        random_state=8))]))
('7', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1',
                 SMOTE(k_neighbors=3, random_state=8,
                       sampling_strategy='not majority')),
                ('2', SelectPercentile(percentile=57.690645040075296)),
                ('3', BernoulliNB(alpha=0.8406244784561411, fit_prior=False))]))
('8', Pipeline(steps=[('0', MinMaxScaler()),
                ('1',
                 SMOTE(k_neighbors=3, random_state=8,
                       sampling_strategy='not majority')),
                ('2', KNNImputer(n_neighbors=10)),
                ('3', BernoulliNB(alpha=0.33743492243260675))]))
('9', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1',
                 SMOTETomek(random_state=8, sampling_strategy='not majority')),
                ('2', VarianceThreshold()),
                ('3',
                 QuadraticDiscriminantAnalysis(reg_param=0.05986222129568053))]))

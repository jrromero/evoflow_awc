
{'accuracy_score': 0.8021276595744681, 'balanced_accuracy_score': 0.6330753386180639, 'macro_precision_score': 0.5634221799143265, 'macro_recall_score': 0.6330753386180639, 'macro_f1_score': 0.5709447852760736, 'micro_precision_score': 0.8021276595744681, 'micro_recall_score': 0.8021276595744681, 'micro_f1_score': 0.8021276595744681}
('0', Pipeline(steps=[('0', SimpleImputer(strategy='most_frequent')),
                ('1',
                 DecisionTreeClassifier(class_weight='balanced',
                                        max_depth=1.7157847304571585,
                                        max_features=0.43728866882404116,
                                        min_samples_leaf=16,
                                        min_samples_split=17,
                                        random_state=67949))]))
('1', Pipeline(steps=[('0', KNNImputer(n_neighbors=9, weights='distance')),
                ('1',
                 SMOTETomek(random_state=67949, sampling_strategy='minority')),
                ('2', VarianceThreshold()),
                ('3',
                 AdaBoostClassifier(algorithm='SAMME',
                                    learning_rate=0.09888400647958914,
                                    n_estimators=96, random_state=67949))]))
('2', Pipeline(steps=[('0',
                 RandomUnderSampler(random_state=67949, replacement=True,
                                    sampling_strategy='not minority')),
                ('1', SimpleImputer(strategy='most_frequent')),
                ('2',
                 DecisionTreeClassifier(criterion='entropy',
                                        max_depth=1.9130865732692892,
                                        max_features=0.9583114318506218,
                                        min_samples_leaf=11,
                                        min_samples_split=19,
                                        random_state=67949))]))
('3', Pipeline(steps=[('0', SimpleImputer(strategy='median')),
                ('1',
                 DecisionTreeClassifier(class_weight='balanced',
                                        criterion='entropy',
                                        max_depth=1.14341970221011,
                                        max_features=0.3967925729334367,
                                        min_samples_leaf=20,
                                        min_samples_split=14,
                                        random_state=67949))]))
('4', Pipeline(steps=[('0', KNNImputer(n_neighbors=9, weights='distance')),
                ('1',
                 SMOTETomek(random_state=67949, sampling_strategy='minority')),
                ('2', VarianceThreshold()),
                ('3',
                 AdaBoostClassifier(algorithm='SAMME',
                                    learning_rate=0.021721906084303817,
                                    n_estimators=68, random_state=67949))]))
('5', Pipeline(steps=[('0', KNNImputer(n_neighbors=10, weights='distance')),
                ('1',
                 DecisionTreeClassifier(class_weight='balanced',
                                        criterion='entropy',
                                        max_depth=1.14341970221011,
                                        max_features=0.3967925729334367,
                                        min_samples_leaf=20,
                                        min_samples_split=14,
                                        random_state=67949))]))
('6', Pipeline(steps=[('0', SimpleImputer(strategy='most_frequent')),
                ('1',
                 SMOTETomek(random_state=67949, sampling_strategy='minority')),
                ('2', MinMaxScaler()),
                ('3', MultinomialNB(alpha=5.472468661143417))]))
('7', Pipeline(steps=[('0', KNNImputer(weights='distance')), ('1', MinMaxScaler()),
                ('2', MaxAbsScaler()),
                ('3', GaussianNB(var_smoothing=0.001180876188642079))]))
('8', Pipeline(steps=[('0', KNNImputer(n_neighbors=9, weights='distance')),
                ('1', GaussianNB(var_smoothing=8.452302195762551e-05))]))
('9', Pipeline(steps=[('0', SimpleImputer(strategy='most_frequent')),
                ('1',
                 DecisionTreeClassifier(class_weight='balanced',
                                        criterion='entropy',
                                        max_depth=1.14341970221011,
                                        max_features=0.3967925729334367,
                                        min_samples_leaf=20,
                                        min_samples_split=14,
                                        random_state=67949))]))

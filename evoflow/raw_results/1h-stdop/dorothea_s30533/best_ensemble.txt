
{'accuracy_score': 0.9478260869565217, 'balanced_accuracy_score': 0.7272927689594356, 'macro_precision_score': 0.7773493543758967, 'macro_recall_score': 0.7272927689594356, 'macro_f1_score': 0.7493542137552469, 'micro_precision_score': 0.9478260869565217, 'micro_recall_score': 0.9478260869565217, 'micro_f1_score': 0.9478260869565217}
('0', Pipeline(steps=[('0',
                 SGDClassifier(alpha=0.00024410065956812272, average=True,
                               class_weight='balanced',
                               epsilon=0.0009661038878084646,
                               eta0=6.904190314135885e-06,
                               l1_ratio=6.761049950172805e-08, loss='log',
                               power_t=0.5890141501371712, random_state=30533,
                               tol=6.107040082109039e-05))]))
('1', Pipeline(steps=[('0', SimpleImputer(strategy='median')),
                ('1', SelectPercentile(percentile=21.19429576363804)),
                ('2',
                 ExtraTreesClassifier(class_weight='balanced',
                                      max_features='sqrt', min_samples_leaf=4,
                                      min_samples_split=15, n_estimators=83,
                                      random_state=30533))]))
('2', Pipeline(steps=[('0', MinMaxScaler()),
                ('1',
                 PCA(n_components=0.8943159757264039, random_state=30533,
                     whiten=True)),
                ('2', SelectFwe(alpha=0.014978773066545272)),
                ('3', BernoulliNB(alpha=88.95340382906447))]))
('3', Pipeline(steps=[('0', KNNImputer(n_neighbors=4)), ('1', Normalizer()),
                ('2',
                 RandomUnderSampler(random_state=30533,
                                    sampling_strategy='not minority')),
                ('3',
                 AdaBoostClassifier(algorithm='SAMME',
                                    learning_rate=0.10001890213453367,
                                    random_state=30533))]))
('4', Pipeline(steps=[('0',
                 SGDClassifier(alpha=8.246320216928417e-07,
                               epsilon=0.0012178692276216705,
                               eta0=0.07845090919486812,
                               l1_ratio=0.029958319060771135, loss='log',
                               power_t=0.9559806780385796, random_state=30533,
                               tol=0.0014509372781940338))]))
('5', Pipeline(steps=[('0', SelectFwe(alpha=0.0032077729478993972)),
                ('1', VarianceThreshold()),
                ('2',
                 RandomForestClassifier(class_weight='balanced',
                                        criterion='entropy',
                                        max_features='sqrt',
                                        min_samples_leaf=11,
                                        min_samples_split=6, n_estimators=60,
                                        random_state=30533))]))
('6', Pipeline(steps=[('0', Normalizer()),
                ('1', KNeighborsClassifier(n_neighbors=24))]))
('7', Pipeline(steps=[('0',
                 ExtraTreesClassifier(class_weight='balanced_subsample',
                                      max_features='sqrt', min_samples_leaf=8,
                                      min_samples_split=20, n_estimators=32,
                                      random_state=30533))]))
('8', Pipeline(steps=[('0', MinMaxScaler()),
                ('1', SelectFwe(alpha=0.0012175115282719682)),
                ('2', SelectPercentile(percentile=25.989399825608807)),
                ('3',
                 MLPClassifier(activation='logistic',
                               alpha=0.0021320378895691053,
                               learning_rate_init=0.017949447158940295,
                               random_state=30533, solver='sgd'))]))
('9', Pipeline(steps=[('0', VarianceThreshold()), ('1', MaxAbsScaler()),
                ('2',
                 ExtraTreesClassifier(bootstrap=True,
                                      class_weight='balanced_subsample',
                                      max_features='sqrt', min_samples_leaf=3,
                                      min_samples_split=20, n_estimators=53,
                                      random_state=30533))]))

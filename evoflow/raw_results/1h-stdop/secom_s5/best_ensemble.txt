
{'accuracy_score': 0.8085106382978723, 'balanced_accuracy_score': 0.6365395418513202, 'macro_precision_score': 0.5668449197860963, 'macro_recall_score': 0.6365395418513202, 'macro_f1_score': 0.5761353160447312, 'micro_precision_score': 0.8085106382978723, 'micro_recall_score': 0.8085106382978723, 'micro_f1_score': 0.8085106382978723}
('0', Pipeline(steps=[('0', SimpleImputer(strategy='most_frequent')),
                ('1',
                 DecisionTreeClassifier(class_weight='balanced',
                                        criterion='entropy',
                                        max_depth=1.1847048623745513,
                                        max_features=0.5053379370590854,
                                        min_samples_leaf=19,
                                        min_samples_split=8, random_state=5))]))
('1', Pipeline(steps=[('0', VarianceThreshold()), ('1', KNNImputer(n_neighbors=2)),
                ('2',
                 DecisionTreeClassifier(class_weight='balanced',
                                        criterion='entropy',
                                        max_depth=1.1847048623745513,
                                        max_features=0.5053379370590854,
                                        min_samples_leaf=19,
                                        min_samples_split=8, random_state=5))]))
('2', Pipeline(steps=[('0', KNNImputer()),
                ('1',
                 ExtraTreesClassifier(max_features='log2', min_samples_leaf=13,
                                      min_samples_split=5, n_estimators=74,
                                      random_state=5))]))
('3', Pipeline(steps=[('0', SimpleImputer(strategy='median')), ('1', MinMaxScaler()),
                ('2', VarianceThreshold()),
                ('3',
                 SGDClassifier(alpha=6.866068082570229e-05, average=True,
                               class_weight='balanced',
                               epsilon=0.05706571230237939,
                               eta0=4.561731347206484e-05,
                               l1_ratio=1.1795983294673357e-05,
                               loss='squared_hinge', power_t=0.6217132556072051,
                               random_state=5, tol=0.017248347603780738))]))
('4', Pipeline(steps=[('0', SimpleImputer(strategy='median')),
                ('1',
                 DecisionTreeClassifier(class_weight='balanced',
                                        criterion='entropy',
                                        max_depth=1.1847048623745513,
                                        max_features=0.5053379370590854,
                                        min_samples_leaf=19,
                                        min_samples_split=8, random_state=5))]))
('5', Pipeline(steps=[('0', KNNImputer(n_neighbors=2)),
                ('1',
                 SMOTETomek(random_state=5, sampling_strategy='not majority')),
                ('2',
                 AdaBoostClassifier(algorithm='SAMME',
                                    learning_rate=0.3577189853008858,
                                    n_estimators=18, random_state=5))]))
('6', Pipeline(steps=[('0', SimpleImputer(strategy='most_frequent')),
                ('1',
                 SMOTETomek(random_state=5, sampling_strategy='not majority')),
                ('2',
                 AdaBoostClassifier(algorithm='SAMME',
                                    learning_rate=0.3577189853008858,
                                    n_estimators=18, random_state=5))]))
('7', Pipeline(steps=[('0', SimpleImputer(strategy='most_frequent')),
                ('1',
                 SMOTETomek(random_state=5, sampling_strategy='not majority')),
                ('2',
                 DecisionTreeClassifier(class_weight='balanced',
                                        criterion='entropy',
                                        max_depth=1.1847048623745513,
                                        max_features=0.5053379370590854,
                                        min_samples_leaf=19,
                                        min_samples_split=8, random_state=5))]))
('8', Pipeline(steps=[('0',
                 RandomUnderSampler(random_state=5,
                                    sampling_strategy='not minority')),
                ('1', MaxAbsScaler()), ('2', KNNImputer(n_neighbors=2)),
                ('3', GaussianNB(var_smoothing=0.0020860492601230407))]))
('9', Pipeline(steps=[('0', SimpleImputer(strategy='most_frequent')),
                ('1', MaxAbsScaler()), ('2', KNNImputer(n_neighbors=2)),
                ('3', GaussianNB(var_smoothing=0.0020860492601230407))]))

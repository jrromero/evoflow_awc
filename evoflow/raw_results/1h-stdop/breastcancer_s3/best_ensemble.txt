['1', '1', '2', '2', '1', '2', '1', '1', '1', '2', '1', '1', '1', '1', '1', '2', '1', '1', '1', '1', '1', '2', '2', '1', '2', '1', '1', '1', '1', '1', '2', '1', '1', '2', '1', '1', '2', '1', '1', '2', '1', '1', '2', '1', '2', '1', '2', '2', '1', '2', '2', '1', '1', '2', '2', '1', '1', '2', '1', '1', '1', '2', '1', '1', '1', '1', '1', '1', '1', '1', '1', '2', '1', '1', '1', '2', '1', '1', '1', '1', '2', '1', '1', '1', '1', '1', '1', '1', '2', '2', '1', '2', '1', '1', '1', '2', '1', '1', '1', '2', '1', '1', '1', '2', '1', '1', '2', '1', '2', '1', '1', '1', '2', '2', '1', '1', '1', '1', '2', '2', '2', '1', '1', '1', '1', '1', '2', '2', '2', '1', '1', '2', '1', '1', '2', '1', '2', '2', '2', '1', '1', '1', '1', '2', '1', '1', '1', '1', '2', '1', '1', '1', '2', '1', '1', '1', '1', '2', '1', '1', '2', '1', '2', '2', '1', '1', '2', '2', '1', '2', '1', '2', '1', '1', '2', '1', '2', '2', '1', '1', '2', '1', '1', '2', '1', '1', '2', '2', '1', '2', '1', '1', '1', '2', '2', '1', '1', '1', '1', '1', '2', '1', '1', '2', '2', '1', '1', '2', '1', '1', '1', '1', '2', '1', '2', '2', '1', '2', '1', '1', '2', '1', '1', '1', '1', '1', '1', '2', '2', '2', '1', '1', '2']
{'accuracy_score': 0.9914163090128756, 'balanced_accuracy_score': 0.9904820261437909, 'macro_precision_score': 0.9904820261437909, 'macro_recall_score': 0.9904820261437909, 'macro_f1_score': 0.9904820261437909, 'micro_precision_score': 0.9914163090128756, 'micro_recall_score': 0.9914163090128756, 'micro_f1_score': 0.9914163090128756}
('0', Pipeline(steps=[('0', SMOTE(random_state=3, sampling_strategy='not majority')),
                ('1',
                 ExtraTreesClassifier(bootstrap=True, class_weight='balanced',
                                      criterion='entropy', max_features='log2',
                                      min_samples_leaf=8, min_samples_split=7,
                                      n_estimators=91, random_state=3))]))
('1', Pipeline(steps=[('0', SelectFwe(alpha=0.0013207391119322604)),
                ('1', SMOTE(random_state=3, sampling_strategy='not majority')),
                ('2', VarianceThreshold()),
                ('3',
                 ExtraTreesClassifier(bootstrap=True, class_weight='balanced',
                                      criterion='entropy', max_features='log2',
                                      min_samples_leaf=8, min_samples_split=7,
                                      n_estimators=91, random_state=3))]))
('2', Pipeline(steps=[('0', SMOTE(random_state=3, sampling_strategy='minority')),
                ('1',
                 ExtraTreesClassifier(bootstrap=True, class_weight='balanced',
                                      criterion='entropy', max_features='log2',
                                      min_samples_leaf=8, min_samples_split=7,
                                      n_estimators=91, random_state=3))]))
('3', Pipeline(steps=[('0', SMOTE(random_state=3, sampling_strategy='not majority')),
                ('1',
                 RandomOverSampler(random_state=3,
                                   sampling_strategy='not minority')),
                ('2',
                 ExtraTreesClassifier(bootstrap=True, class_weight='balanced',
                                      criterion='entropy', max_features='log2',
                                      min_samples_leaf=8, min_samples_split=7,
                                      n_estimators=91, random_state=3))]))
('4', Pipeline(steps=[('0', SMOTE(random_state=3, sampling_strategy='not majority')),
                ('1',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='sqrt', min_samples_leaf=8,
                                      min_samples_split=18, n_estimators=81,
                                      random_state=3))]))
('5', Pipeline(steps=[('0', SMOTE(random_state=3, sampling_strategy='not majority')),
                ('1',
                 ExtraTreesClassifier(bootstrap=True,
                                      class_weight='balanced_subsample',
                                      criterion='entropy', max_features='log2',
                                      min_samples_leaf=5, min_samples_split=10,
                                      n_estimators=61, random_state=3))]))
('6', Pipeline(steps=[('0', MinMaxScaler()), ('1', StandardScaler(with_std=False)),
                ('2',
                 Nystroem(coef0=0.22036837671321363, degree=5,
                          gamma=0.09343811887457677, kernel='sigmoid',
                          n_components=20, random_state=3)),
                ('3',
                 ExtraTreesClassifier(class_weight='balanced_subsample',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=12, n_estimators=32,
                                      random_state=3))]))
('7', Pipeline(steps=[('0', SMOTE(random_state=3, sampling_strategy='not majority')),
                ('1',
                 RandomOverSampler(random_state=3,
                                   sampling_strategy='not majority')),
                ('2',
                 ExtraTreesClassifier(bootstrap=True, class_weight='balanced',
                                      criterion='entropy', max_features='log2',
                                      min_samples_leaf=8, min_samples_split=7,
                                      n_estimators=91, random_state=3))]))
('8', Pipeline(steps=[('0', SMOTE(random_state=3, sampling_strategy='not majority')),
                ('1',
                 ExtraTreesClassifier(bootstrap=True,
                                      class_weight='balanced_subsample',
                                      max_features='sqrt', min_samples_leaf=5,
                                      min_samples_split=9, n_estimators=66,
                                      random_state=3))]))
('9', Pipeline(steps=[('0', MinMaxScaler()), ('1', StandardScaler(with_std=False)),
                ('2',
                 Nystroem(coef0=0.22036837671321363, degree=5,
                          gamma=0.09343811887457677, kernel='sigmoid',
                          n_components=20, random_state=3)),
                ('3',
                 ExtraTreesClassifier(bootstrap=True, class_weight='balanced',
                                      max_features='sqrt', min_samples_leaf=11,
                                      min_samples_split=8, n_estimators=60,
                                      random_state=3))]))

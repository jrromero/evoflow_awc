['-1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '1', '-1', '1', '-1', '1', '1', '1', '-1', '-1', '-1', '1', '-1', '1', '-1', '-1', '-1', '-1', '1', '1', '-1', '1', '1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '-1', '1', '1', '-1', '1', '-1', '1', '-1', '1', '1', '1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '1', '1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '1', '1', '1', '1', '1', '1', '1', '-1', '1', '1', '-1', '1', '-1', '-1', '-1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '-1', '-1', '1', '1', '-1', '-1', '1', '-1', '1', '1', '1', '-1', '1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '1', '1', '-1', '-1', '1', '1', '-1', '1', '1', '-1', '1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '1', '-1', '1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '-1', '-1', '1', '-1', '1', '-1', '1', '1', '1', '-1', '1', '1', '1', '-1', '1', '-1', '-1', '1', '1', '-1', '1', '1', '1', '1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '1', '1', '1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '-1', '1', '-1', '-1', '1', '-1', '1', '-1', '-1', '1', '-1', '1', '1', '1', '1', '1', '1', '1', '-1', '1', '1', '1', '-1', '1', '1', '1', '-1', '1', '-1', '-1', '-1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '-1', '-1', '-1', '-1', '1', '1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '-1', '1', '-1', '1', '1', '1', '-1', '1', '-1', '1', '1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '1', '-1', '1', '1', '-1', '-1', '1', '1', '1', '1', '1', '1', '-1', '1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '-1', '1', '-1', '-1', '1', '-1', '-1', '1', '-1', '1', '-1', '-1', '-1', '1', '1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '-1', '1', '1', '-1', '-1', '1', '1', '-1', '1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '-1', '-1', '1', '1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '1', '1', '-1', '1', '1', '-1', '1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '1', '-1', '1', '-1', '-1', '-1', '1', '-1', '-1', '1', '1', '1', '-1', '1', '-1', '1', '1', '-1', '-1', '1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '1', '1', '1', '-1', '1', '1', '1', '1', '-1', '-1', '-1', '1', '-1', '1', '-1', '1', '1', '1', '-1', '-1', '-1', '1', '-1', '1', '1', '-1', '-1', '1', '-1', '1', '-1', '1', '1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '1', '-1', '1', '1', '-1', '1', '-1', '-1', '1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '1', '1', '-1', '1', '-1', '-1', '-1', '1', '-1', '-1', '1', '1', '1', '1', '1', '1', '1', '-1', '-1', '-1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '1', '-1', '1', '1', '1', '-1', '1', '1', '1', '1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '1', '1', '-1', '1', '1']
{'accuracy_score': 0.8692307692307693, 'balanced_accuracy_score': 0.8692799284662318, 'macro_precision_score': 0.8693576388888888, 'macro_recall_score': 0.8692799284662318, 'macro_f1_score': 0.8692273301073007, 'micro_precision_score': 0.8692307692307693, 'micro_recall_score': 0.8692307692307693, 'micro_f1_score': 0.8692307692307693}
('0', Pipeline(steps=[('0', FeatureAgglomeration(linkage='complete', n_clusters=13)),
                ('1', KNeighborsClassifier(n_neighbors=3, weights='distance'))]))
('1', Pipeline(steps=[('0', FeatureAgglomeration(linkage='complete', n_clusters=13)),
                ('1', MaxAbsScaler()),
                ('2', KNeighborsClassifier(n_neighbors=3, weights='distance'))]))
('2', Pipeline(steps=[('0', FeatureAgglomeration(linkage='complete', n_clusters=13)),
                ('1', VarianceThreshold()), ('2', MaxAbsScaler()),
                ('3', KNeighborsClassifier(n_neighbors=3, weights='distance'))]))
('3', Pipeline(steps=[('0', StandardScaler(with_mean=False, with_std=False)),
                ('1', FeatureAgglomeration(linkage='complete', n_clusters=13)),
                ('2',
                 SMOTE(k_neighbors=2, random_state=0,
                       sampling_strategy='not majority')),
                ('3', KNeighborsClassifier(n_neighbors=6, weights='distance'))]))
('4', Pipeline(steps=[('0', FeatureAgglomeration(linkage='complete', n_clusters=13)),
                ('1', VarianceThreshold()),
                ('2',
                 KNeighborsClassifier(n_neighbors=10, p=1,
                                      weights='distance'))]))
('5', Pipeline(steps=[('0', FeatureAgglomeration(linkage='complete', n_clusters=13)),
                ('1', StandardScaler(with_std=False)),
                ('2', KNeighborsClassifier(n_neighbors=3, weights='distance'))]))
('6', Pipeline(steps=[('0', FeatureAgglomeration(linkage='complete', n_clusters=13)),
                ('1', VarianceThreshold()),
                ('2',
                 KNeighborsClassifier(n_neighbors=23, p=1,
                                      weights='distance'))]))
('7', Pipeline(steps=[('0', FeatureAgglomeration(linkage='complete', n_clusters=13)),
                ('1', VarianceThreshold()),
                ('2', KNeighborsClassifier(n_neighbors=6))]))
('8', Pipeline(steps=[('0', FeatureAgglomeration(linkage='complete', n_clusters=13)),
                ('1', KNeighborsClassifier(n_neighbors=1))]))
('9', Pipeline(steps=[('0', FeatureAgglomeration(linkage='complete', n_clusters=13)),
                ('1', VarianceThreshold()),
                ('2',
                 KNeighborsClassifier(n_neighbors=31, p=1,
                                      weights='distance'))]))

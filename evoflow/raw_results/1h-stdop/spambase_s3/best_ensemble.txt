['1', '1', '1', '2', '2', '2', '2', '1', '1', '1', '1', '1', '1', '2', '1', '1', '2', '1', '1', '1', '2', '2', '1', '1', '1', '1', '1', '2', '1', '2', '1', '2', '2', '2', '2', '1', '1', '1', '2', '2', '1', '2', '1', '1', '2', '1', '1', '1', '2', '2', '1', '2', '1', '1', '2', '2', '1', '2', '1', '2', '2', '1', '1', '2', '1', '1', '2', '1', '1', '2', '2', '1', '1', '1', '2', '2', '1', '1', '2', '1', '2', '1', '2', '1', '1', '2', '2', '1', '1', '1', '2', '1', '2', '2', '2', '2', '1', '1', '2', '2', '2', '1', '1', '2', '1', '2', '1', '2', '2', '1', '2', '1', '2', '2', '2', '2', '2', '2', '2', '1', '2', '1', '2', '2', '2', '2', '1', '2', '1', '2', '1', '2', '1', '1', '1', '1', '2', '2', '1', '1', '2', '1', '1', '1', '2', '2', '1', '2', '1', '1', '1', '1', '2', '2', '1', '2', '2', '1', '2', '1', '2', '1', '1', '2', '1', '1', '2', '1', '1', '1', '1', '1', '2', '1', '2', '2', '1', '1', '2', '2', '2', '1', '1', '1', '1', '1', '2', '2', '1', '1', '2', '1', '1', '1', '1', '1', '2', '2', '2', '1', '2', '2', '2', '1', '1', '1', '1', '2', '2', '1', '2', '1', '1', '1', '1', '2', '1', '1', '2', '2', '2', '1', '1', '1', '1', '1', '1', '1', '2', '2', '1', '1', '2', '1', '2', '1', '2', '1', '2', '2', '1', '2', '1', '1', '2', '2', '2', '1', '1', '1', '2', '1', '1', '2', '2', '1', '1', '1', '1', '1', '1', '1', '2', '2', '1', '2', '2', '1', '2', '1', '1', '2', '1', '1', '1', '1', '2', '2', '1', '1', '2', '1', '1', '2', '1', '2', '2', '2', '2', '1', '1', '1', '2', '1', '1', '2', '2', '1', '1', '2', '1', '1', '2', '2', '2', '1', '2', '2', '1', '2', '1', '1', '1', '1', '2', '2', '1', '1', '2', '1', '1', '1', '2', '2', '1', '2', '2', '2', '2', '2', '1', '2', '2', '1', '2', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '2', '2', '2', '1', '1', '2', '2', '1', '2', '1', '2', '2', '1', '1', '1', '1', '1', '2', '1', '1', '1', '1', '2', '1', '1', '2', '1', '1', '1', '2', '2', '1', '1', '1', '1', '1', '1', '1', '2', '1', '2', '2', '2', '1', '1', '1', '1', '2', '1', '1', '2', '2', '2', '1', '1', '1', '1', '1', '1', '2', '1', '1', '1', '1', '2', '1', '1', '1', '1', '2', '2', '1', '2', '1', '1', '1', '1', '2', '1', '2', '1', '2', '1', '1', '2', '1', '1', '1', '1', '1', '2', '2', '2', '1', '1', '1', '2', '1', '1', '2', '1', '2', '1', '1', '2', '1', '1', '1', '1', '1', '2', '1', '2', '2', '2', '1', '2', '1', '1', '2', '1', '1', '1', '1', '2', '1', '2', '2', '2', '2', '1', '2', '2', '1', '1', '1', '1', '1', '1', '1', '1', '2', '2', '1', '1', '2', '1', '2', '1', '1', '1', '1', '1', '1', '2', '2', '2', '1', '1', '2', '1', '1', '1', '1', '2', '1', '1', '1', '1', '1', '1', '1', '1', '1', '2', '1', '2', '2', '1', '1', '1', '2', '2', '1', '2', '2', '1', '1', '1', '1', '1', '2', '2', '1', '2', '1', '2', '1', '1', '2', '2', '1', '1', '1', '2', '2', '1', '2', '1', '1', '1', '2', '2', '1', '2', '1', '1', '1', '2', '2', '1', '1', '2', '2', '1', '2', '1', '1', '1', '2', '2', '1', '1', '2', '2', '1', '1', '2', '2', '2', '2', '1', '1', '1', '1', '1', '2', '1', '2', '1', '2', '1', '2', '1', '1', '1', '1', '1', '2', '1', '1', '2', '1', '1', '2', '2', '2', '1', '1', '2', '2', '1', '1', '2', '2', '2', '1', '1', '1', '1', '1', '1', '1', '2', '1', '2', '2', '2', '1', '1', '1', '1', '2', '1', '1', '1', '1', '1', '1', '2', '2', '1', '1', '1', '1', '1', '1', '1', '2', '1', '1', '1', '1', '1', '1', '1', '2', '2', '1', '1', '2', '2', '1', '1', '1', '1', '2', '1', '1', '2', '1', '2', '1', '1', '1', '2', '1', '2', '1', '1', '1', '1', '2', '1', '2', '1', '2', '1', '1', '2', '2', '2', '2', '2', '2', '1', '1', '2', '1', '1', '2', '2', '1', '1', '2', '1', '1', '2', '1', '2', '1', '1', '1', '1', '1', '1', '2', '1', '1', '1', '2', '1', '1', '1', '1', '2', '2', '1', '2', '1', '1', '1', '1', '1', '1', '1', '2', '2', '1', '1', '1', '1', '2', '2', '1', '2', '1', '2', '1', '1', '1', '1', '1', '1', '1', '1', '2', '1', '1', '1', '1', '2', '2', '2', '2', '1', '2', '2', '1', '2', '2', '1', '1', '1', '2', '1', '2', '1', '1', '2', '1', '2', '1', '2', '1', '1', '1', '2', '1', '2', '2', '2', '2', '1', '1', '1', '1', '2', '2', '1', '1', '1', '2', '1', '1', '2', '2', '2', '1', '1', '2', '2', '1', '1', '2', '2', '2', '2', '1', '1', '1', '1', '1', '1', '2', '1', '1', '2', '1', '1', '1', '1', '2', '1', '1', '1', '1', '2', '1', '2', '2', '1', '1', '2', '2', '1', '1', '1', '1', '1', '1', '1', '2', '1', '1', '1', '2', '2', '1', '1', '1', '1', '1', '2', '1', '2', '2', '2', '2', '2', '1', '1', '1', '2', '1', '2', '1', '1', '1', '1', '2', '1', '1', '1', '2', '1', '1', '1', '2', '2', '1', '1', '1', '2', '1', '2', '2', '2', '2', '1', '2', '1', '2', '1', '2', '2', '1', '1', '1', '2', '2', '2', '1', '1', '1', '1', '2', '1', '1', '2', '1', '2', '1', '1', '2', '1', '1', '2', '1', '2', '1', '1', '1', '1', '1', '1', '1', '1', '2', '2', '1', '1', '2', '1', '1', '1', '2', '2', '2', '1', '1', '2', '1', '1', '2', '2', '1', '2', '2', '2', '1', '2', '2', '1', '1', '1', '1', '1', '1', '1', '1', '1', '2', '2', '1', '1', '1', '1', '1', '1', '2', '2', '2', '1', '1', '1', '1', '1', '1', '1', '2', '1', '1', '1', '2', '2', '2', '1', '1', '1', '2', '2', '1', '1', '1', '1', '1', '2', '1', '1', '2', '1', '2', '2', '1', '1', '1', '2', '2', '1', '1', '1', '2', '2', '1', '1', '2', '1', '1', '1', '2', '1', '1', '1', '2', '1', '1', '1', '2', '2', '2', '1', '1', '1', '2', '1', '2', '1', '1', '1', '2', '2', '2', '1', '2', '2', '1', '2', '1', '2', '2', '1', '2', '2', '2', '1', '1', '1', '2', '2', '2', '1', '1', '1', '1', '2', '1', '1', '2', '2', '1', '1', '1', '2', '1', '1', '1', '2', '1', '2', '2', '1', '1', '1', '1', '2', '1', '2', '1', '1', '1', '1', '1', '1', '1', '2', '1', '1', '1', '1', '1', '1', '1', '2', '1', '2', '1', '1', '1', '2', '1', '1', '2', '1', '2', '1', '1', '2', '1', '1', '2', '2', '2', '1', '2', '1', '1', '2', '2', '1', '2', '2', '2', '1', '2', '1', '1', '2', '2', '2', '2', '1', '1', '1', '1', '1', '2', '1', '2', '1', '1', '2', '1', '1', '2', '1', '1', '1', '2', '1', '1', '2', '2', '2', '1', '1', '2', '1', '2', '1', '1', '2', '2', '2', '1', '2', '2', '1', '1', '2', '1', '1', '1', '2', '2', '2', '1', '2', '1', '2', '1', '1', '2', '1', '1', '2', '1', '2', '1', '1', '1', '1', '1', '2', '2', '1', '1', '1', '1', '2', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '2', '2', '2', '1', '1', '1', '2', '1', '2', '1', '2', '2', '1', '1', '2', '2', '2', '2', '1', '1', '1', '1', '2', '2', '1', '2', '1', '2', '1', '1', '1', '1', '1', '2', '1', '2', '2', '1', '1', '2', '2', '2', '1', '2', '1', '1', '2', '2', '1', '1', '1', '1', '1', '1', '1', '1', '2', '1', '1', '1', '1', '1', '1', '1', '1', '1', '2', '1', '2', '1', '1', '2', '2', '2', '2', '2', '1', '1', '2', '1', '1', '1', '1', '1', '1', '1', '2', '1', '2', '1', '1', '1', '2', '2', '2', '2', '1', '1', '1', '1', '1', '1', '1', '2', '2', '1', '2', '2', '2', '2', '1', '2', '1', '2', '1', '2', '1', '1', '1', '1', '1', '2', '1', '1', '2', '1', '2', '1', '2', '1', '2', '1', '2', '1', '1', '1', '2', '2', '1', '1', '2', '1', '1', '2', '2', '2', '2', '1', '1', '1', '1', '2', '2', '2', '1', '1', '1', '2', '2', '1', '2', '1', '1', '1', '1', '1', '1', '1', '1', '2', '1', '1', '1', '1', '2', '1', '1', '2', '1', '2', '1', '2', '1', '1', '1', '2', '1', '1', '1', '2', '2', '1', '2', '1', '2', '1', '2', '2', '1', '2', '1', '2', '1', '1', '2', '1', '1', '1', '1', '2', '1', '2', '2', '2', '1', '1', '1', '2', '1', '1', '2', '1', '1', '1', '1', '1', '1', '2', '2', '1', '1', '2', '1', '2', '1', '1', '1', '1', '1', '1', '1', '1', '2', '1', '2', '1', '1', '1', '2', '1', '1', '1', '2', '2', '1', '1', '1', '1', '1', '2', '2', '1', '2', '2', '2', '2', '1', '2', '2', '2', '1', '1', '1', '1', '1', '2', '1', '1', '2', '1', '1', '1', '2', '1', '2', '1', '1', '2', '1', '1', '2', '2', '1', '1', '2']
{'accuracy_score': 0.9556714471968709, 'balanced_accuracy_score': 0.9527041942604857, 'macro_precision_score': 0.9543153102935712, 'macro_recall_score': 0.9527041942604857, 'macro_f1_score': 0.9534930171757325, 'micro_precision_score': 0.9556714471968709, 'micro_recall_score': 0.9556714471968709, 'micro_f1_score': 0.9556714471968709}
('0', Pipeline(steps=[('0', MaxAbsScaler()), ('1', MinMaxScaler()),
                ('2',
                 ExtraTreesClassifier(class_weight='balanced',
                                      criterion='entropy', max_features='log2',
                                      min_samples_leaf=2, min_samples_split=12,
                                      n_estimators=33, random_state=3))]))
('1', Pipeline(steps=[('0', KNNImputer(weights='distance')), ('1', MinMaxScaler()),
                ('2',
                 ExtraTreesClassifier(class_weight='balanced',
                                      criterion='entropy', max_features='log2',
                                      min_samples_leaf=2, min_samples_split=12,
                                      n_estimators=33, random_state=3))]))
('2', Pipeline(steps=[('0', MinMaxScaler()),
                ('1',
                 ExtraTreesClassifier(class_weight='balanced',
                                      criterion='entropy', max_features='log2',
                                      min_samples_leaf=2, min_samples_split=12,
                                      n_estimators=33, random_state=3))]))
('3', Pipeline(steps=[('0', SimpleImputer()), ('1', StandardScaler(with_mean=False)),
                ('2',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced_subsample',
                                        criterion='entropy',
                                        max_features='log2', min_samples_leaf=2,
                                        min_samples_split=18, n_estimators=74,
                                        random_state=3))]))
('4', Pipeline(steps=[('0',
                 SMOTE(k_neighbors=2, random_state=3,
                       sampling_strategy='not minority')),
                ('1',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        criterion='entropy',
                                        max_features='log2', min_samples_leaf=2,
                                        min_samples_split=12, n_estimators=23,
                                        random_state=3))]))
('5', Pipeline(steps=[('0',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        criterion='entropy',
                                        max_features='log2', min_samples_leaf=2,
                                        min_samples_split=12, n_estimators=23,
                                        random_state=3))]))
('6', Pipeline(steps=[('0',
                 ExtraTreesClassifier(class_weight='balanced',
                                      criterion='entropy', max_features='log2',
                                      min_samples_leaf=2, min_samples_split=12,
                                      n_estimators=33, random_state=3))]))
('7', Pipeline(steps=[('0',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        max_features='log2',
                                        min_samples_split=14, n_estimators=90,
                                        random_state=3))]))
('8', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced_subsample',
                                        criterion='entropy',
                                        max_features='sqrt', min_samples_leaf=2,
                                        min_samples_split=3, n_estimators=72,
                                        random_state=3))]))
('9', Pipeline(steps=[('0',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced_subsample',
                                        criterion='entropy',
                                        max_features='sqrt', min_samples_leaf=4,
                                        min_samples_split=8, n_estimators=58,
                                        random_state=3))]))

['1', '-1', '1', '1', '1', '1', '-1', '1', '1', '1', '1', '-1', '1', '1', '-1', '1', '1', '1', '1', '1', '-1', '1', '-1', '-1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '1', '1', '-1', '1', '-1', '1', '-1', '-1', '-1', '-1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '1', '1', '-1', '1', '1', '-1', '1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '-1', '1', '1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '1', '1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '1', '1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1']
{'accuracy_score': 0.8063829787234043, 'balanced_accuracy_score': 0.6230260283378066, 'macro_precision_score': 0.5607883049592894, 'macro_recall_score': 0.6230260283378066, 'macro_f1_score': 0.5684113865932048, 'micro_precision_score': 0.8063829787234043, 'micro_recall_score': 0.8063829787234043, 'micro_f1_score': 0.8063829787234043}
('0', Pipeline(steps=[('0', SimpleImputer()), ('1', Normalizer(norm='l1')),
                ('2',
                 DecisionTreeClassifier(class_weight='balanced',
                                        max_depth=1.212111052411804,
                                        max_features=0.8602668498929447,
                                        min_samples_leaf=14,
                                        min_samples_split=9, random_state=6))]))
('1', Pipeline(steps=[('0', MinMaxScaler()), ('1', SimpleImputer()),
                ('2', VarianceThreshold()),
                ('3',
                 DecisionTreeClassifier(class_weight='balanced',
                                        max_depth=1.212111052411804,
                                        max_features=0.8602668498929447,
                                        min_samples_leaf=14,
                                        min_samples_split=9, random_state=6))]))
('2', Pipeline(steps=[('0', MinMaxScaler()), ('1', SimpleImputer(strategy='median')),
                ('2', VarianceThreshold()),
                ('3',
                 DecisionTreeClassifier(class_weight='balanced',
                                        max_depth=1.212111052411804,
                                        max_features=0.8602668498929447,
                                        min_samples_leaf=14,
                                        min_samples_split=9, random_state=6))]))
('3', Pipeline(steps=[('0', SimpleImputer(strategy='median')),
                ('1',
                 DecisionTreeClassifier(class_weight='balanced',
                                        max_depth=1.212111052411804,
                                        max_features=0.8602668498929447,
                                        min_samples_leaf=14,
                                        min_samples_split=9, random_state=6))]))
('4', Pipeline(steps=[('0', MinMaxScaler()), ('1', SimpleImputer()),
                ('2', Normalizer(norm='l1')),
                ('3',
                 DecisionTreeClassifier(class_weight='balanced',
                                        max_depth=1.212111052411804,
                                        max_features=0.8602668498929447,
                                        min_samples_leaf=14,
                                        min_samples_split=9, random_state=6))]))
('5', Pipeline(steps=[('0', SimpleImputer()), ('1', VarianceThreshold()),
                ('2',
                 DecisionTreeClassifier(class_weight='balanced',
                                        max_depth=1.212111052411804,
                                        max_features=0.8602668498929447,
                                        min_samples_leaf=14,
                                        min_samples_split=9, random_state=6))]))
('6', Pipeline(steps=[('0', SimpleImputer(strategy='median')),
                ('1', Normalizer(norm='l1')),
                ('2',
                 RandomUnderSampler(random_state=6, replacement=True,
                                    sampling_strategy='not minority')),
                ('3',
                 DecisionTreeClassifier(class_weight='balanced',
                                        max_depth=1.212111052411804,
                                        max_features=0.8602668498929447,
                                        min_samples_leaf=14,
                                        min_samples_split=9, random_state=6))]))
('7', Pipeline(steps=[('0', KNNImputer(n_neighbors=8, weights='distance')),
                ('1', MinMaxScaler()),
                ('2',
                 RandomUnderSampler(random_state=6, replacement=True,
                                    sampling_strategy='not minority')),
                ('3', BernoulliNB(alpha=10.750755500078759))]))
('8', Pipeline(steps=[('0', VarianceThreshold()),
                ('1', SimpleImputer(strategy='median')), ('2', MinMaxScaler()),
                ('3', BernoulliNB(alpha=0.09429868501683307, fit_prior=False))]))
('9', Pipeline(steps=[('0', KNNImputer(n_neighbors=8, weights='distance')),
                ('1',
                 SMOTETomek(random_state=6, sampling_strategy='not majority')),
                ('2', SimpleImputer(strategy='median')),
                ('3',
                 DecisionTreeClassifier(class_weight='balanced',
                                        max_depth=1.212111052411804,
                                        max_features=0.8602668498929447,
                                        min_samples_leaf=14,
                                        min_samples_split=9, random_state=6))]))


{'accuracy_score': 0.9487179487179487, 'balanced_accuracy_score': 0.9390476190476191, 'macro_precision_score': 0.949025974025974, 'macro_recall_score': 0.9390476190476191, 'macro_f1_score': 0.9436777920410783, 'micro_precision_score': 0.9487179487179487, 'micro_recall_score': 0.9487179487179487, 'micro_f1_score': 0.9487179487179487}
('0', Pipeline(steps=[('0', RobustScaler(with_centering=False, with_scaling=False)),
                ('1',
                 SMOTETomek(random_state=8, sampling_strategy='not majority')),
                ('2', VarianceThreshold()),
                ('3',
                 ExtraTreesClassifier(bootstrap=True, class_weight='balanced',
                                      max_features='sqrt', min_samples_split=10,
                                      n_estimators=48, random_state=8))]))
('1', Pipeline(steps=[('0',
                 FastICA(algorithm='deflation', fun='exp', n_components=95,
                         random_state=8)),
                ('1', SimpleImputer(strategy='median')),
                ('2',
                 ExtraTreesClassifier(class_weight='balanced_subsample',
                                      criterion='entropy', max_features='sqrt',
                                      min_samples_leaf=2, min_samples_split=20,
                                      n_estimators=90, random_state=8))]))
('2', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1',
                 Nystroem(coef0=-0.8306110088394396, degree=2,
                          gamma=4.30246882586764e-05, kernel='poly',
                          n_components=74, random_state=8)),
                ('2', KNNImputer(n_neighbors=3, weights='distance')),
                ('3',
                 AdaBoostClassifier(learning_rate=0.2197818822478388,
                                    n_estimators=76, random_state=8))]))
('3', Pipeline(steps=[('0',
                 RBFSampler(gamma=0.005529442861477142, n_components=31,
                            random_state=8)),
                ('1',
                 SMOTETomek(random_state=8, sampling_strategy='not majority')),
                ('2', VarianceThreshold()),
                ('3',
                 ExtraTreesClassifier(class_weight='balanced_subsample',
                                      criterion='entropy', max_features='sqrt',
                                      min_samples_leaf=2, min_samples_split=20,
                                      n_estimators=90, random_state=8))]))
('4', Pipeline(steps=[('0',
                 SMOTETomek(random_state=8, sampling_strategy='not majority')),
                ('1', VarianceThreshold()), ('2', MaxAbsScaler()),
                ('3',
                 ExtraTreesClassifier(bootstrap=True, class_weight='balanced',
                                      max_features='sqrt', min_samples_split=10,
                                      n_estimators=48, random_state=8))]))
('5', Pipeline(steps=[('0',
                 RBFSampler(gamma=0.005529442861477142, n_components=31,
                            random_state=8)),
                ('1',
                 SMOTETomek(random_state=8, sampling_strategy='not majority')),
                ('2',
                 ExtraTreesClassifier(class_weight='balanced_subsample',
                                      criterion='entropy', max_features='sqrt',
                                      min_samples_leaf=2, min_samples_split=20,
                                      n_estimators=90, random_state=8))]))
('6', Pipeline(steps=[('0',
                 Nystroem(coef0=0.257540545802321, degree=3,
                          gamma=5.3492225770699217e-05, n_components=32,
                          random_state=8)),
                ('1', VarianceThreshold()),
                ('2',
                 ExtraTreesClassifier(class_weight='balanced_subsample',
                                      criterion='entropy', max_features='sqrt',
                                      min_samples_leaf=2, min_samples_split=20,
                                      n_estimators=90, random_state=8))]))
('7', Pipeline(steps=[('0',
                 RBFSampler(gamma=0.005529442861477142, n_components=31,
                            random_state=8)),
                ('1',
                 SMOTETomek(random_state=8, sampling_strategy='not majority')),
                ('2', MinMaxScaler()),
                ('3',
                 ExtraTreesClassifier(class_weight='balanced_subsample',
                                      criterion='entropy', max_features='sqrt',
                                      min_samples_leaf=2, min_samples_split=20,
                                      n_estimators=90, random_state=8))]))
('8', Pipeline(steps=[('0',
                 RBFSampler(gamma=0.005529442861477142, n_components=31,
                            random_state=8)),
                ('1',
                 SMOTETomek(random_state=8, sampling_strategy='not majority')),
                ('2', RobustScaler(with_centering=False, with_scaling=False)),
                ('3',
                 ExtraTreesClassifier(class_weight='balanced_subsample',
                                      criterion='entropy', max_features='sqrt',
                                      min_samples_leaf=2, min_samples_split=20,
                                      n_estimators=90, random_state=8))]))
('9', Pipeline(steps=[('0',
                 SMOTETomek(random_state=8, sampling_strategy='not majority')),
                ('1', MaxAbsScaler()), ('2', VarianceThreshold()),
                ('3',
                 ExtraTreesClassifier(bootstrap=True, class_weight='balanced',
                                      max_features='sqrt', min_samples_split=10,
                                      n_estimators=48, random_state=8))]))

['POX', 'NUC', 'CYT', 'CYT', 'CYT', 'EXC', 'CYT', 'CYT', 'MIT', 'ME1', 'EXC', 'ME2', 'MIT', 'ME1', 'CYT', 'NUC', 'CYT', 'MIT', 'MIT', 'NUC', 'ME3', 'CYT', 'CYT', 'ME1', 'MIT', 'MIT', 'MIT', 'POX', 'ME3', 'NUC', 'ME1', 'ME3', 'CYT', 'CYT', 'CYT', 'POX', 'NUC', 'MIT', 'CYT', 'EXC', 'ME3', 'CYT', 'NUC', 'CYT', 'NUC', 'CYT', 'MIT', 'NUC', 'CYT', 'NUC', 'CYT', 'NUC', 'NUC', 'MIT', 'NUC', 'MIT', 'POX', 'NUC', 'CYT', 'ME1', 'ME1', 'MIT', 'MIT', 'ME3', 'MIT', 'MIT', 'MIT', 'EXC', 'CYT', 'NUC', 'EXC', 'VAC', 'CYT', 'ME2', 'CYT', 'NUC', 'EXC', 'EXC', 'CYT', 'CYT', 'CYT', 'CYT', 'ME3', 'POX', 'NUC', 'NUC', 'CYT', 'NUC', 'MIT', 'NUC', 'ME3', 'NUC', 'ME3', 'CYT', 'ME3', 'NUC', 'CYT', 'ME2', 'CYT', 'CYT', 'ME3', 'ME3', 'NUC', 'ME1', 'ERL', 'NUC', 'CYT', 'ME3', 'ME3', 'POX', 'ME3', 'ME2', 'ME1', 'CYT', 'ME3', 'ME3', 'ME2', 'CYT', 'NUC', 'NUC', 'MIT', 'ME3', 'MIT', 'NUC', 'ME3', 'CYT', 'NUC', 'CYT', 'ME3', 'CYT', 'CYT', 'NUC', 'ME2', 'ME2', 'NUC', 'NUC', 'MIT', 'NUC', 'CYT', 'CYT', 'NUC', 'MIT', 'NUC', 'CYT', 'CYT', 'CYT', 'MIT', 'MIT', 'ME3', 'NUC', 'CYT', 'NUC', 'MIT', 'MIT', 'MIT', 'NUC', 'CYT', 'ME3', 'ME3', 'CYT', 'MIT', 'MIT', 'CYT', 'MIT', 'CYT', 'NUC', 'ME1', 'ME3', 'NUC', 'MIT', 'ME1', 'NUC', 'ERL', 'MIT', 'ME3', 'ME2', 'ME2', 'NUC', 'CYT', 'NUC', 'ME3', 'ME3', 'ME2', 'NUC', 'NUC', 'NUC', 'ME3', 'ME2', 'CYT', 'MIT', 'CYT', 'MIT', 'MIT', 'ME3', 'CYT', 'MIT', 'ME3', 'NUC', 'NUC', 'MIT', 'CYT', 'NUC', 'NUC', 'NUC', 'MIT', 'MIT', 'MIT', 'MIT', 'CYT', 'CYT', 'MIT', 'MIT', 'MIT', 'ME3', 'MIT', 'NUC', 'CYT', 'MIT', 'CYT', 'MIT', 'ME3', 'NUC', 'ME3', 'EXC', 'ME3', 'MIT', 'NUC', 'ME3', 'CYT', 'ME2', 'NUC', 'CYT', 'EXC', 'NUC', 'ME2', 'ME3', 'ME1', 'CYT', 'NUC', 'CYT', 'EXC', 'CYT', 'CYT', 'CYT', 'NUC', 'ME3', 'CYT', 'POX', 'NUC', 'MIT', 'NUC', 'POX', 'MIT', 'CYT', 'EXC', 'CYT', 'CYT', 'NUC', 'CYT', 'ME1', 'ME2', 'ME3', 'NUC', 'NUC', 'CYT', 'CYT', 'ME3', 'CYT', 'ME2', 'MIT', 'CYT', 'NUC', 'CYT', 'MIT', 'NUC', 'CYT', 'NUC', 'NUC', 'CYT', 'MIT', 'MIT', 'MIT', 'NUC', 'CYT', 'NUC', 'CYT', 'ME2', 'CYT', 'NUC', 'CYT', 'MIT', 'NUC', 'NUC', 'MIT', 'NUC', 'NUC', 'MIT', 'CYT', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'NUC', 'ME3', 'CYT', 'CYT', 'NUC', 'NUC', 'CYT', 'CYT', 'CYT', 'MIT', 'NUC', 'CYT', 'CYT', 'CYT', 'MIT', 'CYT', 'MIT', 'NUC', 'MIT', 'CYT', 'CYT', 'CYT', 'MIT', 'MIT', 'CYT', 'MIT', 'MIT', 'MIT', 'ME2', 'CYT', 'NUC', 'CYT', 'CYT', 'CYT', 'NUC', 'ME3', 'ME3', 'NUC', 'ME1', 'NUC', 'MIT', 'MIT', 'NUC', 'CYT', 'CYT', 'ME3', 'CYT', 'NUC', 'CYT', 'ME3', 'ME3', 'NUC', 'MIT', 'ME3', 'CYT', 'CYT', 'ME3', 'MIT', 'NUC', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'NUC', 'NUC', 'CYT', 'MIT', 'NUC', 'NUC', 'CYT', 'ME3', 'EXC', 'ME3', 'ME1', 'CYT', 'MIT', 'NUC', 'NUC', 'ME1', 'CYT', 'CYT', 'CYT', 'MIT', 'CYT', 'CYT', 'CYT', 'CYT', 'NUC', 'NUC', 'NUC', 'CYT', 'MIT', 'NUC', 'NUC', 'NUC', 'NUC', 'CYT', 'ME1', 'ME1', 'CYT', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'ME3', 'CYT', 'CYT', 'CYT', 'ME1', 'CYT', 'ME1', 'NUC', 'ME1', 'CYT', 'ME3', 'POX', 'ME1', 'ME3', 'ME3', 'ME3', 'ME3', 'ME3', 'ME3', 'MIT', 'NUC', 'ME3', 'MIT', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'ME2']
{'accuracy_score': 0.5842696629213483, 'balanced_accuracy_score': 0.560159022350363, 'macro_precision_score': 0.5431291147851947, 'macro_recall_score': 0.5041431201153267, 'macro_f1_score': 0.4896994355382053, 'micro_precision_score': 0.5842696629213483, 'micro_recall_score': 0.5842696629213483, 'micro_f1_score': 0.5842696629213483}
('0', Pipeline(steps=[('0', MinMaxScaler()),
                ('1',
                 FastICA(fun='cube', n_components=85, random_state=6,
                         whiten=False)),
                ('2', VarianceThreshold()),
                ('3',
                 ExtraTreesClassifier(bootstrap=True, class_weight='balanced',
                                      criterion='entropy', max_features='log2',
                                      min_samples_leaf=6, min_samples_split=14,
                                      n_estimators=82, random_state=6))]))
('1', Pipeline(steps=[('0',
                 RBFSampler(gamma=0.0487220968474504, n_components=15,
                            random_state=6)),
                ('1', RobustScaler()), ('2', VarianceThreshold()),
                ('3',
                 ExtraTreesClassifier(class_weight='balanced_subsample',
                                      max_features='sqrt', min_samples_leaf=6,
                                      min_samples_split=7, n_estimators=82,
                                      random_state=6))]))
('2', Pipeline(steps=[('0', MinMaxScaler()),
                ('1',
                 FastICA(fun='cube', n_components=85, random_state=6,
                         whiten=False)),
                ('2', VarianceThreshold()),
                ('3',
                 ExtraTreesClassifier(class_weight='balanced_subsample',
                                      max_features='sqrt', min_samples_leaf=6,
                                      min_samples_split=7, n_estimators=82,
                                      random_state=6))]))
('3', Pipeline(steps=[('0',
                 RBFSampler(gamma=0.031248040958633507, n_components=85,
                            random_state=6)),
                ('1', SelectFwe(alpha=0.026249622896048097)),
                ('2',
                 FastICA(fun='cube', n_components=70, random_state=6,
                         whiten=False)),
                ('3',
                 ExtraTreesClassifier(class_weight='balanced_subsample',
                                      criterion='entropy', max_features='sqrt',
                                      min_samples_split=10, n_estimators=47,
                                      random_state=6))]))
('4', Pipeline(steps=[('0', SimpleImputer(strategy='most_frequent')),
                ('1',
                 FastICA(algorithm='deflation', n_components=7,
                         random_state=6)),
                ('2',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        criterion='entropy',
                                        max_features='sqrt',
                                        min_samples_leaf=14,
                                        min_samples_split=10, n_estimators=88,
                                        random_state=6))]))
('5', Pipeline(steps=[('0',
                 RBFSampler(gamma=0.0018285544755520626, n_components=72,
                            random_state=6)),
                ('1',
                 FastICA(fun='cube', n_components=70, random_state=6,
                         whiten=False)),
                ('2', SelectFwe(alpha=0.026249622896048097)),
                ('3',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced_subsample',
                                        criterion='entropy',
                                        max_features='log2',
                                        min_samples_leaf=11,
                                        min_samples_split=9, n_estimators=92,
                                        random_state=6))]))
('6', Pipeline(steps=[('0',
                 RBFSampler(gamma=0.0487220968474504, n_components=15,
                            random_state=6)),
                ('1', KNNImputer(n_neighbors=3, weights='distance')),
                ('2', VarianceThreshold()),
                ('3',
                 ExtraTreesClassifier(class_weight='balanced_subsample',
                                      max_features='sqrt', min_samples_leaf=6,
                                      min_samples_split=7, n_estimators=82,
                                      random_state=6))]))
('7', Pipeline(steps=[('0',
                 ExtraTreesClassifier(class_weight='balanced',
                                      max_features='log2', min_samples_leaf=3,
                                      min_samples_split=16, n_estimators=25,
                                      random_state=6))]))
('8', Pipeline(steps=[('0',
                 RBFSampler(gamma=0.0018285544755520626, n_components=72,
                            random_state=6)),
                ('1',
                 FastICA(fun='cube', n_components=70, random_state=6,
                         whiten=False)),
                ('2',
                 RandomForestClassifier(bootstrap=False, max_features='log2',
                                        min_samples_leaf=3, min_samples_split=7,
                                        n_estimators=42, random_state=6))]))
('9', Pipeline(steps=[('0',
                 RBFSampler(gamma=0.0018285544755520626, n_components=72,
                            random_state=6)),
                ('1',
                 FastICA(fun='cube', n_components=70, random_state=6,
                         whiten=False)),
                ('2', MaxAbsScaler()),
                ('3',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced_subsample',
                                        criterion='entropy',
                                        max_features='log2',
                                        min_samples_leaf=11,
                                        min_samples_split=9, n_estimators=92,
                                        random_state=6))]))

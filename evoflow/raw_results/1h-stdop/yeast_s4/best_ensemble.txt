['POX', 'NUC', 'CYT', 'CYT', 'CYT', 'EXC', 'CYT', 'CYT', 'MIT', 'ME1', 'ME1', 'ME2', 'MIT', 'ME2', 'CYT', 'NUC', 'CYT', 'MIT', 'MIT', 'NUC', 'ME3', 'CYT', 'CYT', 'ME1', 'MIT', 'MIT', 'MIT', 'POX', 'ME3', 'MIT', 'ME1', 'ME3', 'CYT', 'CYT', 'CYT', 'POX', 'NUC', 'MIT', 'CYT', 'EXC', 'ME3', 'NUC', 'NUC', 'CYT', 'NUC', 'CYT', 'MIT', 'NUC', 'CYT', 'NUC', 'CYT', 'NUC', 'NUC', 'MIT', 'CYT', 'MIT', 'POX', 'NUC', 'CYT', 'ME1', 'ME1', 'MIT', 'MIT', 'ME3', 'MIT', 'MIT', 'MIT', 'EXC', 'CYT', 'NUC', 'EXC', 'NUC', 'CYT', 'ME2', 'CYT', 'NUC', 'EXC', 'EXC', 'CYT', 'CYT', 'CYT', 'CYT', 'ME3', 'POX', 'NUC', 'NUC', 'CYT', 'NUC', 'MIT', 'NUC', 'ME3', 'NUC', 'ME3', 'CYT', 'ME3', 'NUC', 'CYT', 'ME2', 'CYT', 'CYT', 'ME3', 'ME3', 'NUC', 'ME1', 'ME2', 'NUC', 'CYT', 'ME3', 'ME3', 'POX', 'ME3', 'ME1', 'ME1', 'CYT', 'ME3', 'ME3', 'ME2', 'NUC', 'NUC', 'NUC', 'MIT', 'ME3', 'MIT', 'CYT', 'ME3', 'CYT', 'NUC', 'NUC', 'ME3', 'CYT', 'CYT', 'NUC', 'CYT', 'ME2', 'NUC', 'NUC', 'MIT', 'ME3', 'CYT', 'CYT', 'NUC', 'MIT', 'NUC', 'CYT', 'CYT', 'CYT', 'MIT', 'MIT', 'ME3', 'NUC', 'CYT', 'NUC', 'MIT', 'MIT', 'MIT', 'NUC', 'CYT', 'ME3', 'ME3', 'CYT', 'MIT', 'MIT', 'NUC', 'MIT', 'CYT', 'NUC', 'ME1', 'ME3', 'NUC', 'MIT', 'ME1', 'NUC', 'ERL', 'MIT', 'ME3', 'ME2', 'ME2', 'NUC', 'CYT', 'NUC', 'ME3', 'ME3', 'ME2', 'NUC', 'NUC', 'NUC', 'ME3', 'ME2', 'CYT', 'MIT', 'MIT', 'MIT', 'MIT', 'ME3', 'CYT', 'MIT', 'ME3', 'NUC', 'NUC', 'MIT', 'CYT', 'NUC', 'NUC', 'NUC', 'MIT', 'MIT', 'ME3', 'MIT', 'CYT', 'CYT', 'MIT', 'MIT', 'MIT', 'ME3', 'MIT', 'NUC', 'CYT', 'MIT', 'CYT', 'MIT', 'ME3', 'NUC', 'ME3', 'VAC', 'ME3', 'MIT', 'NUC', 'ME3', 'CYT', 'ME2', 'NUC', 'CYT', 'EXC', 'NUC', 'ME2', 'ME3', 'ME2', 'CYT', 'NUC', 'CYT', 'MIT', 'CYT', 'CYT', 'CYT', 'NUC', 'ME3', 'NUC', 'ME3', 'NUC', 'MIT', 'NUC', 'POX', 'MIT', 'CYT', 'EXC', 'CYT', 'CYT', 'NUC', 'CYT', 'ME1', 'ME2', 'ME3', 'NUC', 'NUC', 'CYT', 'CYT', 'ME3', 'CYT', 'ME2', 'MIT', 'CYT', 'NUC', 'CYT', 'MIT', 'NUC', 'CYT', 'NUC', 'NUC', 'CYT', 'MIT', 'MIT', 'MIT', 'NUC', 'CYT', 'ME3', 'CYT', 'ME2', 'CYT', 'NUC', 'CYT', 'MIT', 'NUC', 'NUC', 'MIT', 'NUC', 'NUC', 'MIT', 'CYT', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'NUC', 'ME3', 'CYT', 'CYT', 'NUC', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'MIT', 'CYT', 'MIT', 'NUC', 'MIT', 'CYT', 'CYT', 'CYT', 'MIT', 'MIT', 'CYT', 'MIT', 'MIT', 'MIT', 'POX', 'CYT', 'NUC', 'CYT', 'CYT', 'CYT', 'MIT', 'ME3', 'ME3', 'CYT', 'EXC', 'NUC', 'MIT', 'MIT', 'NUC', 'CYT', 'CYT', 'ME3', 'CYT', 'NUC', 'CYT', 'ME3', 'ME3', 'NUC', 'MIT', 'ME3', 'CYT', 'CYT', 'ME3', 'MIT', 'NUC', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'NUC', 'CYT', 'MIT', 'NUC', 'NUC', 'ME3', 'ME3', 'EXC', 'ME3', 'ME1', 'NUC', 'MIT', 'NUC', 'CYT', 'ME1', 'CYT', 'CYT', 'CYT', 'MIT', 'MIT', 'CYT', 'CYT', 'CYT', 'NUC', 'NUC', 'NUC', 'CYT', 'MIT', 'NUC', 'NUC', 'NUC', 'NUC', 'CYT', 'ME1', 'ME1', 'CYT', 'NUC', 'CYT', 'CYT', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'ME3', 'CYT', 'CYT', 'CYT', 'ME1', 'CYT', 'ME1', 'NUC', 'ME1', 'CYT', 'ME3', 'POX', 'ME1', 'ME3', 'ME3', 'ME3', 'ME3', 'ME3', 'ME3', 'MIT', 'NUC', 'ME3', 'MIT', 'NUC', 'CYT', 'CYT', 'NUC', 'CYT', 'ME2']
{'accuracy_score': 0.5910112359550562, 'balanced_accuracy_score': 0.5584506707017188, 'macro_precision_score': 0.46002154832676895, 'macro_recall_score': 0.5026056036315469, 'macro_f1_score': 0.4770878727123444, 'micro_precision_score': 0.5910112359550562, 'micro_recall_score': 0.5910112359550562, 'micro_f1_score': 0.5910112359550562}
('0', Pipeline(steps=[('0', FastICA(n_components=51, random_state=4)),
                ('1',
                 LogisticRegression(C=6.765252482866307,
                                    class_weight='balanced', random_state=4))]))
('1', Pipeline(steps=[('0',
                 RandomOverSampler(random_state=4,
                                   sampling_strategy='minority')),
                ('1', Normalizer(norm='max')), ('2', MaxAbsScaler()),
                ('3',
                 ExtraTreesClassifier(class_weight='balanced_subsample',
                                      max_features='sqrt', min_samples_leaf=2,
                                      min_samples_split=8, n_estimators=52,
                                      random_state=4))]))
('2', Pipeline(steps=[('0',
                 RandomOverSampler(random_state=4,
                                   sampling_strategy='minority')),
                ('1', SelectPercentile(percentile=95.40530789711121)),
                ('2',
                 ExtraTreesClassifier(class_weight='balanced_subsample',
                                      max_features='sqrt', min_samples_leaf=2,
                                      min_samples_split=8, n_estimators=52,
                                      random_state=4))]))
('3', Pipeline(steps=[('0',
                 FastICA(fun='cube', n_components=100, random_state=4,
                         whiten=False)),
                ('1',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        criterion='entropy',
                                        max_features='log2', min_samples_leaf=5,
                                        min_samples_split=12, n_estimators=92,
                                        random_state=4))]))
('4', Pipeline(steps=[('0', MinMaxScaler()), ('1', StandardScaler(with_mean=False)),
                ('2', MaxAbsScaler()),
                ('3',
                 ExtraTreesClassifier(class_weight='balanced_subsample',
                                      max_features='sqrt', min_samples_leaf=2,
                                      min_samples_split=8, n_estimators=52,
                                      random_state=4))]))
('5', Pipeline(steps=[('0',
                 RandomOverSampler(random_state=4,
                                   sampling_strategy='minority')),
                ('1', Normalizer(norm='max')),
                ('2',
                 RBFSampler(gamma=0.3844219198847741, n_components=60,
                            random_state=4)),
                ('3',
                 ExtraTreesClassifier(class_weight='balanced_subsample',
                                      max_features='log2', min_samples_leaf=11,
                                      min_samples_split=6, random_state=4))]))
('6', Pipeline(steps=[('0',
                 RBFSampler(gamma=0.05278851593217732, n_components=41,
                            random_state=4)),
                ('1',
                 ExtraTreesClassifier(class_weight='balanced_subsample',
                                      max_features='sqrt', min_samples_leaf=2,
                                      min_samples_split=8, n_estimators=52,
                                      random_state=4))]))
('7', Pipeline(steps=[('0', FastICA(n_components=67, random_state=4, whiten=False)),
                ('1',
                 ExtraTreesClassifier(class_weight='balanced_subsample',
                                      max_features='sqrt', min_samples_leaf=2,
                                      min_samples_split=8, n_estimators=52,
                                      random_state=4))]))
('8', Pipeline(steps=[('0',
                 FastICA(algorithm='deflation', fun='cube', n_components=82,
                         random_state=4)),
                ('1',
                 RBFSampler(gamma=0.3844219198847741, n_components=60,
                            random_state=4)),
                ('2',
                 ExtraTreesClassifier(class_weight='balanced_subsample',
                                      max_features='sqrt', min_samples_leaf=2,
                                      min_samples_split=8, n_estimators=52,
                                      random_state=4))]))
('9', Pipeline(steps=[('0', Normalizer()),
                ('1',
                 ExtraTreesClassifier(class_weight='balanced_subsample',
                                      max_features='sqrt', min_samples_leaf=2,
                                      min_samples_split=8, n_estimators=52,
                                      random_state=4))]))

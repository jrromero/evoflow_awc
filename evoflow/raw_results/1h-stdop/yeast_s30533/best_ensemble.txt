['POX', 'NUC', 'CYT', 'NUC', 'CYT', 'EXC', 'CYT', 'CYT', 'MIT', 'ME1', 'ME1', 'ME2', 'MIT', 'ME1', 'CYT', 'CYT', 'CYT', 'MIT', 'MIT', 'NUC', 'ME3', 'CYT', 'CYT', 'ME1', 'MIT', 'MIT', 'MIT', 'POX', 'ME3', 'MIT', 'ME1', 'ME3', 'CYT', 'CYT', 'CYT', 'POX', 'NUC', 'MIT', 'CYT', 'EXC', 'ME3', 'NUC', 'NUC', 'CYT', 'NUC', 'CYT', 'MIT', 'NUC', 'CYT', 'NUC', 'CYT', 'NUC', 'NUC', 'MIT', 'CYT', 'MIT', 'POX', 'NUC', 'CYT', 'ME1', 'ME1', 'MIT', 'MIT', 'ME3', 'MIT', 'MIT', 'MIT', 'EXC', 'CYT', 'NUC', 'EXC', 'VAC', 'CYT', 'ME2', 'CYT', 'MIT', 'EXC', 'EXC', 'CYT', 'CYT', 'CYT', 'CYT', 'ME3', 'POX', 'NUC', 'NUC', 'CYT', 'NUC', 'MIT', 'NUC', 'ME3', 'NUC', 'ME3', 'CYT', 'ME3', 'NUC', 'CYT', 'ME2', 'CYT', 'CYT', 'ME2', 'ME3', 'NUC', 'ME1', 'ERL', 'NUC', 'CYT', 'ME3', 'ME3', 'POX', 'ME3', 'ME1', 'ME1', 'CYT', 'ME3', 'ME3', 'ME1', 'CYT', 'NUC', 'NUC', 'MIT', 'ME3', 'MIT', 'NUC', 'ME3', 'CYT', 'NUC', 'CYT', 'NUC', 'CYT', 'CYT', 'NUC', 'ME2', 'ME2', 'NUC', 'NUC', 'MIT', 'MIT', 'NUC', 'CYT', 'NUC', 'MIT', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'ME3', 'NUC', 'CYT', 'NUC', 'MIT', 'MIT', 'MIT', 'NUC', 'CYT', 'ME3', 'ME3', 'CYT', 'MIT', 'MIT', 'CYT', 'MIT', 'CYT', 'NUC', 'ME1', 'ME3', 'NUC', 'MIT', 'ME1', 'NUC', 'ERL', 'MIT', 'ME3', 'ME2', 'ME2', 'NUC', 'CYT', 'NUC', 'ME3', 'ME3', 'ME2', 'NUC', 'NUC', 'NUC', 'ME3', 'ME2', 'CYT', 'MIT', 'MIT', 'MIT', 'MIT', 'ME3', 'CYT', 'MIT', 'ME3', 'NUC', 'NUC', 'MIT', 'CYT', 'NUC', 'NUC', 'NUC', 'MIT', 'MIT', 'MIT', 'MIT', 'CYT', 'CYT', 'MIT', 'MIT', 'MIT', 'ME3', 'MIT', 'NUC', 'CYT', 'MIT', 'CYT', 'MIT', 'ME3', 'NUC', 'NUC', 'EXC', 'ME3', 'MIT', 'NUC', 'ME3', 'CYT', 'ME2', 'NUC', 'CYT', 'EXC', 'NUC', 'ME2', 'ME3', 'ME2', 'CYT', 'NUC', 'CYT', 'MIT', 'CYT', 'CYT', 'CYT', 'NUC', 'ME3', 'NUC', 'POX', 'VAC', 'MIT', 'MIT', 'POX', 'MIT', 'CYT', 'EXC', 'CYT', 'CYT', 'NUC', 'CYT', 'ME1', 'ME2', 'ME3', 'NUC', 'NUC', 'CYT', 'CYT', 'ME3', 'CYT', 'ME2', 'MIT', 'CYT', 'NUC', 'CYT', 'MIT', 'NUC', 'CYT', 'NUC', 'NUC', 'CYT', 'MIT', 'MIT', 'MIT', 'NUC', 'CYT', 'ME3', 'CYT', 'ME2', 'CYT', 'NUC', 'CYT', 'MIT', 'NUC', 'NUC', 'MIT', 'NUC', 'NUC', 'MIT', 'CYT', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'NUC', 'ME3', 'CYT', 'CYT', 'NUC', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'MIT', 'CYT', 'MIT', 'NUC', 'MIT', 'CYT', 'CYT', 'CYT', 'MIT', 'MIT', 'CYT', 'MIT', 'MIT', 'MIT', 'EXC', 'CYT', 'NUC', 'CYT', 'CYT', 'NUC', 'CYT', 'ME3', 'ME3', 'NUC', 'EXC', 'NUC', 'MIT', 'MIT', 'NUC', 'CYT', 'CYT', 'ME3', 'CYT', 'NUC', 'NUC', 'ME3', 'ME3', 'NUC', 'MIT', 'ME3', 'CYT', 'CYT', 'ME3', 'MIT', 'NUC', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'NUC', 'NUC', 'CYT', 'MIT', 'NUC', 'NUC', 'ME3', 'ME3', 'EXC', 'ME3', 'ME1', 'NUC', 'MIT', 'NUC', 'NUC', 'ME1', 'CYT', 'CYT', 'CYT', 'MIT', 'CYT', 'CYT', 'CYT', 'CYT', 'NUC', 'NUC', 'NUC', 'CYT', 'MIT', 'NUC', 'NUC', 'NUC', 'NUC', 'CYT', 'ME1', 'ME1', 'CYT', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'ME3', 'CYT', 'CYT', 'CYT', 'ME1', 'CYT', 'ME1', 'NUC', 'ME1', 'CYT', 'ME3', 'POX', 'ME1', 'ME3', 'ME3', 'ME3', 'ME3', 'ME3', 'ME3', 'MIT', 'NUC', 'ME3', 'MIT', 'NUC', 'CYT', 'CYT', 'NUC', 'CYT', 'ME2']
{'accuracy_score': 0.604494382022472, 'balanced_accuracy_score': 0.6070710422669865, 'macro_precision_score': 0.5646741018004902, 'macro_recall_score': 0.5463639380402878, 'macro_f1_score': 0.5337190332350303, 'micro_precision_score': 0.604494382022472, 'micro_recall_score': 0.604494382022472, 'micro_f1_score': 0.604494382022472}
('0', Pipeline(steps=[('0', MaxAbsScaler()), ('1', MinMaxScaler()),
                ('2', SelectPercentile(percentile=73.45036443204306)),
                ('3',
                 SGDClassifier(alpha=0.00024410065956812272, average=True,
                               class_weight='balanced',
                               epsilon=0.0009661038878084646,
                               eta0=6.904190314135885e-06,
                               l1_ratio=6.761049950172805e-08, loss='log',
                               power_t=0.5890141501371712, random_state=30533,
                               tol=6.107040082109039e-05))]))
('1', Pipeline(steps=[('0',
                 FastICA(algorithm='deflation', fun='cube', n_components=76,
                         random_state=30533, whiten=False)),
                ('1', MinMaxScaler()),
                ('2',
                 ExtraTreesClassifier(class_weight='balanced',
                                      max_features='log2', min_samples_split=13,
                                      n_estimators=92, random_state=30533))]))
('2', Pipeline(steps=[('0',
                 SMOTE(k_neighbors=2, random_state=30533,
                       sampling_strategy='not majority')),
                ('1',
                 RandomForestClassifier(class_weight='balanced_subsample',
                                        criterion='entropy',
                                        max_features='sqrt',
                                        min_samples_leaf=16,
                                        min_samples_split=19, n_estimators=89,
                                        random_state=30533))]))
('3', Pipeline(steps=[('0',
                 ExtraTreesClassifier(class_weight='balanced',
                                      max_features='log2', min_samples_split=13,
                                      n_estimators=92, random_state=30533))]))
('4', Pipeline(steps=[('0',
                 SMOTE(k_neighbors=2, random_state=30533,
                       sampling_strategy='not majority')),
                ('1',
                 ExtraTreesClassifier(class_weight='balanced_subsample',
                                      criterion='entropy', max_features='sqrt',
                                      min_samples_leaf=8, min_samples_split=17,
                                      n_estimators=66, random_state=30533))]))
('5', Pipeline(steps=[('0',
                 FastICA(algorithm='deflation', fun='cube', n_components=72,
                         random_state=30533, whiten=False)),
                ('1', VarianceThreshold()),
                ('2',
                 ExtraTreesClassifier(class_weight='balanced',
                                      max_features='log2', min_samples_split=13,
                                      n_estimators=92, random_state=30533))]))
('6', Pipeline(steps=[('0',
                 RandomOverSampler(random_state=30533,
                                   sampling_strategy='minority')),
                ('1', SelectPercentile(percentile=89.92027512411046)),
                ('2', MinMaxScaler()),
                ('3',
                 ExtraTreesClassifier(class_weight='balanced',
                                      max_features='log2', min_samples_split=13,
                                      n_estimators=92, random_state=30533))]))
('7', Pipeline(steps=[('0',
                 SMOTE(k_neighbors=2, random_state=30533,
                       sampling_strategy='not majority')),
                ('1',
                 SGDClassifier(alpha=0.003629394043984267, average=True,
                               class_weight='balanced',
                               epsilon=0.019103478215901398,
                               eta0=0.0016910356240813311,
                               l1_ratio=7.600826230623983e-05,
                               power_t=0.6506895508414032, random_state=30533,
                               tol=0.00031379199540180623))]))
('8', Pipeline(steps=[('0', SelectPercentile(percentile=97.20642165460151)),
                ('1', SimpleImputer(strategy='most_frequent')),
                ('2',
                 RandomOverSampler(random_state=30533,
                                   sampling_strategy='minority')),
                ('3',
                 ExtraTreesClassifier(class_weight='balanced',
                                      max_features='log2', min_samples_split=13,
                                      n_estimators=92, random_state=30533))]))
('9', Pipeline(steps=[('0', SelectFwe(alpha=0.0032077729478993972)),
                ('1',
                 ExtraTreesClassifier(bootstrap=True,
                                      class_weight='balanced_subsample',
                                      max_features='sqrt', min_samples_leaf=3,
                                      min_samples_split=20, n_estimators=53,
                                      random_state=30533))]))

['POX', 'NUC', 'CYT', 'NUC', 'CYT', 'ME2', 'CYT', 'CYT', 'EXC', 'ME1', 'ME1', 'ME2', 'CYT', 'ME2', 'CYT', 'CYT', 'CYT', 'MIT', 'MIT', 'NUC', 'ME3', 'CYT', 'CYT', 'ME1', 'MIT', 'MIT', 'MIT', 'POX', 'ME3', 'NUC', 'ME1', 'ME3', 'CYT', 'CYT', 'CYT', 'POX', 'NUC', 'MIT', 'CYT', 'EXC', 'ME3', 'NUC', 'NUC', 'CYT', 'NUC', 'CYT', 'MIT', 'NUC', 'CYT', 'NUC', 'CYT', 'NUC', 'NUC', 'MIT', 'NUC', 'MIT', 'POX', 'NUC', 'CYT', 'ME1', 'ME1', 'MIT', 'MIT', 'ME3', 'MIT', 'MIT', 'MIT', 'EXC', 'CYT', 'ME3', 'EXC', 'VAC', 'CYT', 'ME2', 'CYT', 'MIT', 'EXC', 'EXC', 'CYT', 'CYT', 'CYT', 'CYT', 'ME3', 'POX', 'CYT', 'NUC', 'CYT', 'NUC', 'MIT', 'NUC', 'ME3', 'NUC', 'ME3', 'CYT', 'ME3', 'NUC', 'CYT', 'ME2', 'ME3', 'CYT', 'ME3', 'ME3', 'NUC', 'ME1', 'ERL', 'NUC', 'MIT', 'ME3', 'ME3', 'POX', 'ME3', 'ME2', 'ME1', 'CYT', 'ME3', 'ME3', 'ME2', 'NUC', 'NUC', 'NUC', 'MIT', 'ME3', 'MIT', 'CYT', 'ME3', 'NUC', 'NUC', 'NUC', 'ME3', 'CYT', 'CYT', 'NUC', 'ME2', 'ME2', 'NUC', 'NUC', 'MIT', 'NUC', 'NUC', 'CYT', 'NUC', 'MIT', 'NUC', 'CYT', 'CYT', 'CYT', 'MIT', 'MIT', 'ME3', 'NUC', 'CYT', 'NUC', 'MIT', 'MIT', 'MIT', 'NUC', 'CYT', 'ME3', 'ME3', 'CYT', 'MIT', 'MIT', 'CYT', 'MIT', 'CYT', 'NUC', 'ME1', 'ME3', 'NUC', 'MIT', 'ME2', 'NUC', 'ERL', 'MIT', 'ME3', 'ME2', 'ME2', 'NUC', 'NUC', 'NUC', 'ME3', 'ME3', 'ME2', 'CYT', 'NUC', 'NUC', 'ME3', 'ME2', 'CYT', 'MIT', 'MIT', 'MIT', 'MIT', 'CYT', 'CYT', 'MIT', 'ME3', 'NUC', 'NUC', 'MIT', 'CYT', 'NUC', 'NUC', 'NUC', 'MIT', 'MIT', 'MIT', 'MIT', 'CYT', 'NUC', 'MIT', 'MIT', 'MIT', 'ME3', 'MIT', 'NUC', 'CYT', 'MIT', 'CYT', 'MIT', 'ME3', 'NUC', 'NUC', 'EXC', 'ME3', 'MIT', 'NUC', 'ME3', 'CYT', 'ME2', 'NUC', 'CYT', 'EXC', 'NUC', 'ME2', 'ME3', 'ME1', 'CYT', 'NUC', 'CYT', 'MIT', 'CYT', 'CYT', 'CYT', 'ME3', 'ME3', 'NUC', 'POX', 'VAC', 'MIT', 'NUC', 'POX', 'MIT', 'CYT', 'EXC', 'CYT', 'NUC', 'ME3', 'MIT', 'ME1', 'ME2', 'ME3', 'NUC', 'NUC', 'CYT', 'CYT', 'ME3', 'CYT', 'ME2', 'MIT', 'CYT', 'NUC', 'CYT', 'MIT', 'NUC', 'CYT', 'NUC', 'NUC', 'CYT', 'MIT', 'MIT', 'MIT', 'NUC', 'CYT', 'ME3', 'CYT', 'ME2', 'CYT', 'NUC', 'CYT', 'MIT', 'NUC', 'NUC', 'MIT', 'ME3', 'NUC', 'MIT', 'CYT', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'NUC', 'ME3', 'CYT', 'CYT', 'NUC', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'MIT', 'CYT', 'MIT', 'NUC', 'MIT', 'CYT', 'CYT', 'CYT', 'MIT', 'MIT', 'CYT', 'MIT', 'MIT', 'MIT', 'EXC', 'ME3', 'NUC', 'CYT', 'CYT', 'NUC', 'MIT', 'ME3', 'ME3', 'CYT', 'ME1', 'NUC', 'MIT', 'MIT', 'NUC', 'CYT', 'CYT', 'ME3', 'CYT', 'NUC', 'CYT', 'ME3', 'ME3', 'NUC', 'MIT', 'ME3', 'CYT', 'CYT', 'ME3', 'MIT', 'NUC', 'NUC', 'CYT', 'CYT', 'MIT', 'CYT', 'CYT', 'NUC', 'CYT', 'MIT', 'NUC', 'CYT', 'ME3', 'ME3', 'EXC', 'ME3', 'ME1', 'NUC', 'MIT', 'NUC', 'NUC', 'ME1', 'NUC', 'CYT', 'CYT', 'MIT', 'MIT', 'CYT', 'CYT', 'CYT', 'NUC', 'NUC', 'NUC', 'CYT', 'MIT', 'NUC', 'NUC', 'NUC', 'NUC', 'CYT', 'ME1', 'ME1', 'CYT', 'NUC', 'CYT', 'CYT', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'ME3', 'CYT', 'CYT', 'CYT', 'ME1', 'CYT', 'ME2', 'NUC', 'ME1', 'CYT', 'ME3', 'POX', 'ME1', 'ME3', 'ME3', 'ME3', 'ME3', 'ME3', 'ME3', 'MIT', 'NUC', 'ME3', 'MIT', 'NUC', 'CYT', 'CYT', 'NUC', 'CYT', 'ME2']
{'accuracy_score': 0.5842696629213483, 'balanced_accuracy_score': 0.5837639987525669, 'macro_precision_score': 0.5424968306547254, 'macro_recall_score': 0.5253875988773102, 'macro_f1_score': 0.5131780145247393, 'micro_precision_score': 0.5842696629213483, 'micro_recall_score': 0.5842696629213483, 'micro_f1_score': 0.5842696629213483}
('0', Pipeline(steps=[('0',
                 ExtraTreesClassifier(class_weight='balanced',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=68,
                                      random_state=67949))]))
('1', Pipeline(steps=[('0', Normalizer(norm='max')),
                ('1', SimpleImputer(strategy='most_frequent')),
                ('2', SelectFwe(alpha=0.003093586928852427)),
                ('3',
                 ExtraTreesClassifier(class_weight='balanced',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=68,
                                      random_state=67949))]))
('2', Pipeline(steps=[('0', StandardScaler(with_std=False)),
                ('1', VarianceThreshold()),
                ('2',
                 FastICA(fun='exp', n_components=43, random_state=67949,
                         whiten=False)),
                ('3',
                 ExtraTreesClassifier(class_weight='balanced',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=68,
                                      random_state=67949))]))
('3', Pipeline(steps=[('0',
                 RandomForestClassifier(class_weight='balanced',
                                        max_features='log2', min_samples_leaf=2,
                                        min_samples_split=7, n_estimators=82,
                                        random_state=67949))]))
('4', Pipeline(steps=[('0', SelectFwe(alpha=0.0016429521341190013)),
                ('1',
                 FastICA(algorithm='deflation', n_components=53,
                         random_state=67949, whiten=False)),
                ('2',
                 ExtraTreesClassifier(class_weight='balanced_subsample',
                                      criterion='entropy', max_features='sqrt',
                                      min_samples_leaf=16, min_samples_split=6,
                                      n_estimators=65, random_state=67949))]))
('5', Pipeline(steps=[('0', SelectFwe(alpha=0.0016429521341190013)),
                ('1', Normalizer(norm='max')),
                ('2',
                 ExtraTreesClassifier(bootstrap=True, class_weight='balanced',
                                      criterion='entropy', max_features='sqrt',
                                      min_samples_leaf=3, min_samples_split=7,
                                      n_estimators=80, random_state=67949))]))
('6', Pipeline(steps=[('0', StandardScaler(with_mean=False)),
                ('1', Normalizer(norm='max')),
                ('2',
                 ExtraTreesClassifier(class_weight='balanced',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=68,
                                      random_state=67949))]))
('7', Pipeline(steps=[('0', SelectFwe(alpha=0.005267911691716285)),
                ('1', Normalizer(norm='max')),
                ('2', StandardScaler(with_mean=False, with_std=False)),
                ('3',
                 ExtraTreesClassifier(bootstrap=True, class_weight='balanced',
                                      criterion='entropy', max_features='sqrt',
                                      min_samples_leaf=3, min_samples_split=7,
                                      n_estimators=80, random_state=67949))]))
('8', Pipeline(steps=[('0', Normalizer(norm='max')), ('1', VarianceThreshold()),
                ('2', SelectFwe(alpha=0.003093586928852427)),
                ('3',
                 ExtraTreesClassifier(class_weight='balanced',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=68,
                                      random_state=67949))]))
('9', Pipeline(steps=[('0', SelectFwe(alpha=0.01782775924969331)),
                ('1', RobustScaler(with_scaling=False)),
                ('2', Normalizer(norm='max')),
                ('3',
                 ExtraTreesClassifier(class_weight='balanced',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=20, n_estimators=68,
                                      random_state=67949))]))

['POX', 'NUC', 'CYT', 'NUC', 'CYT', 'EXC', 'CYT', 'CYT', 'MIT', 'ME1', 'ME1', 'ME2', 'MIT', 'ME2', 'CYT', 'CYT', 'CYT', 'MIT', 'MIT', 'NUC', 'ME3', 'CYT', 'CYT', 'ME1', 'MIT', 'MIT', 'MIT', 'POX', 'ME3', 'MIT', 'ME1', 'ME3', 'CYT', 'CYT', 'CYT', 'POX', 'NUC', 'MIT', 'CYT', 'MIT', 'ME3', 'NUC', 'NUC', 'CYT', 'NUC', 'CYT', 'MIT', 'NUC', 'CYT', 'NUC', 'CYT', 'NUC', 'NUC', 'MIT', 'CYT', 'MIT', 'POX', 'NUC', 'CYT', 'ME1', 'ME1', 'MIT', 'MIT', 'ME3', 'MIT', 'MIT', 'MIT', 'EXC', 'CYT', 'NUC', 'EXC', 'EXC', 'CYT', 'ME2', 'CYT', 'MIT', 'EXC', 'EXC', 'CYT', 'CYT', 'CYT', 'CYT', 'ME3', 'POX', 'NUC', 'NUC', 'CYT', 'NUC', 'MIT', 'NUC', 'ME3', 'NUC', 'ME3', 'CYT', 'ME3', 'NUC', 'MIT', 'ME2', 'CYT', 'CYT', 'ME3', 'ME3', 'NUC', 'ME1', 'ERL', 'NUC', 'CYT', 'ME3', 'ME3', 'POX', 'ME3', 'ME1', 'ME1', 'CYT', 'ME3', 'ME3', 'ME1', 'CYT', 'NUC', 'NUC', 'MIT', 'ME3', 'MIT', 'NUC', 'ME3', 'CYT', 'NUC', 'CYT', 'ME3', 'CYT', 'CYT', 'NUC', 'ME2', 'ME2', 'NUC', 'NUC', 'MIT', 'MIT', 'CYT', 'CYT', 'NUC', 'MIT', 'NUC', 'CYT', 'CYT', 'CYT', 'MIT', 'MIT', 'ME3', 'NUC', 'CYT', 'NUC', 'MIT', 'MIT', 'MIT', 'NUC', 'CYT', 'ME3', 'ME3', 'CYT', 'MIT', 'MIT', 'CYT', 'MIT', 'CYT', 'NUC', 'ME1', 'ME3', 'NUC', 'MIT', 'ME1', 'NUC', 'ERL', 'MIT', 'ME3', 'ME2', 'ME2', 'NUC', 'NUC', 'ME3', 'ME3', 'ME3', 'ME2', 'CYT', 'NUC', 'NUC', 'ME3', 'ME2', 'CYT', 'MIT', 'CYT', 'MIT', 'MIT', 'CYT', 'CYT', 'MIT', 'ME3', 'NUC', 'NUC', 'MIT', 'CYT', 'NUC', 'NUC', 'NUC', 'MIT', 'MIT', 'CYT', 'MIT', 'CYT', 'CYT', 'MIT', 'MIT', 'MIT', 'ME3', 'MIT', 'NUC', 'CYT', 'MIT', 'CYT', 'MIT', 'ME3', 'NUC', 'ME3', 'ME2', 'ME3', 'MIT', 'NUC', 'ME3', 'CYT', 'ME2', 'NUC', 'CYT', 'EXC', 'NUC', 'ME2', 'ME3', 'ME1', 'CYT', 'NUC', 'CYT', 'MIT', 'CYT', 'CYT', 'CYT', 'ME3', 'ME3', 'CYT', 'CYT', 'NUC', 'MIT', 'NUC', 'POX', 'MIT', 'CYT', 'EXC', 'CYT', 'CYT', 'NUC', 'CYT', 'ME1', 'ME2', 'ME3', 'NUC', 'NUC', 'CYT', 'CYT', 'ME3', 'CYT', 'ME2', 'MIT', 'CYT', 'NUC', 'CYT', 'MIT', 'NUC', 'CYT', 'NUC', 'NUC', 'CYT', 'MIT', 'MIT', 'MIT', 'NUC', 'NUC', 'ME3', 'CYT', 'ME2', 'CYT', 'NUC', 'CYT', 'MIT', 'NUC', 'NUC', 'MIT', 'NUC', 'NUC', 'ME3', 'CYT', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'NUC', 'ME3', 'CYT', 'CYT', 'CYT', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'MIT', 'CYT', 'MIT', 'NUC', 'MIT', 'CYT', 'CYT', 'CYT', 'MIT', 'MIT', 'CYT', 'MIT', 'MIT', 'MIT', 'EXC', 'CYT', 'NUC', 'CYT', 'CYT', 'CYT', 'MIT', 'ME3', 'ME3', 'CYT', 'ME1', 'NUC', 'MIT', 'MIT', 'CYT', 'CYT', 'CYT', 'ME3', 'CYT', 'NUC', 'NUC', 'ME3', 'ME3', 'NUC', 'MIT', 'ME3', 'CYT', 'CYT', 'ME3', 'MIT', 'NUC', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'NUC', 'NUC', 'CYT', 'MIT', 'NUC', 'NUC', 'ME3', 'ME3', 'EXC', 'ME3', 'ME1', 'NUC', 'MIT', 'NUC', 'NUC', 'ME1', 'CYT', 'CYT', 'CYT', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'NUC', 'NUC', 'NUC', 'CYT', 'MIT', 'NUC', 'NUC', 'NUC', 'NUC', 'CYT', 'ME1', 'ME1', 'CYT', 'NUC', 'CYT', 'CYT', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'ME3', 'CYT', 'CYT', 'CYT', 'ME1', 'CYT', 'ME1', 'NUC', 'ME1', 'CYT', 'ME3', 'POX', 'ME2', 'ME3', 'ME3', 'ME3', 'ME3', 'ME3', 'ME3', 'MIT', 'NUC', 'ME3', 'MIT', 'NUC', 'CYT', 'CYT', 'NUC', 'CYT', 'ME2']
{'accuracy_score': 0.5842696629213483, 'balanced_accuracy_score': 0.5756430610137824, 'macro_precision_score': 0.4730932587249407, 'macro_recall_score': 0.5180787549124041, 'macro_f1_score': 0.4898538150826884, 'micro_precision_score': 0.5842696629213483, 'micro_recall_score': 0.5842696629213483, 'micro_f1_score': 0.5842696629213483}
('0', Pipeline(steps=[('0', MinMaxScaler()),
                ('1',
                 RBFSampler(gamma=0.6125109549442156, n_components=39,
                            random_state=8)),
                ('2', VarianceThreshold()),
                ('3',
                 ExtraTreesClassifier(bootstrap=True, class_weight='balanced',
                                      max_features='sqrt', min_samples_split=10,
                                      n_estimators=48, random_state=8))]))
('1', Pipeline(steps=[('0', SelectFwe(alpha=0.01533212694640895)),
                ('1', MinMaxScaler()),
                ('2',
                 SMOTE(k_neighbors=3, random_state=8,
                       sampling_strategy='not majority')),
                ('3',
                 ExtraTreesClassifier(bootstrap=True, class_weight='balanced',
                                      max_features='sqrt', min_samples_split=10,
                                      n_estimators=48, random_state=8))]))
('2', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1',
                 SMOTE(k_neighbors=3, random_state=8,
                       sampling_strategy='not majority')),
                ('2', SelectPercentile(percentile=74.26292924671887)),
                ('3',
                 ExtraTreesClassifier(class_weight='balanced_subsample',
                                      criterion='entropy', max_features='log2',
                                      min_samples_leaf=18, min_samples_split=13,
                                      n_estimators=36, random_state=8))]))
('3', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1',
                 RBFSampler(gamma=0.6125109549442156, n_components=39,
                            random_state=8)),
                ('2',
                 ExtraTreesClassifier(bootstrap=True, class_weight='balanced',
                                      max_features='sqrt', min_samples_split=10,
                                      n_estimators=48, random_state=8))]))
('4', Pipeline(steps=[('0',
                 ExtraTreesClassifier(bootstrap=True, class_weight='balanced',
                                      max_features='log2', min_samples_leaf=4,
                                      min_samples_split=13, n_estimators=87,
                                      random_state=8))]))
('5', Pipeline(steps=[('0', MinMaxScaler()),
                ('1',
                 RBFSampler(gamma=0.6125109549442156, n_components=39,
                            random_state=8)),
                ('2',
                 RandomForestClassifier(class_weight='balanced_subsample',
                                        criterion='entropy',
                                        max_features='log2', min_samples_leaf=8,
                                        min_samples_split=19, n_estimators=83,
                                        random_state=8))]))
('6', Pipeline(steps=[('0', MinMaxScaler()),
                ('1',
                 RBFSampler(gamma=0.6125109549442156, n_components=39,
                            random_state=8)),
                ('2',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        criterion='entropy',
                                        max_features='log2',
                                        min_samples_leaf=16,
                                        min_samples_split=3, n_estimators=58,
                                        random_state=8))]))
('7', Pipeline(steps=[('0', MinMaxScaler()),
                ('1', SelectFwe(alpha=0.010027097955737793)),
                ('2',
                 ExtraTreesClassifier(bootstrap=True,
                                      class_weight='balanced_subsample',
                                      max_features='log2', min_samples_leaf=3,
                                      min_samples_split=9, n_estimators=65,
                                      random_state=8))]))
('8', Pipeline(steps=[('0', KNNImputer(n_neighbors=7)),
                ('1',
                 SMOTE(k_neighbors=3, random_state=8,
                       sampling_strategy='not majority')),
                ('2', SelectPercentile(percentile=97.7631181493324)),
                ('3',
                 QuadraticDiscriminantAnalysis(reg_param=0.445707546728195))]))
('9', Pipeline(steps=[('0', MaxAbsScaler()), ('1', MinMaxScaler()),
                ('2', KNNImputer(n_neighbors=3)),
                ('3',
                 ExtraTreesClassifier(bootstrap=True, class_weight='balanced',
                                      max_features='log2', min_samples_leaf=4,
                                      min_samples_split=13, n_estimators=87,
                                      random_state=8))]))

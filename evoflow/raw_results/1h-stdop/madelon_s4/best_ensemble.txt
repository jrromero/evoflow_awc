['-1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '1', '-1', '-1', '-1', '-1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '1', '-1', '-1', '-1', '1', '1', '-1', '1', '-1', '1', '-1', '-1', '1', '1', '1', '-1', '-1', '1', '1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '1', '1', '1', '1', '1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '1', '1', '1', '1', '1', '1', '1', '-1', '1', '1', '-1', '1', '-1', '-1', '-1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '1', '1', '-1', '-1', '1', '-1', '-1', '1', '1', '-1', '-1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '1', '-1', '1', '1', '-1', '-1', '1', '1', '1', '-1', '1', '-1', '1', '1', '1', '-1', '1', '1', '1', '1', '-1', '1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '1', '1', '1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '-1', '1', '-1', '1', '1', '-1', '1', '-1', '-1', '1', '-1', '-1', '1', '1', '1', '1', '1', '1', '-1', '1', '1', '1', '-1', '1', '1', '1', '-1', '1', '-1', '1', '-1', '-1', '1', '1', '1', '-1', '1', '-1', '-1', '1', '-1', '1', '-1', '-1', '-1', '1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '1', '-1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '-1', '1', '1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '1', '1', '-1', '1', '-1', '1', '1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '1', '1', '1', '1', '-1', '1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '1', '1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '-1', '1', '1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '-1', '1', '1', '-1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '-1', '-1', '1', '1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '1', '1', '-1', '-1', '1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '1', '-1', '1', '-1', '1', '1', '-1', '-1', '1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '-1', '1', '-1', '1', '1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '-1', '1', '1', '-1', '1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '1', '-1', '1', '1', '-1', '1', '-1', '-1', '1', '-1', '1', '1', '-1', '-1', '-1', '1', '-1', '1', '1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '1', '1', '1', '1', '1', '-1', '-1', '-1', '1', '1', '1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '1', '1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '1', '1', '-1', '-1', '1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '1', '1', '-1', '1', '-1']
{'accuracy_score': 0.8564102564102564, 'balanced_accuracy_score': 0.8566826215022092, 'macro_precision_score': 0.8604651162790697, 'macro_recall_score': 0.8566826215022092, 'macro_f1_score': 0.8560686441850811, 'micro_precision_score': 0.8564102564102564, 'micro_recall_score': 0.8564102564102564, 'micro_f1_score': 0.8564102564102564}
('0', Pipeline(steps=[('0', SimpleImputer(strategy='median')),
                ('1', FeatureAgglomeration(linkage='complete', n_clusters=20)),
                ('2', KNeighborsClassifier(n_neighbors=6, weights='distance'))]))
('1', Pipeline(steps=[('0', FeatureAgglomeration(linkage='complete', n_clusters=20)),
                ('1',
                 RandomUnderSampler(random_state=4,
                                    sampling_strategy='not majority')),
                ('2', SMOTETomek(random_state=4, sampling_strategy='minority')),
                ('3', KNeighborsClassifier(n_neighbors=2, p=1))]))
('2', Pipeline(steps=[('0', FeatureAgglomeration(linkage='complete', n_clusters=20)),
                ('1',
                 RandomUnderSampler(random_state=4,
                                    sampling_strategy='not majority')),
                ('2', SMOTETomek(random_state=4, sampling_strategy='minority')),
                ('3', KNeighborsClassifier(n_neighbors=21, p=1))]))
('3', Pipeline(steps=[('0', FeatureAgglomeration(linkage='complete', n_clusters=20)),
                ('1', KNeighborsClassifier(n_neighbors=21, p=1))]))
('4', Pipeline(steps=[('0',
                 FeatureAgglomeration(affinity='cosine', linkage='complete',
                                      n_clusters=8)),
                ('1',
                 RandomUnderSampler(random_state=4,
                                    sampling_strategy='not majority')),
                ('2', SMOTETomek(random_state=4, sampling_strategy='minority')),
                ('3', KNeighborsClassifier(n_neighbors=2, p=1))]))
('5', Pipeline(steps=[('0', FeatureAgglomeration(linkage='complete', n_clusters=20)),
                ('1',
                 RandomUnderSampler(random_state=4,
                                    sampling_strategy='not majority')),
                ('2', SMOTETomek(random_state=4, sampling_strategy='minority')),
                ('3', KNeighborsClassifier(n_neighbors=39, p=1))]))
('6', Pipeline(steps=[('0',
                 RandomUnderSampler(random_state=4, replacement=True,
                                    sampling_strategy='not majority')),
                ('1',
                 FeatureAgglomeration(affinity='manhattan', linkage='average',
                                      n_clusters=16)),
                ('2', MaxAbsScaler()),
                ('3', KNeighborsClassifier(n_neighbors=21, p=1))]))
('7', Pipeline(steps=[('0',
                 RandomUnderSampler(random_state=4, replacement=True,
                                    sampling_strategy='not majority')),
                ('1',
                 FeatureAgglomeration(affinity='manhattan', linkage='average',
                                      n_clusters=16)),
                ('2', MaxAbsScaler()),
                ('3', KNeighborsClassifier(n_neighbors=6, weights='distance'))]))
('8', Pipeline(steps=[('0', FeatureAgglomeration(linkage='complete', n_clusters=20)),
                ('1',
                 RandomUnderSampler(random_state=4,
                                    sampling_strategy='not majority')),
                ('2', KNeighborsClassifier(n_neighbors=39, p=1))]))
('9', Pipeline(steps=[('0', FeatureAgglomeration(linkage='complete', n_clusters=20)),
                ('1',
                 RandomUnderSampler(random_state=4,
                                    sampling_strategy='not majority')),
                ('2', SMOTETomek(random_state=4, sampling_strategy='minority')),
                ('3', KNeighborsClassifier(n_neighbors=37))]))

['0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '2', '2', '2', '2', '2', '2', '2', '3', '1', '3', '3', '1', '4', '4', '4', '4', '4', '5', '5', '5', '5', '5', '5', '6', '6', '6', '6', '6', '6', '7', '7', '7', '7', '7', '8', '8', '8', '8', '9', '9', '4', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '2', '2', '2', '2', '3', '3', '7', '3', '3', '3', '3', '3', '6', '1', '4', '4', '4', '4', '4', '4', '5', '5', '5', '5', '6', '1', '6', '6', '1', '7', '7', '7', '7', '7', '7', '7', '8', '8', '8', '8', '9', '9', '9', '4', '0', '0', '5', '0', '2', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '7', '1', '9', '9', '3', '3', '3', '3', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '5', '5', '5', '5', '5', '5', '6', '6', '6', '6', '6', '6', '6', '7', '7', '7', '7', '7', '8', '8', '8', '8', '8', '7', '8', '0', '9', '9', '9', '9', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '2', '8', '2', '2', '2', '2', '2', '2', '2', '5', '3', '3', '3', '3', '3', '5', '4', '4', '1', '4', '4', '1', '4', '4', '4', '4', '5', '5', '6', '6', '6', '6', '6', '6', '6', '6', '7', '7', '7', '7', '7', '7', '7', '7', '8', '8', '8', '8', '8', '9', '9', '0', '9', '9', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '7', '4', '1', '1', '1', '1', '1', '1', '1', '2', '2', '2', '2', '2', '2', '2', '2', '2', '2', '2', '2', '3', '3', '2', '3', '3', '3', '3', '3', '4', '4', '4', '4', '4', '4', '4', '4', '4', '5', '5', '5', '5', '5', '5', '5', '5', '5', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '8', '8', '8', '8', '8', '8', '8', '8', '8', '0', '8', '8', '8', '9', '9', '9', '2', '9', '9', '9', '9', '9', '8', '0', '0', '0', '0', '0', '0', '0', '5', '0', '0', '0', '1', '1', '1', '1', '1', '2', '1', '1', '1', '1', '1', '1', '9', '2', '2', '4', '2', '4', '2', '2', '2', '3', '3', '3', '3', '3', '3', '3', '3', '3', '3', '4', '4', '1', '4', '4', '4', '4', '4', '4', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '6', '6', '6', '6', '6', '6', '0', '6', '6', '6', '6', '6', '6', '7', '7', '7', '7', '1', '7', '7', '7', '7', '7', '7', '7', '7', '8', '8', '8', '8', '8', '8', '8', '9', '8', '8', '3', '8', '8', '9', '9', '9', '9', '9', '9', '9', '9', '9', '3', '9']
{'accuracy_score': 0.9140461215932913, 'balanced_accuracy_score': 0.9114074165039676, 'macro_precision_score': 0.9137632729555527, 'macro_recall_score': 0.9114074165039676, 'macro_f1_score': 0.9119651175226572, 'micro_precision_score': 0.9140461215932913, 'micro_recall_score': 0.9140461215932913, 'micro_f1_score': 0.9140461215932913}
('0', Pipeline(steps=[('0', StandardScaler(with_std=False)),
                ('1', PCA(n_components=0.6102638295515228, random_state=75549)),
                ('2', KNeighborsClassifier(n_neighbors=6, weights='distance'))]))
('1', Pipeline(steps=[('0', MinMaxScaler()),
                ('1', PCA(n_components=0.6102638295515228, random_state=75549)),
                ('2', KNeighborsClassifier(n_neighbors=6, weights='distance'))]))
('2', Pipeline(steps=[('0', VarianceThreshold()),
                ('1', PCA(n_components=0.6102638295515228, random_state=75549)),
                ('2', KNeighborsClassifier(n_neighbors=6, weights='distance'))]))
('3', Pipeline(steps=[('0', RobustScaler()),
                ('1',
                 MLPClassifier(activation='tanh', alpha=0.07107457169927081,
                               learning_rate_init=0.6166438105570553,
                               random_state=75549, solver='sgd'))]))
('4', Pipeline(steps=[('0', StandardScaler(with_std=False)),
                ('1',
                 MLPClassifier(activation='tanh', alpha=0.00015402401295918744,
                               learning_rate_init=0.01764908999933876,
                               random_state=75549, solver='sgd'))]))
('5', Pipeline(steps=[('0', RobustScaler()),
                ('1',
                 SMOTE(random_state=75549, sampling_strategy='not majority')),
                ('2',
                 MLPClassifier(activation='logistic',
                               alpha=0.002650457723889477,
                               learning_rate_init=0.1812540989024773,
                               random_state=75549, solver='sgd'))]))
('6', Pipeline(steps=[('0',
                 RandomOverSampler(random_state=75549,
                                   sampling_strategy='not majority')),
                ('1', VarianceThreshold()), ('2', MaxAbsScaler()),
                ('3',
                 ExtraTreesClassifier(class_weight='balanced_subsample',
                                      max_features='log2', min_samples_leaf=3,
                                      min_samples_split=6, n_estimators=63,
                                      random_state=75549))]))
('7', Pipeline(steps=[('0', StandardScaler(with_std=False)),
                ('1',
                 MLPClassifier(activation='tanh', alpha=0.000102391683045467,
                               learning_rate_init=0.03558640134287602,
                               random_state=75549, solver='sgd'))]))
('8', Pipeline(steps=[('0', MinMaxScaler()), ('1', VarianceThreshold()),
                ('2',
                 SMOTE(k_neighbors=4, random_state=75549,
                       sampling_strategy='not minority')),
                ('3', MaxAbsScaler()),
                ('4',
                 MLPClassifier(activation='logistic', alpha=0.08773314934461589,
                               learning_rate_init=0.0037208519740794597,
                               random_state=75549, solver='lbfgs'))]))
('9', Pipeline(steps=[('0', StandardScaler(with_std=False)),
                ('1', Normalizer(norm='max')),
                ('2',
                 MLPClassifier(activation='tanh', alpha=0.00015402401295918744,
                               learning_rate_init=0.01764908999933876,
                               random_state=75549, solver='sgd'))]))

['1', '0', '0', '0', '0', '1', '1', '0', '1', '0', '0', '0', '1', '1', '1', '0', '1', '1', '0', '1', '1', '0', '1', '1', '1', '0', '0', '1', '0', '0', '1', '1', '0', '1', '0', '0', '1', '0', '0', '1', '1', '0', '1', '1', '1', '0', '0', '0', '0', '1', '0', '1', '1', '0', '0', '0', '1', '1', '0', '0', '0', '1', '1', '0', '0', '1', '0', '1', '1', '1', '1', '1', '0', '0', '1', '1', '1', '1', '1', '1', '0', '1', '1', '1', '0', '1', '0', '0', '0', '1', '1', '0', '1', '1', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', '0', '1', '1', '0', '1', '0', '1', '0', '1', '1', '0', '1', '1', '1', '1', '1', '1', '1', '0', '0', '0', '1', '0', '0', '1', '1', '1', '1', '1', '0', '1', '0', '0', '0', '1', '1', '0', '0', '1', '1', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', '0', '1', '0', '1', '1', '0', '0', '0', '1', '1', '0', '0', '1', '0', '0', '0', '1', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '1', '0', '0', '1', '0', '0', '1', '1', '1', '1', '1', '0', '1', '1', '0', '0', '1', '0', '0', '1', '1', '1', '1', '0', '1', '0', '0', '1', '1', '1', '0', '0', '1', '0', '1', '0', '0', '0', '1', '0', '0', '0', '1', '1', '1', '0', '0', '1', '1', '0', '1', '1', '0', '0', '1', '0', '1', '1', '1', '0', '0', '1', '0', '1', '0', '0', '1', '1', '0', '0', '1', '1', '1', '0', '1', '0', '0', '0', '0', '1', '0', '1', '1', '0', '0', '1', '1', '1', '0', '1', '0', '0', '1', '1', '1', '1', '0', '1', '1', '1', '1', '1', '0', '0', '1', '0', '1', '0', '0', '1', '0', '1', '0', '1', '0', '1', '0', '0', '0', '0', '0', '1', '1', '0', '1', '0', '0', '0', '0', '1', '1', '0', '1', '1', '1', '1', '1', '0', '1', '0', '1', '1', '1', '0', '1', '0', '1', '1', '1', '1', '1', '1', '1', '0', '0', '1', '0', '0', '1', '0', '1', '1', '0', '0', '0', '0', '1', '0', '1', '1', '0', '0', '0', '0', '0', '1', '0', '0', '1', '1', '0', '0', '1', '0', '0', '1', '0', '0', '1', '0', '1', '1', '0', '1', '0', '0', '0', '1', '1', '0', '0', '1', '0', '0', '0', '1', '0', '0', '1', '1', '1', '0', '1', '1']
{'accuracy_score': 1.0, 'balanced_accuracy_score': 1.0, 'macro_precision_score': 1.0, 'macro_recall_score': 1.0, 'macro_f1_score': 1.0, 'micro_precision_score': 1.0, 'micro_recall_score': 1.0, 'micro_f1_score': 1.0}
('0', Pipeline(steps=[('0', Normalizer()),
                ('1', KNeighborsClassifier(n_neighbors=2))]))
('1', Pipeline(steps=[('0', Normalizer(norm='max')),
                ('1', KNeighborsClassifier(n_neighbors=2))]))
('2', Pipeline(steps=[('0',
                 RandomOverSampler(random_state=0,
                                   sampling_strategy='not majority')),
                ('1', Normalizer()), ('2', MaxAbsScaler()),
                ('3', KNeighborsClassifier(n_neighbors=4, weights='distance'))]))
('3', Pipeline(steps=[('0', Normalizer()),
                ('1', KNeighborsClassifier(p=1, weights='distance'))]))
('4', Pipeline(steps=[('0', MinMaxScaler()),
                ('1', KNNImputer(n_neighbors=10, weights='distance')),
                ('2', Normalizer(norm='max')),
                ('3',
                 LogisticRegression(C=13.132837104682535,
                                    class_weight='balanced', random_state=0))]))
('5', Pipeline(steps=[('0', Normalizer()),
                ('1', KNeighborsClassifier(n_neighbors=4, weights='distance'))]))
('6', Pipeline(steps=[('0', Normalizer(norm='max')),
                ('1', KNeighborsClassifier(n_neighbors=11))]))
('7', Pipeline(steps=[('0', Normalizer(norm='max')),
                ('1', KNeighborsClassifier(n_neighbors=1, weights='distance'))]))
('8', Pipeline(steps=[('0',
                 RandomOverSampler(random_state=0,
                                   sampling_strategy='not majority')),
                ('1', Normalizer(norm='l1')), ('2', MaxAbsScaler()),
                ('3', KNeighborsClassifier(n_neighbors=2))]))
('9', Pipeline(steps=[('0', Normalizer(norm='max')),
                ('1', KNeighborsClassifier(n_neighbors=1))]))

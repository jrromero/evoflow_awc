
{'accuracy_score': 1.0, 'balanced_accuracy_score': 1.0, 'macro_precision_score': 1.0, 'macro_recall_score': 1.0, 'macro_f1_score': 1.0, 'micro_precision_score': 1.0, 'micro_recall_score': 1.0, 'micro_f1_score': 1.0}
('0', Pipeline(steps=[('0', SimpleImputer()), ('1', Normalizer(norm='l1')),
                ('2', KNNImputer(n_neighbors=8, weights='distance')),
                ('3',
                 KNeighborsClassifier(n_neighbors=13, p=1,
                                      weights='distance'))]))
('1', Pipeline(steps=[('0', Normalizer(norm='max')), ('1', VarianceThreshold()),
                ('2', SelectFwe(alpha=0.0020127175011516265)),
                ('3',
                 AdaBoostClassifier(learning_rate=0.41782864910310535,
                                    n_estimators=85, random_state=6))]))
('2', Pipeline(steps=[('0', Normalizer(norm='max')),
                ('1',
                 RBFSampler(gamma=0.0018285544755520626, n_components=72,
                            random_state=6)),
                ('2', SelectFwe(alpha=0.0020127175011516265)),
                ('3',
                 AdaBoostClassifier(learning_rate=0.41782864910310535,
                                    n_estimators=85, random_state=6))]))
('3', Pipeline(steps=[('0', SimpleImputer()), ('1', Normalizer(norm='l1')),
                ('2',
                 SMOTE(k_neighbors=2, random_state=6,
                       sampling_strategy='not minority')),
                ('3',
                 KNeighborsClassifier(n_neighbors=13, p=1,
                                      weights='distance'))]))
('4', Pipeline(steps=[('0', Normalizer(norm='max')), ('1', VarianceThreshold()),
                ('2', KNeighborsClassifier(n_neighbors=4, weights='distance'))]))
('5', Pipeline(steps=[('0', SimpleImputer()), ('1', Normalizer(norm='l1')),
                ('2',
                 SMOTE(k_neighbors=2, random_state=6,
                       sampling_strategy='not minority')),
                ('3', KNeighborsClassifier(n_neighbors=4, weights='distance'))]))
('6', Pipeline(steps=[('0', SimpleImputer()), ('1', Normalizer(norm='max')),
                ('2', VarianceThreshold()),
                ('3', KNeighborsClassifier(n_neighbors=4, weights='distance'))]))
('7', Pipeline(steps=[('0', Normalizer(norm='max')), ('1', MinMaxScaler()),
                ('2', VarianceThreshold()),
                ('3', KNeighborsClassifier(n_neighbors=4, weights='distance'))]))
('8', Pipeline(steps=[('0', Normalizer(norm='max')), ('1', SimpleImputer()),
                ('2', KNeighborsClassifier(n_neighbors=4, weights='distance'))]))
('9', Pipeline(steps=[('0', SimpleImputer()), ('1', Normalizer(norm='l1')),
                ('2', VarianceThreshold()),
                ('3', KNeighborsClassifier(n_neighbors=4, weights='distance'))]))

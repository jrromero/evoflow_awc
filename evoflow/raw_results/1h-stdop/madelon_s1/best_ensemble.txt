['-1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '1', '-1', '-1', '-1', '-1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '1', '1', '1', '1', '-1', '-1', '1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '1', '1', '1', '1', '1', '1', '1', '-1', '1', '1', '-1', '1', '-1', '-1', '-1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '1', '1', '-1', '-1', '1', '-1', '-1', '1', '1', '-1', '-1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '1', '1', '-1', '-1', '1', '1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '1', '-1', '1', '1', '1', '-1', '1', '1', '1', '-1', '1', '-1', '1', '1', '1', '-1', '1', '1', '1', '1', '-1', '1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '1', '1', '1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '-1', '1', '-1', '1', '1', '-1', '1', '-1', '-1', '1', '-1', '-1', '1', '1', '1', '1', '1', '1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '1', '-1', '1', '-1', '-1', '1', '1', '1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '-1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '-1', '1', '1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '1', '1', '-1', '1', '-1', '1', '1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '1', '-1', '1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '1', '-1', '1', '1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '-1', '1', '1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '1', '1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '1', '-1', '-1', '1', '1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '1', '-1', '1', '1', '-1', '-1', '1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '1', '-1', '1', '-1', '1', '1', '-1', '-1', '1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '1', '1', '-1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '-1', '1', '-1', '1', '-1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '1', '1', '-1', '-1', '1', '1', '-1', '-1', '-1', '1', '1', '-1', '1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '1', '-1', '1', '1', '-1', '1', '-1', '-1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '1', '1', '1', '1', '1', '-1', '-1', '-1', '1', '1', '-1', '-1', '1', '-1', '-1', '1', '1', '-1', '-1', '1', '-1', '1', '1', '1', '-1', '1', '-1', '1', '1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '1', '1', '-1', '1', '-1']
{'accuracy_score': 0.8448717948717949, 'balanced_accuracy_score': 0.8451635808962761, 'macro_precision_score': 0.8494020006522419, 'macro_recall_score': 0.8451635808962761, 'macro_f1_score': 0.8444419904436815, 'micro_precision_score': 0.8448717948717949, 'micro_recall_score': 0.8448717948717949, 'micro_f1_score': 0.844871794871795}
('0', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1',
                 RandomUnderSampler(random_state=1,
                                    sampling_strategy='not majority')),
                ('2', FeatureAgglomeration(linkage='complete', n_clusters=22)),
                ('3', KNeighborsClassifier(n_neighbors=1, p=1))]))
('1', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1',
                 RandomUnderSampler(random_state=1,
                                    sampling_strategy='not majority')),
                ('2', FeatureAgglomeration(linkage='complete', n_clusters=22)),
                ('3',
                 KNeighborsClassifier(n_neighbors=28, p=1,
                                      weights='distance'))]))
('2', Pipeline(steps=[('0', VarianceThreshold()),
                ('1', FeatureAgglomeration(linkage='complete', n_clusters=22)),
                ('2', KNeighborsClassifier(n_neighbors=1, p=1))]))
('3', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1',
                 RandomUnderSampler(random_state=1,
                                    sampling_strategy='not majority')),
                ('2', FeatureAgglomeration(linkage='complete', n_clusters=22)),
                ('3',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        criterion='entropy',
                                        max_features='log2',
                                        min_samples_leaf=13,
                                        min_samples_split=19, n_estimators=77,
                                        random_state=1))]))
('4', Pipeline(steps=[('0', SelectPercentile(percentile=21.513367047672407)),
                ('1', KNeighborsClassifier(n_neighbors=21))]))
('5', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1',
                 RandomUnderSampler(random_state=1,
                                    sampling_strategy='not majority')),
                ('2', FeatureAgglomeration(linkage='complete', n_clusters=22)),
                ('3',
                 ExtraTreesClassifier(criterion='entropy', max_features='sqrt',
                                      min_samples_leaf=8, min_samples_split=8,
                                      random_state=1))]))
('6', Pipeline(steps=[('0',
                 Nystroem(coef0=-0.747448052727745, degree=2,
                          gamma=0.00019454190287504971, kernel='cosine',
                          n_components=62, random_state=1)),
                ('1',
                 KNeighborsClassifier(n_neighbors=14, weights='distance'))]))
('7', Pipeline(steps=[('0',
                 Nystroem(coef0=-0.747448052727745, degree=2,
                          gamma=0.00019454190287504971, kernel='cosine',
                          n_components=62, random_state=1)),
                ('1', MinMaxScaler()), ('2', KNeighborsClassifier(p=1))]))
('8', Pipeline(steps=[('0', SelectFwe(alpha=0.036162043151805)),
                ('1',
                 KNeighborsClassifier(n_neighbors=38, weights='distance'))]))
('9', Pipeline(steps=[('0', KNNImputer(n_neighbors=8)),
                ('1', FeatureAgglomeration(linkage='complete', n_clusters=22)),
                ('2',
                 ExtraTreesClassifier(criterion='entropy', max_features='sqrt',
                                      min_samples_leaf=8, min_samples_split=8,
                                      random_state=1))]))

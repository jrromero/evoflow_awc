['0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '2', '2', '2', '2', '2', '2', '2', '3', '1', '3', '3', '1', '4', '4', '4', '4', '4', '5', '5', '5', '5', '5', '5', '6', '6', '6', '6', '6', '6', '7', '7', '7', '7', '7', '8', '8', '8', '8', '8', '9', '4', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '2', '2', '2', '2', '3', '3', '7', '3', '3', '3', '3', '3', '6', '1', '4', '4', '4', '4', '4', '4', '5', '5', '5', '5', '6', '6', '6', '6', '1', '7', '7', '7', '7', '7', '7', '7', '8', '8', '8', '8', '9', '9', '9', '4', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '2', '9', '3', '3', '3', '3', '4', '4', '4', '4', '4', '1', '4', '4', '4', '4', '5', '5', '5', '5', '5', '5', '6', '6', '6', '6', '6', '6', '6', '7', '7', '7', '7', '7', '8', '8', '8', '8', '8', '7', '8', '8', '9', '9', '9', '9', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '2', '2', '2', '2', '2', '2', '2', '2', '2', '5', '3', '3', '3', '3', '3', '5', '4', '4', '2', '4', '4', '1', '4', '4', '4', '4', '5', '5', '6', '6', '6', '6', '6', '6', '6', '6', '4', '7', '7', '7', '7', '7', '7', '7', '8', '8', '8', '8', '8', '9', '9', '8', '9', '9', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '4', '1', '1', '1', '1', '1', '1', '1', '2', '2', '2', '2', '2', '2', '2', '2', '2', '2', '2', '2', '3', '3', '3', '3', '3', '3', '3', '3', '4', '4', '4', '4', '4', '4', '4', '4', '4', '5', '5', '5', '5', '5', '5', '5', '3', '5', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '8', '8', '8', '8', '8', '8', '8', '8', '8', '8', '8', '8', '8', '5', '9', '9', '2', '9', '9', '9', '9', '9', '8', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '2', '2', '4', '2', '4', '2', '2', '2', '3', '3', '3', '3', '3', '3', '3', '3', '3', '3', '4', '4', '4', '4', '4', '4', '4', '4', '4', '5', '5', '5', '5', '5', '9', '5', '5', '5', '5', '5', '5', '5', '5', '6', '6', '6', '6', '6', '6', '0', '6', '6', '6', '6', '6', '6', '7', '7', '7', '7', '1', '7', '7', '7', '7', '7', '7', '7', '7', '1', '8', '8', '8', '8', '8', '8', '9', '8', '8', '3', '8', '8', '9', '9', '9', '9', '9', '9', '9', '9', '9', '3', '9']
{'accuracy_score': 0.9329140461215933, 'balanced_accuracy_score': 0.9278629059746549, 'macro_precision_score': 0.9329522911102741, 'macro_recall_score': 0.9278629059746549, 'macro_f1_score': 0.9296983932829669, 'micro_precision_score': 0.9329140461215933, 'micro_recall_score': 0.9329140461215933, 'micro_f1_score': 0.9329140461215933}
('0', Pipeline(steps=[('0',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        criterion='entropy',
                                        max_features='log2', n_estimators=42,
                                        random_state=7))]))
('1', Pipeline(steps=[('0',
                 SMOTE(k_neighbors=2, random_state=7,
                       sampling_strategy='not majority')),
                ('1',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        criterion='entropy',
                                        max_features='log2', n_estimators=42,
                                        random_state=7))]))
('2', Pipeline(steps=[('0', SelectFwe(alpha=0.0012703174338070684)),
                ('1', MaxAbsScaler()),
                ('2', SimpleImputer(strategy='most_frequent')),
                ('3',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        criterion='entropy',
                                        max_features='log2', n_estimators=42,
                                        random_state=7))]))
('3', Pipeline(steps=[('0', StandardScaler()),
                ('1',
                 MLPClassifier(activation='logistic', alpha=0.04100530811265877,
                               learning_rate_init=0.0016238422809657478,
                               random_state=7))]))
('4', Pipeline(steps=[('0', VarianceThreshold()), ('1', MinMaxScaler()),
                ('2', StandardScaler(with_mean=False, with_std=False)),
                ('3',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        criterion='entropy',
                                        max_features='log2', n_estimators=42,
                                        random_state=7))]))
('5', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1', StandardScaler(with_mean=False, with_std=False)),
                ('2',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        criterion='entropy',
                                        max_features='log2', n_estimators=42,
                                        random_state=7))]))
('6', Pipeline(steps=[('0', Normalizer()),
                ('1',
                 FastICA(fun='cube', n_components=82, random_state=7,
                         whiten=False)),
                ('2',
                 MLPClassifier(activation='logistic', alpha=0.07601009732149246,
                               learning_rate_init=0.001026893505948549,
                               random_state=7, solver='lbfgs'))]))
('7', Pipeline(steps=[('0',
                 SMOTE(k_neighbors=2, random_state=7,
                       sampling_strategy='not majority')),
                ('1', SelectFwe(alpha=0.0012703174338070684)),
                ('2',
                 MLPClassifier(activation='tanh', alpha=0.05073202278059812,
                               learning_rate_init=0.001416748402089282,
                               random_state=7))]))
('8', Pipeline(steps=[('0', RobustScaler(with_centering=False)),
                ('1',
                 MLPClassifier(activation='tanh', alpha=0.07960576675413326,
                               learning_rate_init=0.10855965060841084,
                               random_state=7, solver='lbfgs'))]))
('9', Pipeline(steps=[('0',
                 MLPClassifier(activation='tanh', alpha=0.07960576675413326,
                               learning_rate_init=0.10855965060841084,
                               random_state=7, solver='lbfgs'))]))

['POX', 'NUC', 'CYT', 'CYT', 'CYT', 'EXC', 'CYT', 'CYT', 'EXC', 'ME1', 'ME1', 'ME2', 'MIT', 'ME2', 'CYT', 'CYT', 'CYT', 'MIT', 'MIT', 'NUC', 'VAC', 'CYT', 'CYT', 'ME1', 'MIT', 'MIT', 'MIT', 'POX', 'ME3', 'MIT', 'ME1', 'ME3', 'CYT', 'CYT', 'VAC', 'POX', 'NUC', 'MIT', 'CYT', 'MIT', 'ME3', 'CYT', 'NUC', 'CYT', 'NUC', 'CYT', 'MIT', 'NUC', 'CYT', 'NUC', 'CYT', 'NUC', 'NUC', 'MIT', 'NUC', 'MIT', 'POX', 'NUC', 'CYT', 'ME1', 'ME1', 'MIT', 'MIT', 'ME3', 'MIT', 'MIT', 'MIT', 'EXC', 'CYT', 'NUC', 'EXC', 'VAC', 'CYT', 'ME2', 'CYT', 'MIT', 'EXC', 'EXC', 'MIT', 'CYT', 'CYT', 'CYT', 'ME3', 'POX', 'CYT', 'NUC', 'NUC', 'NUC', 'MIT', 'CYT', 'ME3', 'NUC', 'ME3', 'CYT', 'ME3', 'NUC', 'MIT', 'ME2', 'VAC', 'CYT', 'NUC', 'ME3', 'NUC', 'ME1', 'ERL', 'NUC', 'CYT', 'ME3', 'ME3', 'POX', 'ME3', 'ME1', 'ME1', 'CYT', 'ME3', 'ME3', 'ME1', 'NUC', 'NUC', 'NUC', 'MIT', 'ME3', 'NUC', 'NUC', 'ME3', 'CYT', 'NUC', 'CYT', 'NUC', 'CYT', 'CYT', 'NUC', 'CYT', 'ME2', 'NUC', 'NUC', 'MIT', 'MIT', 'CYT', 'CYT', 'NUC', 'MIT', 'NUC', 'CYT', 'CYT', 'CYT', 'MIT', 'MIT', 'ME3', 'NUC', 'CYT', 'NUC', 'MIT', 'MIT', 'MIT', 'NUC', 'CYT', 'ME3', 'ME3', 'CYT', 'MIT', 'MIT', 'CYT', 'MIT', 'CYT', 'NUC', 'ME1', 'ME3', 'NUC', 'MIT', 'ME1', 'NUC', 'ERL', 'MIT', 'ME3', 'ME2', 'ME2', 'NUC', 'NUC', 'NUC', 'ME3', 'ME3', 'ME2', 'CYT', 'NUC', 'NUC', 'ME3', 'ME2', 'CYT', 'MIT', 'CYT', 'MIT', 'MIT', 'ME3', 'MIT', 'MIT', 'ME3', 'NUC', 'NUC', 'MIT', 'CYT', 'NUC', 'NUC', 'NUC', 'MIT', 'MIT', 'ME3', 'MIT', 'CYT', 'CYT', 'MIT', 'MIT', 'MIT', 'ME3', 'MIT', 'NUC', 'MIT', 'MIT', 'CYT', 'CYT', 'ME3', 'NUC', 'NUC', 'VAC', 'ME3', 'MIT', 'NUC', 'ME3', 'CYT', 'ME2', 'NUC', 'VAC', 'EXC', 'NUC', 'ME2', 'ME3', 'ME2', 'CYT', 'NUC', 'CYT', 'MIT', 'CYT', 'CYT', 'CYT', 'NUC', 'ME3', 'NUC', 'CYT', 'NUC', 'MIT', 'NUC', 'POX', 'MIT', 'CYT', 'EXC', 'CYT', 'CYT', 'NUC', 'CYT', 'ME1', 'ME2', 'ME3', 'NUC', 'NUC', 'CYT', 'CYT', 'ME3', 'CYT', 'ME2', 'MIT', 'CYT', 'NUC', 'VAC', 'MIT', 'NUC', 'CYT', 'NUC', 'NUC', 'CYT', 'MIT', 'MIT', 'MIT', 'NUC', 'CYT', 'ME3', 'CYT', 'ME2', 'CYT', 'NUC', 'CYT', 'MIT', 'NUC', 'NUC', 'MIT', 'NUC', 'NUC', 'ME3', 'CYT', 'NUC', 'CYT', 'CYT', 'MIT', 'CYT', 'CYT', 'NUC', 'CYT', 'CYT', 'CYT', 'NUC', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'NUC', 'CYT', 'CYT', 'MIT', 'MIT', 'CYT', 'MIT', 'NUC', 'MIT', 'CYT', 'CYT', 'CYT', 'MIT', 'MIT', 'CYT', 'MIT', 'MIT', 'MIT', 'EXC', 'ME3', 'CYT', 'CYT', 'CYT', 'NUC', 'NUC', 'ME3', 'ME3', 'NUC', 'ME1', 'NUC', 'MIT', 'MIT', 'CYT', 'NUC', 'CYT', 'ME3', 'CYT', 'NUC', 'NUC', 'ME3', 'ME3', 'NUC', 'MIT', 'ME3', 'CYT', 'CYT', 'ME3', 'MIT', 'NUC', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'NUC', 'NUC', 'CYT', 'MIT', 'NUC', 'CYT', 'CYT', 'ME3', 'ME1', 'ME3', 'ME1', 'CYT', 'MIT', 'NUC', 'NUC', 'ME1', 'CYT', 'CYT', 'CYT', 'NUC', 'VAC', 'CYT', 'CYT', 'VAC', 'NUC', 'NUC', 'NUC', 'CYT', 'MIT', 'NUC', 'NUC', 'NUC', 'NUC', 'CYT', 'ME1', 'ME1', 'CYT', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'VAC', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'ME3', 'CYT', 'CYT', 'CYT', 'ME1', 'CYT', 'ME1', 'NUC', 'ME1', 'CYT', 'ME3', 'POX', 'ME1', 'ME3', 'ME3', 'ME3', 'ME3', 'ME3', 'ME3', 'MIT', 'NUC', 'ME3', 'MIT', 'NUC', 'CYT', 'CYT', 'NUC', 'CYT', 'ME2']
{'accuracy_score': 0.5730337078651685, 'balanced_accuracy_score': 0.5729592610804553, 'macro_precision_score': 0.4796556614624703, 'macro_recall_score': 0.5156633349724097, 'macro_f1_score': 0.4911788810098433, 'micro_precision_score': 0.5730337078651685, 'micro_recall_score': 0.5730337078651685, 'micro_f1_score': 0.5730337078651685}
('0', Pipeline(steps=[('0',
                 SMOTE(k_neighbors=2, random_state=32764,
                       sampling_strategy='not majority')),
                ('1', VarianceThreshold()),
                ('2',
                 ExtraTreesClassifier(bootstrap=True,
                                      class_weight='balanced_subsample',
                                      criterion='entropy', max_features='log2',
                                      min_samples_leaf=10, min_samples_split=16,
                                      n_estimators=47, random_state=32764))]))
('1', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1',
                 SMOTE(k_neighbors=2, random_state=32764,
                       sampling_strategy='not majority')),
                ('2',
                 ExtraTreesClassifier(class_weight='balanced',
                                      max_features='sqrt', min_samples_leaf=15,
                                      min_samples_split=16,
                                      random_state=32764))]))
('2', Pipeline(steps=[('0',
                 SMOTE(k_neighbors=2, random_state=32764,
                       sampling_strategy='not majority')),
                ('1', MaxAbsScaler()),
                ('2',
                 ExtraTreesClassifier(bootstrap=True,
                                      class_weight='balanced_subsample',
                                      criterion='entropy', max_features='log2',
                                      min_samples_leaf=10, min_samples_split=16,
                                      n_estimators=47, random_state=32764))]))
('3', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1',
                 SMOTE(k_neighbors=2, random_state=32764,
                       sampling_strategy='not majority')),
                ('2',
                 SGDClassifier(alpha=6.425281898707895e-07, average=True,
                               class_weight='balanced',
                               epsilon=0.0004341852040573232,
                               eta0=0.09671693753115741,
                               l1_ratio=1.3957252819513893e-05,
                               loss='modified_huber',
                               power_t=0.054272929344057565, random_state=32764,
                               tol=0.0038132668522660403))]))
('4', Pipeline(steps=[('0', MinMaxScaler()),
                ('1',
                 MLPClassifier(alpha=0.012802733031465525,
                               learning_rate_init=0.002729168444314872,
                               random_state=32764, solver='lbfgs'))]))
('5', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1',
                 FastICA(n_components=5, random_state=32764, whiten=False)),
                ('2',
                 MLPClassifier(alpha=0.012802733031465525,
                               learning_rate_init=0.002729168444314872,
                               random_state=32764, solver='lbfgs'))]))
('6', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1',
                 RBFSampler(gamma=0.011116497039625169, n_components=12,
                            random_state=32764)),
                ('2', MinMaxScaler()),
                ('3',
                 ExtraTreesClassifier(class_weight='balanced',
                                      max_features='sqrt', min_samples_leaf=15,
                                      min_samples_split=16,
                                      random_state=32764))]))
('7', Pipeline(steps=[('0',
                 SMOTE(k_neighbors=2, random_state=32764,
                       sampling_strategy='not majority')),
                ('1', RobustScaler(with_centering=False, with_scaling=False)),
                ('2',
                 ExtraTreesClassifier(bootstrap=True,
                                      class_weight='balanced_subsample',
                                      criterion='entropy', max_features='log2',
                                      min_samples_leaf=10, min_samples_split=16,
                                      n_estimators=47, random_state=32764))]))
('8', Pipeline(steps=[('0',
                 FastICA(algorithm='deflation', fun='exp', n_components=37,
                         random_state=32764, whiten=False)),
                ('1', KNeighborsClassifier(n_neighbors=7))]))
('9', Pipeline(steps=[('0',
                 MLPClassifier(activation='tanh', alpha=0.0006692488955838379,
                               learning_rate_init=0.015933045767179205,
                               random_state=32764, solver='lbfgs'))]))

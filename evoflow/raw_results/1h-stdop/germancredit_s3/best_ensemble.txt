['good', 'bad', 'good', 'bad', 'bad', 'bad', 'bad', 'bad', 'good', 'bad', 'good', 'good', 'bad', 'good', 'good', 'bad', 'good', 'good', 'good', 'good', 'good', 'good', 'good', 'bad', 'good', 'good', 'good', 'good', 'good', 'good', 'good', 'good', 'good', 'good', 'good', 'bad', 'bad', 'bad', 'good', 'good', 'good', 'bad', 'good', 'good', 'good', 'bad', 'good', 'good', 'good', 'good', 'bad', 'bad', 'good', 'good', 'bad', 'good', 'good', 'bad', 'bad', 'good', 'bad', 'bad', 'bad', 'bad', 'good', 'good', 'bad', 'good', 'bad', 'good', 'good', 'good', 'bad', 'good', 'good', 'bad', 'good', 'good', 'good', 'bad', 'bad', 'good', 'good', 'good', 'bad', 'bad', 'bad', 'good', 'good', 'bad', 'good', 'bad', 'good', 'good', 'bad', 'bad', 'bad', 'bad', 'good', 'good', 'good', 'good', 'good', 'good', 'bad', 'bad', 'good', 'good', 'good', 'bad', 'bad', 'good', 'bad', 'good', 'bad', 'bad', 'bad', 'good', 'good', 'bad', 'bad', 'good', 'bad', 'good', 'good', 'good', 'good', 'good', 'good', 'good', 'good', 'good', 'good', 'good', 'good', 'bad', 'bad', 'bad', 'good', 'bad', 'good', 'good', 'bad', 'good', 'good', 'good', 'bad', 'good', 'bad', 'good', 'good', 'bad', 'good', 'bad', 'good', 'good', 'bad', 'good', 'good', 'bad', 'bad', 'bad', 'bad', 'bad', 'bad', 'good', 'bad', 'good', 'good', 'bad', 'good', 'good', 'bad', 'good', 'bad', 'bad', 'bad', 'good', 'good', 'good', 'good', 'good', 'bad', 'bad', 'good', 'good', 'good', 'bad', 'good', 'bad', 'bad', 'good', 'good', 'good', 'good', 'bad', 'good', 'good', 'good', 'good', 'bad', 'good', 'bad', 'bad', 'good', 'good', 'good', 'good', 'good', 'bad', 'good', 'good', 'good', 'bad', 'good', 'bad', 'bad', 'good', 'bad', 'good', 'bad', 'good', 'good', 'good', 'good', 'good', 'good', 'bad', 'good', 'bad', 'good', 'good', 'good', 'good', 'good', 'bad', 'good', 'bad', 'good', 'bad', 'good', 'bad', 'good', 'good', 'good', 'good', 'good', 'good', 'bad', 'good', 'good', 'good', 'good', 'bad', 'good', 'good', 'bad', 'good', 'good', 'good', 'good', 'bad', 'good', 'good', 'good', 'bad', 'good', 'bad', 'bad', 'good', 'good', 'good', 'bad', 'good', 'good', 'bad', 'bad', 'bad', 'bad', 'good', 'bad', 'bad', 'good', 'good', 'good', 'bad', 'bad', 'good', 'good', 'good', 'bad', 'good', 'bad', 'good', 'good', 'bad', 'good', 'bad', 'good', 'good']
{'accuracy_score': 0.7033333333333334, 'balanced_accuracy_score': 0.6825116185087896, 'macro_precision_score': 0.6709810231413562, 'macro_recall_score': 0.6825116185087896, 'macro_f1_score': 0.6747036391768906, 'micro_precision_score': 0.7033333333333334, 'micro_recall_score': 0.7033333333333334, 'micro_f1_score': 0.7033333333333334}
('0', Pipeline(steps=[('0', SimpleImputer()), ('1', StandardScaler(with_mean=False)),
                ('2',
                 SMOTETomek(random_state=3, sampling_strategy='not majority')),
                ('3',
                 QuadraticDiscriminantAnalysis(reg_param=0.7949559364793497))]))
('1', Pipeline(steps=[('0',
                 RandomOverSampler(random_state=3,
                                   sampling_strategy='minority')),
                ('1', VarianceThreshold()),
                ('2', BernoulliNB(alpha=0.29209062269909974))]))
('2', Pipeline(steps=[('0',
                 RandomOverSampler(random_state=3,
                                   sampling_strategy='minority')),
                ('1', BernoulliNB(alpha=0.11118108433651996))]))
('3', Pipeline(steps=[('0',
                 FastICA(algorithm='deflation', n_components=68,
                         random_state=3)),
                ('1',
                 LinearSVC(C=0.001123489081199513, class_weight='balanced',
                           dual=False, random_state=3,
                           tol=0.00270139124152356))]))
('4', Pipeline(steps=[('0',
                 RandomOverSampler(random_state=3,
                                   sampling_strategy='minority')),
                ('1', SMOTETomek(random_state=3, sampling_strategy='minority')),
                ('2', SelectFwe(alpha=0.004710173160230179)),
                ('3',
                 RandomForestClassifier(class_weight='balanced',
                                        max_features='sqrt',
                                        min_samples_leaf=14,
                                        min_samples_split=20, n_estimators=25,
                                        random_state=3))]))
('5', Pipeline(steps=[('0', SimpleImputer()),
                ('1',
                 RandomOverSampler(random_state=3,
                                   sampling_strategy='minority')),
                ('2',
                 SMOTETomek(random_state=3, sampling_strategy='not majority')),
                ('3',
                 LogisticRegression(C=0.040924917757908276,
                                    class_weight='balanced', random_state=3))]))
('6', Pipeline(steps=[('0', RobustScaler(with_centering=False)),
                ('1', MinMaxScaler()),
                ('2', SMOTETomek(random_state=3, sampling_strategy='minority')),
                ('3', MultinomialNB(alpha=4.442346102030914, fit_prior=False))]))
('7', Pipeline(steps=[('0', RobustScaler(with_centering=False)),
                ('1', MinMaxScaler()), ('2', MaxAbsScaler()),
                ('3',
                 SGDClassifier(alpha=7.448680598818629e-06, average=True,
                               class_weight='balanced',
                               epsilon=0.038512027281996444,
                               eta0=4.143519667479422e-07,
                               l1_ratio=1.2386136506783467e-09,
                               power_t=0.3898712328891275, random_state=3,
                               tol=1.492119795954643e-05))]))
('8', Pipeline(steps=[('0',
                 RandomOverSampler(random_state=3,
                                   sampling_strategy='minority')),
                ('1',
                 LogisticRegression(C=0.040924917757908276,
                                    class_weight='balanced', random_state=3))]))
('9', Pipeline(steps=[('0', StandardScaler()), ('1', MinMaxScaler()),
                ('2', SMOTETomek(random_state=3, sampling_strategy='minority')),
                ('3', MultinomialNB(alpha=4.442346102030914, fit_prior=False))]))

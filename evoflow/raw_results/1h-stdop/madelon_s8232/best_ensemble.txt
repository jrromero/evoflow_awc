['-1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '1', '-1', '-1', '-1', '-1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '1', '-1', '1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '-1', '1', '1', '1', '-1', '-1', '1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '1', '1', '-1', '-1', '-1', '-1', '-1', '1', '1', '1', '1', '1', '1', '-1', '-1', '1', '1', '1', '1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '1', '1', '1', '1', '1', '1', '1', '-1', '1', '1', '-1', '1', '-1', '-1', '-1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '1', '1', '-1', '-1', '1', '1', '-1', '1', '1', '-1', '-1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '1', '-1', '1', '1', '1', '-1', '1', '1', '1', '-1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '-1', '1', '-1', '-1', '1', '-1', '1', '-1', '-1', '1', '-1', '-1', '1', '1', '1', '1', '1', '1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '1', '-1', '1', '-1', '-1', '1', '1', '1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '1', '-1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '-1', '1', '1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '1', '1', '-1', '1', '-1', '1', '1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '1', '-1', '1', '1', '-1', '-1', '1', '1', '1', '1', '1', '1', '-1', '1', '1', '-1', '1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '-1', '1', '1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '1', '-1', '-1', '1', '1', '-1', '1', '1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '1', '-1', '-1', '1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '1', '-1', '1', '-1', '1', '1', '-1', '-1', '1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '-1', '1', '-1', '1', '1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '1', '1', '-1', '-1', '1', '1', '1', '-1', '-1', '1', '1', '-1', '1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '-1', '-1', '1', '1', '-1', '1', '-1', '-1', '1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '1', '1', '1', '1', '1', '-1', '1', '-1', '1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '1', '1', '1', '1', '1', '-1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '1', '1', '-1', '-1', '1', '-1', '1', '1', '1', '-1', '1', '-1', '1', '1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '1', '1', '-1', '1', '-1']
{'accuracy_score': 0.8397435897435898, 'balanced_accuracy_score': 0.8400220913107511, 'macro_precision_score': 0.8438129491620074, 'macro_recall_score': 0.8400220913107511, 'macro_f1_score': 0.8393419446051025, 'micro_precision_score': 0.8397435897435898, 'micro_recall_score': 0.8397435897435898, 'micro_f1_score': 0.8397435897435898}
('0', Pipeline(steps=[('0',
                 FeatureAgglomeration(affinity='manhattan', linkage='complete',
                                      n_clusters=19)),
                ('1', KNNImputer(n_neighbors=7, weights='distance')),
                ('2',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt', min_samples_leaf=2,
                                        min_samples_split=3, n_estimators=62,
                                        random_state=8232))]))
('1', Pipeline(steps=[('0',
                 FeatureAgglomeration(affinity='manhattan', linkage='complete',
                                      n_clusters=19)),
                ('1', KNNImputer(n_neighbors=7, weights='distance')),
                ('2',
                 KNeighborsClassifier(n_neighbors=40, p=1,
                                      weights='distance'))]))
('2', Pipeline(steps=[('0', VarianceThreshold()),
                ('1',
                 RandomOverSampler(random_state=8232,
                                   sampling_strategy='not minority')),
                ('2',
                 FeatureAgglomeration(affinity='cosine', linkage='average',
                                      n_clusters=6)),
                ('3', KNeighborsClassifier(n_neighbors=1, weights='distance'))]))
('3', Pipeline(steps=[('0',
                 FeatureAgglomeration(affinity='manhattan', linkage='complete',
                                      n_clusters=19)),
                ('1', KNNImputer(n_neighbors=7)),
                ('2',
                 ExtraTreesClassifier(class_weight='balanced',
                                      max_features='sqrt', min_samples_leaf=6,
                                      min_samples_split=18, n_estimators=54,
                                      random_state=8232))]))
('4', Pipeline(steps=[('0',
                 FeatureAgglomeration(affinity='manhattan', linkage='complete',
                                      n_clusters=19)),
                ('1', KNNImputer(n_neighbors=7, weights='distance')),
                ('2',
                 ExtraTreesClassifier(class_weight='balanced',
                                      max_features='sqrt', min_samples_leaf=6,
                                      min_samples_split=18, n_estimators=54,
                                      random_state=8232))]))
('5', Pipeline(steps=[('0', VarianceThreshold()),
                ('1',
                 RandomOverSampler(random_state=8232,
                                   sampling_strategy='minority')),
                ('2',
                 FeatureAgglomeration(affinity='cosine', linkage='average',
                                      n_clusters=6)),
                ('3',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt', min_samples_leaf=2,
                                        min_samples_split=3, n_estimators=62,
                                        random_state=8232))]))
('6', Pipeline(steps=[('0',
                 FeatureAgglomeration(affinity='manhattan', linkage='complete',
                                      n_clusters=19)),
                ('1', MinMaxScaler()),
                ('2',
                 ExtraTreesClassifier(class_weight='balanced',
                                      max_features='sqrt', min_samples_leaf=6,
                                      min_samples_split=18, n_estimators=54,
                                      random_state=8232))]))
('7', Pipeline(steps=[('0', VarianceThreshold()),
                ('1',
                 RandomOverSampler(random_state=8232,
                                   sampling_strategy='not minority')),
                ('2',
                 FeatureAgglomeration(affinity='cosine', linkage='average',
                                      n_clusters=6)),
                ('3',
                 KNeighborsClassifier(n_neighbors=40, p=1,
                                      weights='distance'))]))
('8', Pipeline(steps=[('0', VarianceThreshold()),
                ('1',
                 RandomOverSampler(random_state=8232,
                                   sampling_strategy='not minority')),
                ('2',
                 FeatureAgglomeration(affinity='cosine', linkage='average',
                                      n_clusters=6)),
                ('3',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt', min_samples_leaf=2,
                                        min_samples_split=3, n_estimators=62,
                                        random_state=8232))]))
('9', Pipeline(steps=[('0', VarianceThreshold()),
                ('1', FeatureAgglomeration(n_clusters=9)),
                ('2',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        criterion='entropy',
                                        max_features='log2', min_samples_leaf=7,
                                        min_samples_split=20, n_estimators=98,
                                        random_state=8232))]))

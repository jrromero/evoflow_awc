['POX', 'CYT', 'CYT', 'CYT', 'CYT', 'ME2', 'CYT', 'CYT', 'MIT', 'ME1', 'ME1', 'ME2', 'MIT', 'ME1', 'CYT', 'NUC', 'CYT', 'MIT', 'MIT', 'NUC', 'ME3', 'CYT', 'CYT', 'ME1', 'MIT', 'MIT', 'MIT', 'POX', 'ME3', 'NUC', 'ME1', 'ME3', 'CYT', 'CYT', 'CYT', 'POX', 'NUC', 'MIT', 'CYT', 'MIT', 'ME3', 'NUC', 'NUC', 'CYT', 'NUC', 'CYT', 'MIT', 'NUC', 'CYT', 'NUC', 'CYT', 'NUC', 'NUC', 'MIT', 'CYT', 'MIT', 'POX', 'NUC', 'CYT', 'ME1', 'ME3', 'MIT', 'MIT', 'ME3', 'MIT', 'MIT', 'MIT', 'EXC', 'CYT', 'NUC', 'EXC', 'VAC', 'CYT', 'ME2', 'CYT', 'NUC', 'EXC', 'EXC', 'CYT', 'CYT', 'CYT', 'CYT', 'ME3', 'POX', 'NUC', 'NUC', 'CYT', 'NUC', 'MIT', 'NUC', 'ME3', 'NUC', 'ME3', 'CYT', 'ME3', 'NUC', 'CYT', 'ME2', 'CYT', 'CYT', 'ME3', 'ME3', 'NUC', 'ME1', 'ERL', 'NUC', 'MIT', 'ME3', 'ME3', 'POX', 'ME3', 'ME1', 'ME1', 'CYT', 'ME3', 'ME3', 'ME2', 'NUC', 'NUC', 'NUC', 'MIT', 'ME3', 'MIT', 'NUC', 'ME3', 'NUC', 'NUC', 'CYT', 'ME3', 'CYT', 'CYT', 'NUC', 'CYT', 'ME2', 'NUC', 'NUC', 'MIT', 'NUC', 'NUC', 'CYT', 'NUC', 'MIT', 'NUC', 'CYT', 'CYT', 'CYT', 'MIT', 'MIT', 'ME3', 'NUC', 'CYT', 'NUC', 'MIT', 'MIT', 'MIT', 'NUC', 'CYT', 'ME3', 'ME3', 'CYT', 'MIT', 'MIT', 'CYT', 'MIT', 'CYT', 'NUC', 'ME2', 'ME3', 'NUC', 'MIT', 'ME1', 'NUC', 'ERL', 'MIT', 'ME3', 'ME2', 'ME2', 'NUC', 'CYT', 'NUC', 'ME3', 'ME3', 'ME2', 'CYT', 'NUC', 'NUC', 'ME3', 'ME2', 'CYT', 'MIT', 'MIT', 'MIT', 'MIT', 'ME3', 'CYT', 'MIT', 'ME3', 'NUC', 'NUC', 'MIT', 'CYT', 'NUC', 'NUC', 'NUC', 'MIT', 'MIT', 'ME3', 'MIT', 'CYT', 'CYT', 'NUC', 'MIT', 'MIT', 'ME3', 'MIT', 'NUC', 'CYT', 'MIT', 'CYT', 'MIT', 'ME3', 'NUC', 'ME3', 'EXC', 'ME3', 'MIT', 'NUC', 'ME3', 'CYT', 'ME2', 'NUC', 'CYT', 'EXC', 'NUC', 'ME2', 'ME3', 'ME2', 'CYT', 'NUC', 'CYT', 'MIT', 'CYT', 'CYT', 'CYT', 'NUC', 'ME3', 'CYT', 'CYT', 'CYT', 'MIT', 'NUC', 'POX', 'MIT', 'CYT', 'EXC', 'CYT', 'CYT', 'NUC', 'CYT', 'ME1', 'ME2', 'ME3', 'NUC', 'NUC', 'CYT', 'CYT', 'ME3', 'CYT', 'ME2', 'MIT', 'CYT', 'NUC', 'CYT', 'MIT', 'NUC', 'CYT', 'NUC', 'NUC', 'CYT', 'MIT', 'MIT', 'MIT', 'NUC', 'CYT', 'ME3', 'CYT', 'ME2', 'CYT', 'NUC', 'CYT', 'MIT', 'NUC', 'NUC', 'MIT', 'CYT', 'NUC', 'MIT', 'CYT', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'NUC', 'ME3', 'CYT', 'CYT', 'CYT', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'MIT', 'NUC', 'MIT', 'CYT', 'CYT', 'CYT', 'MIT', 'MIT', 'CYT', 'MIT', 'MIT', 'MIT', 'POX', 'ME3', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'ME3', 'ME3', 'CYT', 'EXC', 'NUC', 'MIT', 'MIT', 'NUC', 'CYT', 'CYT', 'ME3', 'CYT', 'NUC', 'NUC', 'ME3', 'ME3', 'NUC', 'MIT', 'ME3', 'CYT', 'CYT', 'ME3', 'MIT', 'NUC', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'NUC', 'NUC', 'CYT', 'MIT', 'NUC', 'CYT', 'ME3', 'ME3', 'EXC', 'ME3', 'ME1', 'NUC', 'MIT', 'NUC', 'NUC', 'ME1', 'CYT', 'CYT', 'CYT', 'NUC', 'MIT', 'CYT', 'CYT', 'CYT', 'NUC', 'NUC', 'NUC', 'CYT', 'MIT', 'NUC', 'NUC', 'NUC', 'NUC', 'CYT', 'ME1', 'ME1', 'CYT', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'ME3', 'CYT', 'CYT', 'CYT', 'ME1', 'CYT', 'ME1', 'NUC', 'ME1', 'CYT', 'ME3', 'POX', 'ME3', 'ME3', 'ME3', 'ME3', 'ME3', 'ME3', 'ME3', 'MIT', 'NUC', 'ME3', 'MIT', 'NUC', 'CYT', 'CYT', 'NUC', 'CYT', 'ME2']
{'accuracy_score': 0.5932584269662922, 'balanced_accuracy_score': 0.5659308715627851, 'macro_precision_score': 0.5623937294215933, 'macro_recall_score': 0.5093377844065066, 'macro_f1_score': 0.5024766718703043, 'micro_precision_score': 0.5932584269662922, 'micro_recall_score': 0.5932584269662922, 'micro_f1_score': 0.5932584269662922}
('0', Pipeline(steps=[('0', KNNImputer(n_neighbors=7)),
                ('1',
                 RBFSampler(gamma=0.017380233701597612, n_components=72,
                            random_state=45139)),
                ('2',
                 ExtraTreesClassifier(class_weight='balanced',
                                      criterion='entropy', max_features='sqrt',
                                      min_samples_leaf=3, min_samples_split=19,
                                      n_estimators=15, random_state=45139))]))
('1', Pipeline(steps=[('0', KNNImputer(n_neighbors=3, weights='distance')),
                ('1',
                 SMOTETomek(random_state=45139,
                            sampling_strategy='not minority')),
                ('2', SelectPercentile(percentile=71.53493653253882)),
                ('3',
                 ExtraTreesClassifier(class_weight='balanced_subsample',
                                      max_features='sqrt', min_samples_leaf=8,
                                      min_samples_split=16, n_estimators=79,
                                      random_state=45139))]))
('2', Pipeline(steps=[('0', VarianceThreshold()),
                ('1',
                 RandomForestClassifier(class_weight='balanced_subsample',
                                        max_features='log2',
                                        min_samples_split=7, n_estimators=37,
                                        random_state=45139))]))
('3', Pipeline(steps=[('0',
                 RBFSampler(gamma=0.2897923362639154, n_components=40,
                            random_state=45139)),
                ('1',
                 ExtraTreesClassifier(class_weight='balanced',
                                      criterion='entropy', max_features='log2',
                                      min_samples_leaf=7, min_samples_split=3,
                                      n_estimators=23, random_state=45139))]))
('4', Pipeline(steps=[('0', KNNImputer(n_neighbors=7)),
                ('1',
                 RBFSampler(gamma=0.017380233701597612, n_components=72,
                            random_state=45139)),
                ('2',
                 RandomForestClassifier(class_weight='balanced_subsample',
                                        criterion='entropy',
                                        max_features='log2', min_samples_leaf=3,
                                        min_samples_split=13, n_estimators=90,
                                        random_state=45139))]))
('5', Pipeline(steps=[('0', SimpleImputer()),
                ('1',
                 RandomOverSampler(random_state=45139,
                                   sampling_strategy='not minority')),
                ('2',
                 ExtraTreesClassifier(class_weight='balanced',
                                      criterion='entropy', max_features='log2',
                                      min_samples_leaf=7, min_samples_split=3,
                                      n_estimators=23, random_state=45139))]))
('6', Pipeline(steps=[('0', Normalizer(norm='max')),
                ('1', KNNImputer(n_neighbors=10)),
                ('2',
                 LinearSVC(C=12.312010906610704, class_weight='balanced',
                           random_state=45139, tol=0.00045861557968446693))]))
('7', Pipeline(steps=[('0',
                 RBFSampler(gamma=0.2897923362639154, n_components=40,
                            random_state=45139)),
                ('1',
                 FastICA(n_components=3, random_state=45139, whiten=False)),
                ('2',
                 RandomOverSampler(random_state=45139,
                                   sampling_strategy='minority')),
                ('3',
                 ExtraTreesClassifier(class_weight='balanced',
                                      criterion='entropy', max_features='sqrt',
                                      min_samples_leaf=3, min_samples_split=19,
                                      n_estimators=15, random_state=45139))]))
('8', Pipeline(steps=[('0',
                 RBFSampler(gamma=0.017380233701597612, n_components=72,
                            random_state=45139)),
                ('1', MaxAbsScaler()),
                ('2',
                 RandomForestClassifier(class_weight='balanced_subsample',
                                        criterion='entropy',
                                        max_features='log2', min_samples_leaf=3,
                                        min_samples_split=13, n_estimators=90,
                                        random_state=45139))]))
('9', Pipeline(steps=[('0', MaxAbsScaler()), ('1', VarianceThreshold()),
                ('2',
                 RandomForestClassifier(class_weight='balanced_subsample',
                                        max_features='log2',
                                        min_samples_split=7, n_estimators=37,
                                        random_state=45139))]))


{'accuracy_score': 0.7829787234042553, 'balanced_accuracy_score': 0.6226827289182948, 'macro_precision_score': 0.5543240927558664, 'macro_recall_score': 0.6226827289182948, 'macro_f1_score': 0.5561275508314507, 'micro_precision_score': 0.7829787234042553, 'micro_recall_score': 0.7829787234042553, 'micro_f1_score': 0.7829787234042553}
('0', Pipeline(steps=[('0', SimpleImputer()), ('1', StandardScaler(with_mean=False)),
                ('2',
                 SMOTETomek(random_state=3, sampling_strategy='not majority')),
                ('3',
                 AdaBoostClassifier(algorithm='SAMME',
                                    learning_rate=0.03186701989364553,
                                    n_estimators=27, random_state=3))]))
('1', Pipeline(steps=[('0', SimpleImputer()), ('1', StandardScaler(with_mean=False)),
                ('2',
                 SMOTETomek(random_state=3, sampling_strategy='not majority')),
                ('3',
                 AdaBoostClassifier(algorithm='SAMME',
                                    learning_rate=0.23195630156411287,
                                    n_estimators=65, random_state=3))]))
('2', Pipeline(steps=[('0', SimpleImputer()), ('1', RobustScaler(with_scaling=False)),
                ('2', BernoulliNB(alpha=0.012206867386558677))]))
('3', Pipeline(steps=[('0', SimpleImputer(strategy='most_frequent')),
                ('1', GaussianNB(var_smoothing=7.243559911354961e-06))]))
('4', Pipeline(steps=[('0', SimpleImputer()),
                ('1', StandardScaler(with_mean=False, with_std=False)),
                ('2', MaxAbsScaler()),
                ('3',
                 SGDClassifier(alpha=0.001743096172100304, average=True,
                               class_weight='balanced',
                               epsilon=0.0001385844389829357,
                               eta0=0.00046827084943519966,
                               l1_ratio=8.512751753364043e-05,
                               loss='squared_hinge', power_t=0.7679074905883193,
                               random_state=3, tol=0.007324636896294154))]))
('5', Pipeline(steps=[('0', SimpleImputer()),
                ('1',
                 SMOTETomek(random_state=3, sampling_strategy='not majority')),
                ('2', SelectPercentile(percentile=6.13744948676456)),
                ('3', GaussianNB(var_smoothing=7.976050194043299e-07))]))
('6', Pipeline(steps=[('0', SimpleImputer()), ('1', StandardScaler(with_mean=False)),
                ('2',
                 SMOTETomek(random_state=3, sampling_strategy='not majority')),
                ('3',
                 AdaBoostClassifier(algorithm='SAMME',
                                    learning_rate=0.36611917424949986,
                                    n_estimators=45, random_state=3))]))
('7', Pipeline(steps=[('0', SimpleImputer(strategy='median')),
                ('1', StandardScaler(with_mean=False)),
                ('2',
                 SMOTETomek(random_state=3, sampling_strategy='not majority')),
                ('3',
                 AdaBoostClassifier(learning_rate=0.09487250894190409,
                                    n_estimators=52, random_state=3))]))
('8', Pipeline(steps=[('0', SimpleImputer()), ('1', StandardScaler(with_mean=False)),
                ('2',
                 SMOTETomek(random_state=3, sampling_strategy='not majority')),
                ('3',
                 AdaBoostClassifier(learning_rate=0.09487250894190409,
                                    n_estimators=52, random_state=3))]))
('9', Pipeline(steps=[('0', MaxAbsScaler()), ('1', KNNImputer(weights='distance')),
                ('2',
                 SMOTETomek(random_state=3, sampling_strategy='not majority')),
                ('3',
                 QuadraticDiscriminantAnalysis(reg_param=0.7949559364793497))]))

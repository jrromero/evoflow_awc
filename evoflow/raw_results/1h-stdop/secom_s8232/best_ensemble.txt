
{'accuracy_score': 0.7787234042553192, 'balanced_accuracy_score': 0.6327320391985519, 'macro_precision_score': 0.5570581448388742, 'macro_recall_score': 0.6327320391985519, 'macro_f1_score': 0.5583505005601938, 'micro_precision_score': 0.7787234042553192, 'micro_recall_score': 0.7787234042553192, 'micro_f1_score': 0.778723404255319}
('0', Pipeline(steps=[('0', SimpleImputer(strategy='most_frequent')),
                ('1', MinMaxScaler()),
                ('2',
                 DecisionTreeClassifier(class_weight='balanced',
                                        criterion='entropy',
                                        max_depth=1.5413918170327263,
                                        max_features=0.21967400582391394,
                                        min_samples_leaf=13,
                                        min_samples_split=10,
                                        random_state=8232))]))
('1', Pipeline(steps=[('0', KNNImputer(n_neighbors=7, weights='distance')),
                ('1',
                 DecisionTreeClassifier(class_weight='balanced',
                                        criterion='entropy',
                                        max_depth=1.5413918170327263,
                                        max_features=0.21967400582391394,
                                        min_samples_leaf=13,
                                        min_samples_split=10,
                                        random_state=8232))]))
('2', Pipeline(steps=[('0', SimpleImputer(strategy='most_frequent')),
                ('1',
                 DecisionTreeClassifier(class_weight='balanced',
                                        criterion='entropy',
                                        max_depth=1.5413918170327263,
                                        max_features=0.21967400582391394,
                                        min_samples_leaf=13,
                                        min_samples_split=10,
                                        random_state=8232))]))
('3', Pipeline(steps=[('0', SimpleImputer(strategy='most_frequent')),
                ('1', MinMaxScaler()),
                ('2', GaussianNB(var_smoothing=0.006320113507979055))]))
('4', Pipeline(steps=[('0', KNNImputer(n_neighbors=7, weights='distance')),
                ('1',
                 DecisionTreeClassifier(class_weight='balanced',
                                        criterion='entropy',
                                        max_depth=1.5413918170327263,
                                        max_features=0.21967400582391394,
                                        min_samples_leaf=13,
                                        min_samples_split=10,
                                        random_state=8232))]))
('5', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1', SimpleImputer(strategy='most_frequent')),
                ('2',
                 SGDClassifier(alpha=5.296998989012138e-05, average=True,
                               class_weight='balanced',
                               epsilon=0.016099572003625953,
                               eta0=1.5720152349711304e-06,
                               l1_ratio=6.578154592329431e-05,
                               loss='perceptron', power_t=0.6615538501235262,
                               random_state=8232, tol=2.232771790071076e-05))]))
('6', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1', SimpleImputer(strategy='most_frequent')),
                ('2', GaussianNB(var_smoothing=1.129123242215893e-07))]))
('7', Pipeline(steps=[('0', KNNImputer(n_neighbors=7, weights='distance')),
                ('1', MinMaxScaler()),
                ('2',
                 BernoulliNB(alpha=0.027339396753842712, fit_prior=False))]))
('8', Pipeline(steps=[('0', KNNImputer(n_neighbors=7, weights='distance')),
                ('1',
                 BernoulliNB(alpha=0.027339396753842712, fit_prior=False))]))
('9', Pipeline(steps=[('0', KNNImputer(n_neighbors=7, weights='distance')),
                ('1', SimpleImputer(strategy='most_frequent')),
                ('2',
                 BernoulliNB(alpha=0.027339396753842712, fit_prior=False))]))

['1', '-1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '1', '1', '-1', '1', '1', '1', '1', '-1', '1', '1', '1', '1', '1', '1', '-1', '1', '-1', '1', '-1', '1', '1', '-1', '1', '1', '1', '1', '1', '1', '1', '-1', '1', '1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '1', '1', '1', '1', '1', '-1', '-1', '-1', '1', '1', '-1', '-1', '1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '1', '-1', '-1', '-1', '1', '-1', '1', '1', '-1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '1', '1', '-1', '-1', '1', '1', '1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '1', '-1', '1', '1', '-1', '-1', '1', '1', '1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1']
{'accuracy_score': 0.7063829787234043, 'balanced_accuracy_score': 0.6058298483240747, 'macro_precision_score': 0.5371649021284057, 'macro_recall_score': 0.6058298483240747, 'macro_f1_score': 0.5133699468803457, 'micro_precision_score': 0.7063829787234043, 'micro_recall_score': 0.7063829787234043, 'micro_f1_score': 0.7063829787234043}
('0', Pipeline(steps=[('0', MinMaxScaler()), ('1', KNNImputer(n_neighbors=4)),
                ('2', VarianceThreshold()),
                ('3', BernoulliNB(alpha=0.0658676789174262, fit_prior=False))]))
('1', Pipeline(steps=[('0', KNNImputer(n_neighbors=9, weights='distance')),
                ('1', MaxAbsScaler()),
                ('2',
                 SGDClassifier(alpha=1.8141633535384996e-06, average=True,
                               class_weight='balanced',
                               epsilon=0.0037637767538482034,
                               eta0=0.06296266912176181,
                               l1_ratio=1.965465954219091e-08,
                               loss='perceptron', power_t=0.4057470455046212,
                               random_state=0, tol=0.00929606790481818))]))
('2', Pipeline(steps=[('0',
                 RandomUnderSampler(random_state=0, replacement=True,
                                    sampling_strategy='not minority')),
                ('1', SimpleImputer(strategy='median')), ('2', MaxAbsScaler()),
                ('3', BernoulliNB(alpha=0.22051334142592385, fit_prior=False))]))
('3', Pipeline(steps=[('0',
                 RandomOverSampler(random_state=0,
                                   sampling_strategy='not minority')),
                ('1', SimpleImputer(strategy='median')), ('2', MaxAbsScaler()),
                ('3',
                 SGDClassifier(alpha=1.010813840167652e-06, average=True,
                               class_weight='balanced',
                               epsilon=0.0001033613745487017,
                               eta0=9.67976265961617e-07,
                               l1_ratio=1.1801872737604759e-05,
                               loss='squared_hinge', power_t=0.1644142462379703,
                               random_state=0, tol=6.317800654934062e-05))]))
('4', Pipeline(steps=[('0',
                 RandomOverSampler(random_state=0,
                                   sampling_strategy='not minority')),
                ('1', SimpleImputer(strategy='median')), ('2', MaxAbsScaler()),
                ('3',
                 LinearSVC(C=0.0005158486282329435, class_weight='balanced',
                           loss='hinge', random_state=0,
                           tol=0.00045143022321595484))]))
('5', Pipeline(steps=[('0', MinMaxScaler()), ('1', KNNImputer(n_neighbors=3)),
                ('2', VarianceThreshold()),
                ('3', BernoulliNB(alpha=0.0658676789174262, fit_prior=False))]))
('6', Pipeline(steps=[('0', SimpleImputer(strategy='most_frequent')),
                ('1', MaxAbsScaler()),
                ('2', SMOTE(random_state=0, sampling_strategy='minority')),
                ('3', BernoulliNB(alpha=20.39861737723981, fit_prior=False))]))
('7', Pipeline(steps=[('0', SimpleImputer()), ('1', MaxAbsScaler()),
                ('2',
                 SMOTE(k_neighbors=4, random_state=0,
                       sampling_strategy='not minority')),
                ('3',
                 SGDClassifier(alpha=1.010813840167652e-06, average=True,
                               class_weight='balanced',
                               epsilon=0.0009499772739369371,
                               eta0=0.06929995244351102,
                               l1_ratio=1.1801872737604759e-05, loss='log',
                               power_t=0.1644142462379703, random_state=0,
                               tol=0.008696298819686508))]))
('8', Pipeline(steps=[('0', KNNImputer(n_neighbors=9, weights='distance')),
                ('1', MaxAbsScaler()),
                ('2',
                 LinearSVC(C=0.06232120056358629, class_weight='balanced',
                           loss='hinge', random_state=0,
                           tol=0.0028224388643861083))]))
('9', Pipeline(steps=[('0', SimpleImputer(strategy='median')), ('1', MaxAbsScaler()),
                ('2',
                 SMOTE(k_neighbors=4, random_state=0,
                       sampling_strategy='not majority')),
                ('3',
                 KNeighborsClassifier(n_neighbors=17, p=1,
                                      weights='distance'))]))

['good', 'bad', 'good', 'good', 'bad', 'bad', 'bad', 'bad', 'good', 'bad', 'good', 'good', 'bad', 'good', 'good', 'bad', 'good', 'good', 'good', 'good', 'good', 'good', 'good', 'bad', 'good', 'good', 'good', 'good', 'good', 'good', 'good', 'good', 'good', 'good', 'good', 'bad', 'bad', 'bad', 'good', 'good', 'good', 'bad', 'good', 'good', 'good', 'bad', 'good', 'good', 'good', 'good', 'bad', 'bad', 'good', 'bad', 'bad', 'good', 'good', 'bad', 'bad', 'good', 'bad', 'good', 'bad', 'bad', 'good', 'good', 'bad', 'good', 'bad', 'bad', 'good', 'good', 'bad', 'good', 'good', 'bad', 'good', 'good', 'good', 'bad', 'bad', 'good', 'good', 'good', 'good', 'bad', 'bad', 'good', 'good', 'good', 'bad', 'bad', 'good', 'good', 'bad', 'bad', 'bad', 'bad', 'good', 'bad', 'good', 'good', 'good', 'bad', 'bad', 'bad', 'good', 'good', 'good', 'bad', 'bad', 'good', 'bad', 'good', 'bad', 'bad', 'bad', 'good', 'good', 'bad', 'bad', 'good', 'bad', 'good', 'bad', 'good', 'good', 'good', 'good', 'bad', 'good', 'good', 'good', 'good', 'good', 'bad', 'bad', 'bad', 'good', 'bad', 'good', 'good', 'bad', 'good', 'good', 'good', 'good', 'good', 'bad', 'good', 'good', 'bad', 'good', 'bad', 'good', 'good', 'bad', 'good', 'good', 'bad', 'bad', 'bad', 'good', 'bad', 'good', 'good', 'bad', 'good', 'good', 'bad', 'good', 'good', 'bad', 'good', 'bad', 'bad', 'bad', 'good', 'good', 'good', 'good', 'good', 'bad', 'bad', 'good', 'good', 'good', 'bad', 'good', 'bad', 'bad', 'good', 'good', 'good', 'good', 'bad', 'bad', 'good', 'good', 'good', 'bad', 'good', 'bad', 'bad', 'good', 'good', 'good', 'good', 'good', 'bad', 'good', 'good', 'good', 'bad', 'good', 'bad', 'bad', 'good', 'bad', 'good', 'bad', 'good', 'good', 'good', 'good', 'good', 'good', 'bad', 'good', 'bad', 'good', 'good', 'good', 'good', 'good', 'bad', 'good', 'bad', 'good', 'bad', 'good', 'bad', 'good', 'good', 'good', 'good', 'good', 'good', 'bad', 'good', 'good', 'good', 'good', 'bad', 'good', 'good', 'bad', 'good', 'good', 'good', 'good', 'bad', 'bad', 'good', 'good', 'bad', 'good', 'good', 'bad', 'good', 'good', 'good', 'bad', 'good', 'good', 'bad', 'bad', 'bad', 'bad', 'good', 'bad', 'bad', 'good', 'good', 'good', 'bad', 'bad', 'good', 'bad', 'good', 'bad', 'good', 'bad', 'good', 'good', 'bad', 'good', 'bad', 'good', 'good']
{'accuracy_score': 0.71, 'balanced_accuracy_score': 0.6927157001414428, 'macro_precision_score': 0.6793184488836663, 'macro_recall_score': 0.6927157001414428, 'macro_f1_score': 0.6833715471121302, 'micro_precision_score': 0.71, 'micro_recall_score': 0.71, 'micro_f1_score': 0.7100000000000001}
('0', Pipeline(steps=[('0', MinMaxScaler()), ('1', RobustScaler(with_scaling=False)),
                ('2',
                 SMOTETomek(random_state=45139,
                            sampling_strategy='not minority')),
                ('3', BernoulliNB(alpha=0.3737662788406425, fit_prior=False))]))
('1', Pipeline(steps=[('0', Normalizer()), ('1', VarianceThreshold()),
                ('2',
                 ExtraTreesClassifier(class_weight='balanced_subsample',
                                      max_features='sqrt', min_samples_leaf=20,
                                      min_samples_split=17, n_estimators=30,
                                      random_state=45139))]))
('2', Pipeline(steps=[('0', MaxAbsScaler()), ('1', RobustScaler(with_scaling=False)),
                ('2',
                 SMOTETomek(random_state=45139, sampling_strategy='minority')),
                ('3',
                 MLPClassifier(alpha=0.0009567241892851446,
                               learning_rate_init=0.019973859712318923,
                               random_state=45139, solver='sgd'))]))
('3', Pipeline(steps=[('0', SelectPercentile(percentile=69.1652429276202)),
                ('1', MinMaxScaler()), ('2', MaxAbsScaler()),
                ('3', VarianceThreshold()),
                ('4',
                 LogisticRegression(C=1.1924421776864946,
                                    class_weight='balanced',
                                    random_state=45139))]))
('4', Pipeline(steps=[('0', SelectPercentile(percentile=59.2055525301603)),
                ('1', MinMaxScaler()), ('2', MaxAbsScaler()),
                ('3', VarianceThreshold()),
                ('4',
                 LogisticRegression(C=1.1924421776864946,
                                    class_weight='balanced',
                                    random_state=45139))]))
('5', Pipeline(steps=[('0', SelectPercentile(percentile=58.17159298265426)),
                ('1', MinMaxScaler()), ('2', MaxAbsScaler()),
                ('3', VarianceThreshold()),
                ('4',
                 LogisticRegression(C=5.586097411292025,
                                    class_weight='balanced',
                                    random_state=45139))]))
('6', Pipeline(steps=[('0', SelectPercentile(percentile=62.000681438659775)),
                ('1', MinMaxScaler()), ('2', MaxAbsScaler()),
                ('3', VarianceThreshold()),
                ('4',
                 LinearSVC(C=4.369628261423373, class_weight='balanced',
                           random_state=45139, tol=0.00010257073177696956))]))
('7', Pipeline(steps=[('0', SelectPercentile(percentile=62.94678896489697)),
                ('1', VarianceThreshold()), ('2', MinMaxScaler()),
                ('3', MaxAbsScaler()),
                ('4',
                 SGDClassifier(alpha=1.5009808698843688e-07,
                               class_weight='balanced',
                               epsilon=0.002841773466664021,
                               eta0=3.660089452952349e-05,
                               l1_ratio=0.00011963183529412009,
                               power_t=0.05807187287889184, random_state=45139,
                               tol=0.07408012107930091))]))
('8', Pipeline(steps=[('0',
                 SMOTE(k_neighbors=2, random_state=45139,
                       sampling_strategy='not majority')),
                ('1', MaxAbsScaler()), ('2', VarianceThreshold()),
                ('3',
                 LinearSVC(C=9.236267088464496, class_weight='balanced',
                           dual=False, random_state=45139,
                           tol=0.00019869642781110387))]))
('9', Pipeline(steps=[('0', SelectPercentile(percentile=63.31508220077809)),
                ('1', MinMaxScaler()), ('2', MaxAbsScaler()),
                ('3', VarianceThreshold()),
                ('4',
                 LogisticRegression(C=1.1924421776864946,
                                    class_weight='balanced',
                                    random_state=45139))]))

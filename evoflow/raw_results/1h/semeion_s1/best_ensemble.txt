['0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '2', '2', '2', '2', '2', '2', '2', '3', '1', '3', '3', '1', '4', '4', '4', '4', '4', '5', '5', '5', '5', '5', '5', '6', '6', '6', '6', '6', '6', '7', '7', '7', '7', '7', '8', '8', '8', '8', '8', '9', '1', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '2', '2', '2', '2', '3', '3', '7', '3', '3', '3', '3', '3', '6', '1', '4', '4', '4', '4', '4', '4', '5', '5', '5', '5', '6', '1', '6', '6', '1', '7', '7', '7', '7', '7', '7', '7', '8', '8', '8', '8', '9', '9', '9', '4', '0', '0', '5', '0', '2', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '2', '9', '3', '3', '3', '3', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '5', '5', '5', '5', '5', '5', '6', '6', '6', '6', '6', '6', '6', '7', '7', '7', '7', '7', '8', '8', '2', '8', '8', '7', '8', '8', '9', '9', '9', '9', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '2', '2', '2', '2', '2', '2', '2', '2', '2', '5', '3', '3', '3', '3', '3', '5', '4', '4', '1', '4', '4', '1', '4', '4', '4', '4', '5', '5', '6', '6', '6', '6', '6', '6', '6', '6', '7', '7', '7', '7', '7', '7', '7', '7', '8', '8', '8', '8', '8', '9', '9', '0', '9', '9', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '2', '2', '2', '2', '2', '2', '2', '2', '7', '2', '2', '2', '3', '3', '2', '3', '3', '3', '3', '3', '4', '4', '4', '4', '4', '4', '4', '4', '4', '5', '5', '5', '5', '5', '5', '5', '5', '5', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '8', '8', '8', '8', '8', '8', '8', '8', '8', '0', '8', '8', '8', '9', '9', '9', '2', '9', '9', '9', '9', '9', '8', '0', '0', '0', '0', '0', '0', '0', '5', '0', '0', '0', '1', '1', '1', '1', '1', '5', '1', '1', '1', '1', '1', '1', '9', '2', '2', '4', '2', '4', '2', '2', '2', '3', '3', '3', '3', '3', '3', '3', '3', '3', '3', '4', '4', '4', '4', '4', '4', '4', '4', '4', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '5', '6', '6', '6', '6', '6', '6', '0', '6', '6', '6', '6', '6', '6', '7', '7', '7', '7', '1', '7', '7', '7', '7', '7', '7', '7', '7', '8', '8', '8', '8', '8', '8', '8', '9', '8', '8', '3', '8', '8', '9', '9', '9', '9', '9', '9', '9', '9', '9', '3', '9']
{'accuracy_score': 0.9245283018867925, 'balanced_accuracy_score': 0.9210326757120253, 'macro_precision_score': 0.9251992698861384, 'macro_recall_score': 0.9210326757120253, 'macro_f1_score': 0.9219979981166514, 'micro_precision_score': 0.9245283018867925, 'micro_recall_score': 0.9245283018867925, 'micro_f1_score': 0.9245283018867925}
('0', Pipeline(steps=[('0', MinMaxScaler()), ('1', StandardScaler()),
                ('2',
                 MLPClassifier(alpha=0.056034644301759265,
                               learning_rate_init=0.012536206075514925,
                               random_state=1))]))
('1', Pipeline(steps=[('0', VarianceThreshold()),
                ('1',
                 MLPClassifier(alpha=0.056034644301759265,
                               learning_rate_init=0.012536206075514925,
                               random_state=1))]))
('2', Pipeline(steps=[('0',
                 RandomOverSampler(random_state=1,
                                   sampling_strategy='minority')),
                ('1', StandardScaler()),
                ('2',
                 MLPClassifier(alpha=0.056034644301759265,
                               learning_rate_init=0.006270620590734671,
                               random_state=1))]))
('3', Pipeline(steps=[('0', VarianceThreshold()),
                ('1',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        max_features='sqrt', min_samples_leaf=2,
                                        min_samples_split=7, n_estimators=68,
                                        random_state=1))]))
('4', Pipeline(steps=[('0',
                 MLPClassifier(activation='logistic',
                               alpha=0.012156567776264034,
                               learning_rate_init=0.3004821435264008,
                               random_state=1, solver='lbfgs'))]))
('5', Pipeline(steps=[('0',
                 SMOTETomek(random_state=1, sampling_strategy='not majority')),
                ('1',
                 MLPClassifier(alpha=0.015252353873489534,
                               learning_rate_init=0.012536206075514925,
                               random_state=1))]))
('6', Pipeline(steps=[('0', MinMaxScaler()), ('1', StandardScaler()),
                ('2',
                 MLPClassifier(activation='tanh', alpha=0.056034644301759265,
                               learning_rate_init=0.012536206075514925,
                               random_state=1))]))
('7', Pipeline(steps=[('0', MinMaxScaler()), ('1', StandardScaler(with_std=False)),
                ('2',
                 MLPClassifier(alpha=0.056034644301759265,
                               learning_rate_init=0.012536206075514925,
                               random_state=1))]))
('8', Pipeline(steps=[('0',
                 MLPClassifier(alpha=0.056034644301759265,
                               learning_rate_init=0.012017720362796634,
                               random_state=1))]))
('9', Pipeline(steps=[('0',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        criterion='entropy',
                                        max_features='sqrt', min_samples_leaf=2,
                                        min_samples_split=7, n_estimators=68,
                                        random_state=1))]))

['0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '2', '2', '2', '2', '7', '2', '2', '3', '1', '3', '3', '1', '4', '4', '4', '4', '4', '5', '5', '5', '5', '5', '5', '6', '6', '6', '6', '6', '6', '7', '7', '7', '7', '7', '8', '8', '8', '8', '9', '9', '4', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '2', '2', '2', '2', '3', '3', '7', '3', '3', '3', '3', '3', '6', '1', '4', '4', '4', '4', '4', '4', '5', '5', '5', '5', '6', '1', '6', '6', '7', '7', '7', '7', '7', '7', '7', '7', '8', '8', '8', '8', '9', '9', '9', '9', '0', '0', '0', '0', '2', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '2', '9', '3', '3', '3', '3', '4', '4', '4', '4', '4', '1', '4', '4', '4', '4', '5', '5', '5', '5', '5', '5', '6', '6', '6', '6', '6', '6', '6', '7', '7', '7', '7', '7', '8', '8', '2', '8', '8', '1', '8', '8', '9', '9', '9', '9', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '2', '2', '2', '2', '2', '2', '2', '2', '2', '5', '3', '3', '3', '3', '3', '5', '4', '4', '2', '4', '4', '1', '4', '4', '4', '4', '5', '5', '6', '6', '6', '6', '6', '6', '6', '6', '7', '7', '7', '7', '7', '7', '7', '7', '8', '8', '8', '8', '8', '9', '9', '8', '9', '9', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '4', '1', '1', '1', '1', '1', '1', '7', '2', '2', '2', '2', '2', '2', '2', '2', '2', '2', '2', '2', '3', '3', '3', '3', '3', '3', '3', '3', '4', '4', '4', '4', '4', '4', '4', '4', '4', '5', '5', '5', '5', '5', '5', '5', '3', '5', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '8', '8', '8', '8', '8', '8', '8', '8', '8', '8', '8', '8', '8', '5', '9', '9', '3', '9', '9', '9', '9', '9', '8', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '2', '1', '1', '1', '1', '1', '1', '1', '2', '2', '4', '2', '4', '2', '2', '2', '3', '3', '3', '3', '3', '3', '3', '3', '3', '3', '4', '4', '4', '4', '4', '4', '4', '4', '4', '5', '9', '5', '5', '5', '9', '5', '5', '5', '5', '5', '5', '5', '5', '6', '6', '6', '6', '6', '6', '0', '6', '6', '6', '6', '6', '6', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '8', '8', '8', '8', '8', '8', '8', '9', '8', '8', '3', '8', '8', '9', '9', '9', '9', '9', '9', '9', '9', '9', '3', '9']
{'accuracy_score': 0.9245283018867925, 'balanced_accuracy_score': 0.9198963806436209, 'macro_precision_score': 0.9215598169745869, 'macro_recall_score': 0.9198963806436209, 'macro_f1_score': 0.9204845173196883, 'micro_precision_score': 0.9245283018867925, 'micro_recall_score': 0.9245283018867925, 'micro_f1_score': 0.9245283018867925}
('0', Pipeline(steps=[('0', MaxAbsScaler()), ('1', VarianceThreshold()),
                ('2',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='log2', min_samples_split=4,
                                      n_estimators=92, random_state=2))]))
('1', Pipeline(steps=[('0',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        criterion='entropy',
                                        max_features='sqrt', min_samples_leaf=2,
                                        min_samples_split=4, n_estimators=99,
                                        random_state=2))]))
('2', Pipeline(steps=[('0',
                 RandomOverSampler(random_state=2,
                                   sampling_strategy='not minority')),
                ('1', RobustScaler(with_scaling=False)),
                ('2',
                 ExtraTreesClassifier(criterion='entropy', max_features='log2',
                                      min_samples_leaf=3, min_samples_split=4,
                                      n_estimators=92, random_state=2))]))
('3', Pipeline(steps=[('0', MinMaxScaler()), ('1', MaxAbsScaler()),
                ('2', SelectFwe(alpha=0.0415550615372393)),
                ('3',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        max_features='sqrt', min_samples_leaf=2,
                                        min_samples_split=4, n_estimators=99,
                                        random_state=2))]))
('4', Pipeline(steps=[('0', VarianceThreshold()), ('1', MaxAbsScaler()),
                ('2', KNNImputer(n_neighbors=9, weights='distance')),
                ('3',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        criterion='entropy',
                                        max_features='sqrt', min_samples_leaf=2,
                                        min_samples_split=4, n_estimators=99,
                                        random_state=2))]))
('5', Pipeline(steps=[('0', RobustScaler(with_scaling=False)),
                ('1',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        criterion='entropy',
                                        max_features='sqrt', min_samples_leaf=2,
                                        min_samples_split=4, n_estimators=99,
                                        random_state=2))]))
('6', Pipeline(steps=[('0',
                 MLPClassifier(activation='logistic',
                               alpha=0.007482891080139532,
                               learning_rate_init=0.35390385143581543,
                               random_state=2, solver='lbfgs'))]))
('7', Pipeline(steps=[('0', RobustScaler()),
                ('1',
                 MLPClassifier(activation='logistic',
                               alpha=0.012137654541847445,
                               learning_rate_init=0.012528568513802947,
                               random_state=2, solver='lbfgs'))]))
('8', Pipeline(steps=[('0', VarianceThreshold()), ('1', Normalizer(norm='max')),
                ('2', SelectFwe(alpha=0.0015733813186325273)),
                ('3',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        max_features='sqrt', min_samples_leaf=2,
                                        min_samples_split=4, n_estimators=99,
                                        random_state=2))]))
('9', Pipeline(steps=[('0', RobustScaler(with_scaling=False)),
                ('1',
                 MLPClassifier(activation='tanh', alpha=0.07205372586744105,
                               learning_rate_init=0.21612078019606798,
                               random_state=2, solver='sgd'))]))


{'accuracy_score': 0.9391304347826087, 'balanced_accuracy_score': 0.7671957671957672, 'macro_precision_score': 0.735981308411215, 'macro_recall_score': 0.7671957671957672, 'macro_f1_score': 0.7503875968992249, 'micro_precision_score': 0.9391304347826087, 'micro_recall_score': 0.9391304347826087, 'micro_f1_score': 0.9391304347826087}
('0', Pipeline(steps=[('0',
                 SGDClassifier(alpha=1.3966760414273287e-06, average=True,
                               class_weight='balanced',
                               epsilon=0.028972981970981474,
                               eta0=7.717368754878228e-07,
                               l1_ratio=0.002112674807192259,
                               loss='modified_huber', power_t=0.689191362104117,
                               random_state=5, tol=0.02859532678017548))]))
('1', Pipeline(steps=[('0', SimpleImputer(strategy='median')),
                ('1', TruncatedSVD(algorithm='arpack', random_state=5)),
                ('2', Normalizer()),
                ('3',
                 SGDClassifier(alpha=1.2715307050836444e-06, average=True,
                               class_weight='balanced',
                               epsilon=0.052262245219984696,
                               eta0=0.005118474239169237,
                               l1_ratio=3.686056832376297e-07,
                               power_t=0.0560689400127809, random_state=5,
                               tol=0.004336514149074042))]))
('2', Pipeline(steps=[('0', StandardScaler()),
                ('1',
                 PassiveAggressiveClassifier(C=8.234105900303557,
                                             fit_intercept=False,
                                             random_state=5))]))
('3', Pipeline(steps=[('0', FastICA(n_components=21, random_state=5)),
                ('1', MaxAbsScaler()),
                ('2', BernoulliNB(alpha=0.11229845394788457))]))
('4', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1', SelectFwe(alpha=0.01198700798107129)),
                ('2',
                 ExtraTreesClassifier(class_weight='balanced_subsample',
                                      max_features='sqrt', min_samples_leaf=15,
                                      min_samples_split=19, n_estimators=43,
                                      random_state=5))]))
('5', Pipeline(steps=[('0', MinMaxScaler()),
                ('1',
                 SGDClassifier(alpha=9.280602934343308e-07, average=True,
                               epsilon=0.04357506331703918,
                               eta0=9.823555552565691e-05,
                               l1_ratio=2.3651230451774014e-08,
                               loss='squared_hinge', power_t=0.6398314890370311,
                               random_state=5, tol=0.07876484469090392))]))
('6', Pipeline(steps=[('0', VarianceThreshold()),
                ('1',
                 ExtraTreesClassifier(class_weight='balanced',
                                      criterion='entropy', max_features='sqrt',
                                      min_samples_leaf=13, min_samples_split=16,
                                      n_estimators=51, random_state=5))]))
('7', Pipeline(steps=[('0',
                 RandomForestClassifier(class_weight='balanced_subsample',
                                        criterion='entropy',
                                        max_features='sqrt',
                                        min_samples_leaf=19,
                                        min_samples_split=18, n_estimators=68,
                                        random_state=5))]))
('8', Pipeline(steps=[('0', PCA(n_components=0.850412972677814, random_state=5)),
                ('1', SimpleImputer(strategy='median')),
                ('2', Normalizer(norm='l1')),
                ('3',
                 SGDClassifier(alpha=2.949605905127477e-06,
                               epsilon=0.0003574260806642262,
                               eta0=4.437732152243649e-06,
                               l1_ratio=0.0009785067907243465,
                               loss='squared_hinge',
                               power_t=0.03460458459692385, random_state=5,
                               tol=0.00014146400409917507))]))
('9', Pipeline(steps=[('0', StandardScaler(with_mean=False)),
                ('1',
                 FastICA(algorithm='deflation', fun='exp', n_components=20,
                         random_state=5)),
                ('2', Normalizer()),
                ('3', GaussianNB(var_smoothing=0.0022303211887256705))]))

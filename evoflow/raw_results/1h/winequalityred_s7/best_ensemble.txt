['5', '4', '3', '3', '5', '3', '4', '6', '3', '2', '3', '3', '5', '3', '5', '3', '5', '3', '5', '3', '5', '5', '3', '3', '3', '5', '3', '4', '5', '3', '5', '4', '3', '6', '4', '3', '3', '3', '3', '1', '3', '5', '3', '4', '3', '3', '4', '3', '3', '3', '3', '5', '4', '3', '6', '4', '3', '4', '2', '3', '3', '3', '4', '3', '3', '5', '2', '5', '3', '3', '3', '3', '3', '3', '3', '3', '4', '4', '3', '3', '4', '3', '3', '4', '4', '1', '5', '5', '1', '4', '5', '5', '2', '6', '3', '5', '2', '2', '4', '3', '3', '3', '4', '5', '3', '5', '1', '5', '3', '4', '3', '3', '3', '5', '4', '3', '5', '1', '3', '3', '4', '2', '5', '5', '4', '4', '4', '4', '1', '5', '3', '6', '4', '5', '3', '3', '4', '3', '5', '4', '3', '3', '3', '3', '5', '2', '3', '5', '3', '3', '5', '2', '3', '3', '3', '1', '3', '3', '4', '4', '5', '5', '3', '5', '3', '4', '3', '3', '3', '4', '4', '3', '3', '4', '5', '2', '3', '4', '5', '4', '6', '4', '4', '3', '3', '6', '5', '5', '4', '5', '3', '3', '3', '3', '3', '3', '6', '3', '3', '2', '4', '3', '3', '5', '5', '5', '4', '5', '3', '3', '3', '5', '3', '5', '3', '1', '5', '3', '3', '2', '3', '4', '4', '3', '4', '3', '3', '5', '3', '2', '5', '3', '2', '3', '3', '3', '3', '3', '3', '3', '3', '5', '4', '4', '3', '2', '2', '4', '4', '3', '2', '3', '3', '5', '3', '4', '2', '3', '2', '3', '3', '3', '5', '4', '4', '3', '4', '6', '5', '6', '2', '5', '3', '5', '4', '5', '4', '3', '2', '3', '3', '3', '3', '4', '3', '4', '4', '4', '3', '4', '3', '3', '3', '3', '3', '5', '4', '2', '3', '3', '4', '5', '3', '4', '5', '5', '3', '3', '3', '4', '3', '2', '4', '4', '3', '5', '3', '3', '3', '3', '3', '4', '3', '5', '4', '2', '4', '3', '3', '3', '3', '5', '3', '2', '1', '3', '3', '4', '5', '5', '3', '3', '1', '3', '3', '3', '4', '5', '4', '4', '5', '4', '3', '4', '5', '5', '5', '5', '4', '6', '4', '3', '3', '3', '3', '4', '4', '3', '3', '2', '3', '5', '3', '3', '4', '5', '4', '4', '1', '3', '4', '3', '3', '3', '5', '3', '3', '3', '4', '1', '4', '3', '3', '3', '2', '5', '3', '4', '3', '4', '4', '3', '1', '4', '4', '3', '3', '4', '4', '5', '5', '3', '5', '3', '3', '3', '3', '3', '3', '2', '5', '3', '4', '5', '3', '3', '5', '3', '1', '3', '3', '5', '3', '6', '4', '5', '3', '3', '4', '3', '3', '3', '3', '5', '3', '5', '3', '3', '4', '3', '5', '3', '5', '5', '3', '3', '3', '6', '3', '3', '3', '3', '5', '4', '3', '3', '3', '5', '6', '3', '5', '3', '5', '3', '5', '5', '3', '1', '4', '3', '5', '3', '3', '3', '4', '3', '3', '4', '2', '3', '3', '3', '3', '3', '4', '3', '5', '3', '4', '5', '3', '5', '6', '4', '5', '2', '3', '3', '4', '3', '5', '4', '5', '5', '4', '1', '5', '4', '5', '3', '3', '4', '3', '1', '4', '2', '6', '3', '5', '4', '5', '3', '4']
{'accuracy_score': 0.5309568480300187, 'balanced_accuracy_score': 0.3849359972707991, 'macro_precision_score': 0.3288695746320027, 'macro_recall_score': 0.3849359972707991, 'macro_f1_score': 0.3331842522969228, 'micro_precision_score': 0.5309568480300187, 'micro_recall_score': 0.5309568480300187, 'micro_f1_score': 0.5309568480300187}
('0', Pipeline(steps=[('0', MinMaxScaler()),
                ('1', SelectPercentile(percentile=38.234705906038975)),
                ('2', MaxAbsScaler()),
                ('3',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        criterion='entropy',
                                        max_features='sqrt',
                                        min_samples_leaf=18,
                                        min_samples_split=6, n_estimators=63,
                                        random_state=7))]))
('1', Pipeline(steps=[('0', MinMaxScaler()), ('1', MaxAbsScaler()),
                ('2',
                 SGDClassifier(alpha=0.00024019129490846766,
                               class_weight='balanced',
                               epsilon=1.4396043849136152e-05,
                               eta0=0.019968262994192326,
                               l1_ratio=9.05655359511617e-09, loss='perceptron',
                               power_t=0.894495474261665, random_state=7,
                               tol=0.03986936425726789))]))
('2', Pipeline(steps=[('0', VarianceThreshold()), ('1', MinMaxScaler()),
                ('2',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        criterion='entropy',
                                        max_features='sqrt',
                                        min_samples_leaf=14,
                                        min_samples_split=9, n_estimators=21,
                                        random_state=7))]))
('3', Pipeline(steps=[('0', StandardScaler()),
                ('1',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        criterion='entropy',
                                        max_features='log2',
                                        min_samples_leaf=16, n_estimators=12,
                                        random_state=7))]))
('4', Pipeline(steps=[('0', MinMaxScaler()),
                ('1',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        criterion='entropy',
                                        max_features='sqrt',
                                        min_samples_leaf=18,
                                        min_samples_split=8, n_estimators=20,
                                        random_state=7))]))
('5', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1',
                 SMOTETomek(random_state=7, sampling_strategy='not minority')),
                ('2', RobustScaler()),
                ('3',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        criterion='entropy',
                                        max_features='log2',
                                        min_samples_leaf=18,
                                        min_samples_split=18, n_estimators=77,
                                        random_state=7))]))
('6', Pipeline(steps=[('0', VarianceThreshold()), ('1', MinMaxScaler()),
                ('2', StandardScaler(with_mean=False)),
                ('3',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        criterion='entropy',
                                        max_features='sqrt',
                                        min_samples_leaf=11,
                                        min_samples_split=3, n_estimators=34,
                                        random_state=7))]))
('7', Pipeline(steps=[('0', VarianceThreshold()), ('1', MinMaxScaler()),
                ('2',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        criterion='entropy',
                                        max_features='sqrt',
                                        min_samples_leaf=14,
                                        min_samples_split=4, n_estimators=21,
                                        random_state=7))]))
('8', Pipeline(steps=[('0', KNNImputer(n_neighbors=10)), ('1', MaxAbsScaler()),
                ('2', StandardScaler()),
                ('3',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        criterion='entropy',
                                        max_features='sqrt',
                                        min_samples_leaf=18,
                                        min_samples_split=6, n_estimators=30,
                                        random_state=7))]))
('9', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced_subsample',
                                        criterion='entropy',
                                        max_features='sqrt',
                                        min_samples_leaf=10, n_estimators=34,
                                        random_state=7))]))

['POX', 'NUC', 'CYT', 'CYT', 'CYT', 'EXC', 'CYT', 'CYT', 'EXC', 'ME1', 'EXC', 'ME2', 'MIT', 'ME1', 'CYT', 'CYT', 'CYT', 'MIT', 'MIT', 'NUC', 'ME3', 'CYT', 'CYT', 'ME1', 'MIT', 'MIT', 'MIT', 'POX', 'ME3', 'NUC', 'ME1', 'ME3', 'CYT', 'CYT', 'CYT', 'POX', 'NUC', 'MIT', 'CYT', 'MIT', 'ME3', 'CYT', 'NUC', 'CYT', 'NUC', 'CYT', 'MIT', 'NUC', 'CYT', 'NUC', 'CYT', 'NUC', 'NUC', 'MIT', 'CYT', 'MIT', 'POX', 'NUC', 'CYT', 'ME1', 'ME1', 'MIT', 'MIT', 'ME3', 'MIT', 'MIT', 'MIT', 'EXC', 'MIT', 'NUC', 'EXC', 'VAC', 'CYT', 'ME2', 'CYT', 'MIT', 'EXC', 'EXC', 'CYT', 'CYT', 'CYT', 'NUC', 'ME3', 'POX', 'CYT', 'NUC', 'NUC', 'NUC', 'MIT', 'NUC', 'ME3', 'NUC', 'ME3', 'CYT', 'ME3', 'NUC', 'CYT', 'ME2', 'CYT', 'CYT', 'ME3', 'ME3', 'NUC', 'EXC', 'ERL', 'NUC', 'CYT', 'ME3', 'ME3', 'POX', 'ME3', 'ME1', 'ME1', 'CYT', 'ME3', 'ME3', 'ME1', 'NUC', 'NUC', 'NUC', 'MIT', 'ME3', 'MIT', 'NUC', 'ME3', 'CYT', 'NUC', 'CYT', 'NUC', 'CYT', 'CYT', 'NUC', 'VAC', 'ME2', 'NUC', 'NUC', 'MIT', 'MIT', 'CYT', 'CYT', 'NUC', 'MIT', 'NUC', 'CYT', 'NUC', 'NUC', 'MIT', 'MIT', 'ME3', 'NUC', 'CYT', 'NUC', 'MIT', 'MIT', 'MIT', 'NUC', 'CYT', 'ME3', 'ME3', 'CYT', 'MIT', 'MIT', 'CYT', 'MIT', 'CYT', 'NUC', 'ME1', 'ME3', 'NUC', 'MIT', 'ME1', 'NUC', 'ERL', 'MIT', 'ME3', 'ME2', 'ME2', 'NUC', 'NUC', 'NUC', 'ME3', 'ME3', 'ME2', 'CYT', 'NUC', 'NUC', 'ME3', 'ME2', 'CYT', 'MIT', 'MIT', 'MIT', 'MIT', 'CYT', 'CYT', 'MIT', 'ME3', 'NUC', 'NUC', 'MIT', 'CYT', 'NUC', 'NUC', 'NUC', 'MIT', 'MIT', 'CYT', 'MIT', 'CYT', 'CYT', 'MIT', 'MIT', 'MIT', 'ME3', 'MIT', 'NUC', 'MIT', 'MIT', 'CYT', 'MIT', 'ME3', 'NUC', 'NUC', 'EXC', 'ME3', 'MIT', 'NUC', 'ME3', 'CYT', 'ME2', 'NUC', 'CYT', 'EXC', 'NUC', 'ME2', 'ME3', 'ME1', 'CYT', 'NUC', 'CYT', 'MIT', 'CYT', 'CYT', 'CYT', 'NUC', 'ME3', 'NUC', 'POX', 'NUC', 'MIT', 'NUC', 'POX', 'MIT', 'CYT', 'EXC', 'CYT', 'NUC', 'NUC', 'NUC', 'ME1', 'ME2', 'ME3', 'NUC', 'NUC', 'CYT', 'CYT', 'ME3', 'CYT', 'ME2', 'MIT', 'CYT', 'NUC', 'CYT', 'MIT', 'NUC', 'CYT', 'NUC', 'NUC', 'NUC', 'MIT', 'MIT', 'MIT', 'NUC', 'CYT', 'ME3', 'CYT', 'ME2', 'CYT', 'NUC', 'CYT', 'MIT', 'NUC', 'NUC', 'MIT', 'NUC', 'NUC', 'MIT', 'CYT', 'NUC', 'NUC', 'CYT', 'MIT', 'CYT', 'CYT', 'NUC', 'CYT', 'CYT', 'CYT', 'NUC', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'NUC', 'CYT', 'CYT', 'CYT', 'MIT', 'CYT', 'MIT', 'NUC', 'MIT', 'CYT', 'CYT', 'CYT', 'MIT', 'MIT', 'CYT', 'MIT', 'MIT', 'MIT', 'ME2', 'CYT', 'NUC', 'CYT', 'CYT', 'NUC', 'MIT', 'ME3', 'ME3', 'NUC', 'EXC', 'NUC', 'MIT', 'MIT', 'NUC', 'CYT', 'CYT', 'ME3', 'CYT', 'NUC', 'CYT', 'ME3', 'ME3', 'NUC', 'MIT', 'ME3', 'CYT', 'CYT', 'ME3', 'MIT', 'NUC', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'NUC', 'NUC', 'CYT', 'MIT', 'NUC', 'CYT', 'ME3', 'ME3', 'EXC', 'ME3', 'ME1', 'NUC', 'MIT', 'NUC', 'NUC', 'ME1', 'NUC', 'CYT', 'CYT', 'MIT', 'CYT', 'CYT', 'CYT', 'CYT', 'NUC', 'NUC', 'NUC', 'CYT', 'MIT', 'NUC', 'NUC', 'NUC', 'NUC', 'CYT', 'ME1', 'ME1', 'CYT', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'ME3', 'CYT', 'NUC', 'CYT', 'ME1', 'VAC', 'ME1', 'NUC', 'ME1', 'CYT', 'ME3', 'POX', 'ME1', 'ME3', 'ME3', 'ME3', 'ME3', 'ME3', 'ME3', 'MIT', 'NUC', 'ME3', 'MIT', 'NUC', 'CYT', 'CYT', 'NUC', 'CYT', 'ME2']
{'accuracy_score': 0.5910112359550562, 'balanced_accuracy_score': 0.5995786412943608, 'macro_precision_score': 0.5294082317663151, 'macro_recall_score': 0.5396207771649247, 'macro_f1_score': 0.5241404623078274, 'micro_precision_score': 0.5910112359550562, 'micro_recall_score': 0.5910112359550562, 'micro_f1_score': 0.5910112359550562}
('0', Pipeline(steps=[('0', SimpleImputer(strategy='median')),
                ('1',
                 RandomOverSampler(random_state=75549,
                                   sampling_strategy='not majority')),
                ('2',
                 QuadraticDiscriminantAnalysis(reg_param=0.7790579571127967))]))
('1', Pipeline(steps=[('0', MinMaxScaler()), ('1', MaxAbsScaler()),
                ('2', KNNImputer(n_neighbors=6, weights='distance')),
                ('3',
                 ExtraTreesClassifier(bootstrap=True,
                                      class_weight='balanced_subsample',
                                      criterion='entropy', max_features='sqrt',
                                      min_samples_leaf=2, min_samples_split=17,
                                      n_estimators=64, random_state=75549))]))
('2', Pipeline(steps=[('0', StandardScaler(with_mean=False)),
                ('1',
                 ExtraTreesClassifier(bootstrap=True,
                                      class_weight='balanced_subsample',
                                      max_features='sqrt', min_samples_leaf=2,
                                      min_samples_split=9, n_estimators=40,
                                      random_state=75549))]))
('3', Pipeline(steps=[('0',
                 RBFSampler(gamma=0.002776921155811946, n_components=11,
                            random_state=75549)),
                ('1', VarianceThreshold()),
                ('2',
                 ExtraTreesClassifier(bootstrap=True, class_weight='balanced',
                                      max_features='log2', min_samples_leaf=3,
                                      min_samples_split=17, n_estimators=64,
                                      random_state=75549))]))
('4', Pipeline(steps=[('0', VarianceThreshold()), ('1', MinMaxScaler()),
                ('2', MaxAbsScaler()),
                ('3', KNNImputer(n_neighbors=9, weights='distance')),
                ('4',
                 ExtraTreesClassifier(class_weight='balanced',
                                      criterion='entropy', max_features='log2',
                                      min_samples_leaf=3, min_samples_split=19,
                                      n_estimators=15, random_state=75549))]))
('5', Pipeline(steps=[('0', MinMaxScaler()), ('1', MaxAbsScaler()),
                ('2', KNNImputer(n_neighbors=4, weights='distance')),
                ('3',
                 ExtraTreesClassifier(bootstrap=True,
                                      class_weight='balanced_subsample',
                                      criterion='entropy', max_features='sqrt',
                                      min_samples_leaf=2, min_samples_split=17,
                                      n_estimators=64, random_state=75549))]))
('6', Pipeline(steps=[('0', VarianceThreshold()), ('1', MinMaxScaler()),
                ('2',
                 FastICA(algorithm='deflation', fun='exp', n_components=11,
                         random_state=75549, whiten=False)),
                ('3',
                 ExtraTreesClassifier(class_weight='balanced_subsample',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=4, n_estimators=64,
                                      random_state=75549))]))
('7', Pipeline(steps=[('0',
                 RBFSampler(gamma=0.17225274787797346, n_components=48,
                            random_state=75549)),
                ('1', VarianceThreshold()),
                ('2',
                 ExtraTreesClassifier(bootstrap=True,
                                      class_weight='balanced_subsample',
                                      max_features='sqrt', min_samples_leaf=3,
                                      min_samples_split=10, n_estimators=84,
                                      random_state=75549))]))
('8', Pipeline(steps=[('0', VarianceThreshold()), ('1', MinMaxScaler()),
                ('2',
                 FastICA(algorithm='deflation', fun='exp', n_components=45,
                         random_state=75549, whiten=False)),
                ('3',
                 ExtraTreesClassifier(bootstrap=True, class_weight='balanced',
                                      criterion='entropy', max_features='sqrt',
                                      min_samples_leaf=2, min_samples_split=17,
                                      n_estimators=64, random_state=75549))]))
('9', Pipeline(steps=[('0', MinMaxScaler()), ('1', MaxAbsScaler()),
                ('2', KNNImputer(n_neighbors=3)),
                ('3',
                 ExtraTreesClassifier(bootstrap=True,
                                      class_weight='balanced_subsample',
                                      criterion='entropy', max_features='sqrt',
                                      min_samples_leaf=2, min_samples_split=17,
                                      n_estimators=64, random_state=75549))]))

['0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '2', '2', '2', '2', '2', '2', '2', '3', '1', '3', '3', '1', '4', '4', '4', '4', '4', '5', '5', '5', '5', '5', '5', '6', '6', '6', '6', '6', '6', '7', '7', '7', '7', '7', '8', '8', '8', '8', '9', '9', '4', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '2', '2', '2', '2', '3', '3', '7', '3', '3', '3', '3', '3', '6', '1', '4', '4', '4', '4', '4', '4', '5', '5', '5', '5', '6', '6', '6', '6', '7', '7', '7', '7', '7', '7', '7', '7', '8', '8', '8', '8', '9', '9', '9', '9', '0', '0', '0', '0', '2', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '2', '9', '3', '3', '3', '3', '4', '4', '4', '4', '4', '1', '4', '4', '4', '4', '5', '5', '5', '5', '5', '5', '6', '6', '6', '6', '6', '6', '6', '7', '7', '7', '7', '7', '8', '8', '8', '8', '8', '1', '8', '8', '9', '9', '9', '9', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '2', '2', '2', '2', '2', '2', '2', '2', '2', '5', '3', '3', '3', '3', '3', '3', '4', '4', '2', '4', '4', '1', '4', '4', '4', '4', '5', '5', '6', '6', '6', '6', '6', '6', '6', '6', '4', '7', '7', '7', '7', '7', '7', '7', '8', '8', '8', '8', '8', '9', '9', '0', '9', '9', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '4', '1', '1', '1', '1', '1', '1', '1', '2', '2', '2', '2', '2', '2', '2', '2', '2', '2', '2', '2', '3', '3', '3', '3', '3', '3', '3', '3', '4', '4', '4', '4', '4', '4', '4', '4', '4', '5', '5', '5', '5', '5', '5', '5', '5', '5', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '8', '8', '8', '8', '8', '8', '8', '8', '8', '8', '8', '8', '8', '5', '9', '9', '2', '9', '9', '9', '9', '9', '8', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '2', '1', '1', '1', '1', '1', '1', '1', '2', '2', '4', '3', '4', '2', '2', '2', '3', '3', '3', '3', '3', '3', '3', '3', '3', '3', '4', '4', '1', '4', '4', '4', '4', '4', '4', '5', '9', '5', '5', '5', '9', '5', '5', '5', '5', '5', '5', '5', '5', '6', '6', '6', '6', '6', '6', '0', '6', '6', '6', '6', '6', '6', '7', '7', '7', '7', '1', '7', '7', '7', '7', '7', '7', '7', '7', '8', '8', '8', '8', '8', '8', '8', '9', '8', '8', '3', '8', '8', '9', '9', '9', '9', '9', '9', '9', '9', '9', '3', '9']
{'accuracy_score': 0.9287211740041929, 'balanced_accuracy_score': 0.9247661764126521, 'macro_precision_score': 0.9271476050385663, 'macro_recall_score': 0.9247661764126521, 'macro_f1_score': 0.9256031373174819, 'micro_precision_score': 0.9287211740041929, 'micro_recall_score': 0.9287211740041929, 'micro_f1_score': 0.9287211740041929}
('0', Pipeline(steps=[('0', MinMaxScaler()),
                ('1',
                 MLPClassifier(activation='tanh', alpha=0.000290917170563442,
                               learning_rate_init=0.01813058213023751,
                               random_state=67949))]))
('1', Pipeline(steps=[('0', KNNImputer(n_neighbors=9)), ('1', MaxAbsScaler()),
                ('2', SimpleImputer(strategy='most_frequent')),
                ('3',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_samples_split=5, n_estimators=71,
                                        random_state=67949))]))
('2', Pipeline(steps=[('0', MaxAbsScaler()), ('1', MinMaxScaler()),
                ('2',
                 RandomOverSampler(random_state=67949,
                                   sampling_strategy='minority')),
                ('3',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_samples_split=5, n_estimators=71,
                                        random_state=67949))]))
('3', Pipeline(steps=[('0', SelectFwe(alpha=0.014365605719438275)),
                ('1', MaxAbsScaler()),
                ('2',
                 MLPClassifier(alpha=0.0711418888174602,
                               learning_rate_init=0.47843681832336354,
                               random_state=67949, solver='sgd'))]))
('4', Pipeline(steps=[('0', MinMaxScaler()),
                ('1',
                 SMOTETomek(random_state=67949,
                            sampling_strategy='not majority')),
                ('2',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_samples_split=5, n_estimators=71,
                                        random_state=67949))]))
('5', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1',
                 RandomForestClassifier(bootstrap=False, max_features='log2',
                                        min_samples_split=5, n_estimators=71,
                                        random_state=67949))]))
('6', Pipeline(steps=[('0', KNNImputer(n_neighbors=7)), ('1', MaxAbsScaler()),
                ('2', SimpleImputer(strategy='most_frequent')),
                ('3',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_samples_split=5, n_estimators=71,
                                        random_state=67949))]))
('7', Pipeline(steps=[('0', MinMaxScaler()),
                ('1',
                 MLPClassifier(alpha=0.05485242776770049,
                               learning_rate_init=0.005344622165201753,
                               random_state=67949))]))
('8', Pipeline(steps=[('0', SelectFwe(alpha=0.0010863874120564504)),
                ('1', MaxAbsScaler()),
                ('2',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_samples_split=5, n_estimators=71,
                                        random_state=67949))]))
('9', Pipeline(steps=[('0',
                 MLPClassifier(activation='logistic', alpha=0.08003712624187492,
                               learning_rate_init=0.0011481689790616221,
                               random_state=67949, solver='lbfgs'))]))

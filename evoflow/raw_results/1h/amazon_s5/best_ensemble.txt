['Agresti', 'Agresti', 'Agresti', 'Agresti', 'Agresti', 'Agresti', 'Ashbacher', 'Ashbacher', 'Ashbacher', 'Ashbacher', 'Ashbacher', 'Cholette', 'Ashbacher', 'Power', 'Ashbacher', 'Ashbacher', 'Ashbacher', 'Riley', 'Ashbacher', 'Vision', 'Janson', 'Auken', 'Auken', 'Auken', 'Auken', 'Auken', 'Chachra', 'Auken', 'Auken', 'Auken', 'Blankenship', 'Blankenship', 'Blankenship', 'Blankenship', 'Blankenship', 'Blankenship', 'Brody', 'Brody', 'Janson', 'Brody', 'Brody', 'Brody', 'Brody', 'Morrison', 'Brown', 'Mitchell', 'Brown', 'Brown', 'Brown', 'Brown', 'Brown', 'Brown', 'Brown', 'Bukowsky', 'Bukowsky', 'Bukowsky', 'Bukowsky', 'Bukowsky', 'Davisson', 'Comdet', 'Bukowsky', 'Bukowsky', 'Bukowsky', 'Bukowsky', 'Bukowsky', 'Calvinnme', 'McKee', 'Calvinnme', 'Koenig', 'Nigam', 'Calvinnme', 'Calvinnme', 'CFH', 'CFH', 'CFH', 'CFH', 'Dent', 'CFH', 'CFH', 'CFH', 'CFH', 'CFH', 'CFH', 'Corn', 'Chachra', 'Chachra', 'Chachra', 'Chachra', 'Chachra', 'Chachra', 'Chachra', 'Chachra', 'Chandler', 'Chandler', 'Chandler', 'Chandler', 'Chandler', 'Chandler', 'Chandler', 'Chell', 'Chell', 'Chell', 'Chell', 'Chell', 'Walters', 'Chell', 'Chell', 'Chell', 'Comdet', 'Nigam', 'Cholette', 'Taylor', 'Cholette', 'Cholette', 'Cholette', 'Riley', 'Cholette', 'Comdet', 'Comdet', 'Comdet', 'Comdet', 'Comdet', 'Comdet', 'Chandler', 'Comdet', 'Comdet', 'Comdet', 'Corn', 'Corn', 'Corn', 'Corn', 'Goonan', 'Corn', 'Corn', 'Grove', 'Cutey', 'Cutey', 'Cutey', 'Cutey', 'Cutey', 'Cutey', 'Cutey', 'Cutey', 'Cutey', 'Cutey', 'Cutey', 'Cutey', 'Lovitt', 'Bukowsky', 'Davisson', 'Vision', 'Davisson', 'Davisson', 'Dent', 'Dent', 'Dent', 'Dent', 'Dent', 'Dent', 'Chandler', 'Mark', 'Dent', 'Dent', 'Engineer', 'Engineer', 'Engineer', 'Engineer', 'Engineer', 'Engineer', 'Engineer', 'Engineer', 'Engineer', 'Engineer', 'Engineer', 'Engineer', 'Goonan', 'Goonan', 'Goonan', 'Goonan', 'Goonan', 'Goonan', 'Goonan', 'Goonan', 'Goonan', 'Goonan', 'Goonan', 'Grove', 'Grove', 'Chandler', 'Shea', 'Grove', 'Chandler', 'Grove', 'Chachra', 'Grove', 'Harp', 'Harp', 'Harp', 'Harp', 'Harp', 'Harp', 'Harp', 'Hayes', 'Hayes', 'Hayes', 'Hayes', 'Hayes', 'Hayes', 'Hayes', 'Hayes', 'Hayes', 'Janson', 'Janson', 'Janson', 'Janson', 'Janson', 'Janson', 'Janson', 'Lovitt', 'Robert', 'Johnson', 'Johnson', 'Johnson', 'Johnson', 'Johnson', 'Johnson', 'Mark', 'Vernon', 'Koenig', 'Koenig', 'Koenig', 'Koenig', 'Koenig', 'Koenig', 'Koenig', 'Brown', 'Kolln', 'Kolln', 'Kolln', 'Kolln', 'Kolln', 'Kolln', 'Kolln', 'Kolln', 'Kolln', 'Kolln', 'Kolln', 'Lawyeraau', 'Lawyeraau', 'Lawyeraau', 'Lawyeraau', 'Lawyeraau', 'Messick', 'Lawyeraau', 'Davisson', 'Bukowsky', 'Lee', 'Chandler', 'Chell', 'Nigam', 'Lee', 'Lee', 'Wilson', 'Chell', 'Lee', 'Lee', 'Lee', 'Lovitt', 'Agresti', 'Agresti', 'Lovitt', 'Agresti', 'Lovitt', 'Lovitt', 'Neal', 'Lovitt', 'Goonan', 'Mahlers2nd', 'Mahlers2nd', 'Chandler', 'Mahlers2nd', 'Davisson', 'Mahlers2nd', 'Mahlers2nd', 'Mahlers2nd', 'Mahlers2nd', 'Riley', 'Mahlers2nd', 'Nigam', 'Mark', 'Mark', 'Mark', 'Mark', 'Chandler', 'Mark', 'Mark', 'Mark', 'Messick', 'McKee', 'Comdet', 'McKee', 'Comdet', 'Goonan', 'McKee', 'McKee', 'McKee', 'McKee', 'McKee', 'Merritt', 'Merritt', 'Merritt', 'Merritt', 'Merritt', 'Merritt', 'Merritt', 'Merritt', 'Merritt', 'Peterson', 'Merritt', 'Merritt', 'Merritt', 'Messick', 'Messick', 'Messick', 'Messick', 'Lawyeraau', 'Messick', 'Messick', 'Mitchell', 'Mitchell', 'Mitchell', 'Mitchell', 'Mitchell', 'Mitchell', 'Morrison', 'Morrison', 'Morrison', 'Morrison', 'Morrison', 'Morrison', 'Morrison', 'Morrison', 'Morrison', 'Neal', 'Neal', 'Chandler', 'Neal', 'Neal', 'Neal', 'Neal', 'Neal', 'Neal', 'Nigam', 'Nigam', 'Calvinnme', 'Nigam', 'Nigam', 'Nigam', 'Nigam', 'Peterson', 'Peterson', 'Peterson', 'Power', 'Power', 'Power', 'Power', 'Power', 'Power', 'Power', 'Power', 'Power', 'Corn', 'Riley', 'Riley', 'Riley', 'Riley', 'Riley', 'Riley', 'Riley', 'Corn', 'Cholette', 'Robert', 'Robert', 'Robert', 'Bukowsky', 'Robert', 'Robert', 'Robert', 'Shea', 'Shea', 'Shea', 'Brown', 'Nigam', 'Shea', 'Shea', 'Lovitt', 'Shea', 'Shea', 'Mark', 'Sherwin', 'Sherwin', 'Sherwin', 'Chandler', 'Sherwin', 'Sherwin', 'Sherwin', 'Sherwin', 'Sherwin', 'Sherwin', 'Sherwin', 'Brown', 'Taylor', 'Taylor', 'Taylor', 'Taylor', 'Taylor', 'Taylor', 'Taylor', 'Taylor', 'Vernon', 'Bukowsky', 'Wilson', 'Vernon', 'Vernon', 'Vision', 'Vision', 'Goonan', 'Vision', 'Vision', 'Vision', 'Vision', 'Walters', 'Walters', 'Walters', 'Walters', 'Walters', 'Walters', 'Walters', 'Wilson', 'Wilson', 'Wilson', 'Wilson', 'Lovitt', 'Wilson', 'Wilson', 'Wilson', 'Wilson', 'Wilson', 'Wilson', 'Wilson']
{'accuracy_score': 0.8266666666666667, 'balanced_accuracy_score': 0.8319402819402818, 'macro_precision_score': 0.8349737762237762, 'macro_recall_score': 0.8319402819402818, 'macro_f1_score': 0.8217374796095754, 'micro_precision_score': 0.8266666666666667, 'micro_recall_score': 0.8266666666666667, 'micro_f1_score': 0.8266666666666667}
('0', Pipeline(steps=[('0', MinMaxScaler()),
                ('1',
                 LinearSVC(C=0.31623579930736995, class_weight='balanced',
                           loss='hinge', random_state=5,
                           tol=8.121072408059201e-05))]))
('1', Pipeline(steps=[('0', MaxAbsScaler()), ('1', VarianceThreshold()),
                ('2',
                 PassiveAggressiveClassifier(C=0.2970047240523772,
                                             fit_intercept=False,
                                             loss='squared_hinge',
                                             random_state=5))]))
('2', Pipeline(steps=[('0', SelectPercentile(percentile=82.85278352794909)),
                ('1', VarianceThreshold()), ('2', MaxAbsScaler()),
                ('3',
                 MultinomialNB(alpha=0.29914603013208235, fit_prior=False))]))
('3', Pipeline(steps=[('0', VarianceThreshold()), ('1', MaxAbsScaler()),
                ('2',
                 MLPClassifier(alpha=0.0003408972273638195,
                               learning_rate_init=0.0016792109663349595,
                               random_state=5))]))
('4', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1', SelectFwe(alpha=0.035684163521930275)),
                ('2', MultinomialNB(alpha=0.6478878188809283))]))
('5', Pipeline(steps=[('0', SelectPercentile(percentile=23.052176291804173)),
                ('1', MinMaxScaler()),
                ('2', BernoulliNB(alpha=0.6774712292792988))]))
('6', Pipeline(steps=[('0', BernoulliNB(alpha=0.086670112547495, fit_prior=False))]))
('7', Pipeline(steps=[('0', BernoulliNB(alpha=0.020942449155473657))]))
('8', Pipeline(steps=[('0', SMOTE(random_state=5, sampling_strategy='minority')),
                ('1', BernoulliNB(alpha=0.08504028120102332))]))
('9', Pipeline(steps=[('0',
                 MultinomialNB(alpha=0.9523726141284393, fit_prior=False))]))

['-1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '1', '-1', '-1', '-1', '-1', '1', '1', '-1', '-1', '1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '1', '1', '1', '1', '-1', '-1', '-1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '1', '1', '-1', '-1', '-1', '-1', '-1', '1', '1', '1', '1', '1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '1', '1', '1', '1', '1', '1', '1', '-1', '1', '1', '-1', '1', '-1', '-1', '-1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '1', '1', '-1', '-1', '1', '-1', '-1', '1', '1', '-1', '-1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '1', '1', '-1', '-1', '1', '1', '-1', '-1', '1', '1', '-1', '-1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '1', '-1', '1', '1', '1', '-1', '1', '1', '1', '-1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '-1', '1', '-1', '1', '1', '-1', '1', '-1', '-1', '1', '-1', '-1', '1', '1', '1', '1', '1', '1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '1', '-1', '1', '-1', '-1', '1', '1', '1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '-1', '1', '1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '1', '1', '1', '1', '-1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '1', '-1', '1', '1', '-1', '-1', '1', '1', '1', '1', '1', '1', '-1', '-1', '-1', '-1', '1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '1', '1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '-1', '1', '1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '1', '-1', '-1', '1', '1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '-1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '1', '-1', '1', '-1', '1', '1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '1', '1', '-1', '1', '-1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '1', '1', '-1', '-1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '-1', '-1', '1', '1', '-1', '1', '-1', '-1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '-1', '1', '1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '1', '1', '1', '1', '1', '-1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '1', '1', '-1', '-1', '1', '-1', '1', '1', '1', '-1', '1', '-1', '1', '-1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '1', '1', '-1', '1', '1']
{'accuracy_score': 0.8371794871794872, 'balanced_accuracy_score': 0.8374842204923206, 'macro_precision_score': 0.8420289855072465, 'macro_recall_score': 0.8374842204923206, 'macro_f1_score': 0.8366831478309327, 'micro_precision_score': 0.8371794871794872, 'micro_recall_score': 0.8371794871794872, 'micro_f1_score': 0.8371794871794873}
('0', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1',
                 FeatureAgglomeration(affinity='cosine', linkage='average',
                                      n_clusters=22)),
                ('2',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2', min_samples_leaf=2,
                                        min_samples_split=19, n_estimators=67,
                                        random_state=1))]))
('1', Pipeline(steps=[('0', VarianceThreshold()), ('1', MaxAbsScaler()),
                ('2',
                 FeatureAgglomeration(affinity='cosine', linkage='complete',
                                      n_clusters=22)),
                ('3',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_samples_leaf=13,
                                        min_samples_split=19, n_estimators=81,
                                        random_state=1))]))
('2', Pipeline(steps=[('0', VarianceThreshold()), ('1', MaxAbsScaler()),
                ('2',
                 FeatureAgglomeration(affinity='cosine', linkage='complete',
                                      n_clusters=22)),
                ('3',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        criterion='entropy',
                                        max_features='log2',
                                        min_samples_leaf=13,
                                        min_samples_split=19, n_estimators=81,
                                        random_state=1))]))
('3', Pipeline(steps=[('0',
                 FeatureAgglomeration(affinity='cosine', linkage='complete',
                                      n_clusters=9)),
                ('1',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced_subsample',
                                        criterion='entropy',
                                        max_features='log2',
                                        min_samples_leaf=13,
                                        min_samples_split=19, n_estimators=77,
                                        random_state=1))]))
('4', Pipeline(steps=[('0', VarianceThreshold()), ('1', MaxAbsScaler()),
                ('2',
                 FeatureAgglomeration(affinity='cosine', linkage='average',
                                      n_clusters=22)),
                ('3',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_samples_leaf=16,
                                        min_samples_split=19, n_estimators=81,
                                        random_state=1))]))
('5', Pipeline(steps=[('0',
                 SMOTE(k_neighbors=4, random_state=1,
                       sampling_strategy='not minority')),
                ('1', FeatureAgglomeration(linkage='complete', n_clusters=22)),
                ('2',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced_subsample',
                                        criterion='entropy',
                                        max_features='log2',
                                        min_samples_leaf=19,
                                        min_samples_split=19, n_estimators=81,
                                        random_state=1))]))
('6', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1',
                 FeatureAgglomeration(affinity='cosine', linkage='complete',
                                      n_clusters=22)),
                ('2',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='sqrt', min_samples_leaf=4,
                                      min_samples_split=12, n_estimators=84,
                                      random_state=1))]))
('7', Pipeline(steps=[('0', RobustScaler(with_scaling=False)),
                ('1',
                 SMOTE(k_neighbors=3, random_state=1,
                       sampling_strategy='not majority')),
                ('2', SelectFwe(alpha=0.012938570231949734)),
                ('3',
                 KNeighborsClassifier(n_neighbors=7, p=1, weights='distance'))]))
('8', Pipeline(steps=[('0', SelectPercentile(percentile=97.6587751512946)),
                ('1', MaxAbsScaler()),
                ('2',
                 FeatureAgglomeration(affinity='cosine', linkage='complete',
                                      n_clusters=22)),
                ('3',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='sqrt', min_samples_leaf=4,
                                      min_samples_split=12, n_estimators=84,
                                      random_state=1))]))
('9', Pipeline(steps=[('0',
                 KNeighborsClassifier(n_neighbors=28, p=1,
                                      weights='distance'))]))

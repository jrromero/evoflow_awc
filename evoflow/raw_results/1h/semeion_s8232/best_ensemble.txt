['0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '2', '2', '2', '2', '2', '2', '2', '3', '1', '3', '3', '1', '4', '4', '4', '4', '4', '5', '5', '5', '5', '5', '5', '6', '6', '6', '6', '6', '6', '7', '7', '7', '7', '7', '8', '8', '8', '8', '9', '9', '4', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '2', '2', '2', '2', '3', '3', '7', '3', '3', '3', '3', '3', '6', '1', '4', '4', '4', '4', '4', '4', '5', '5', '5', '5', '6', '6', '6', '6', '7', '7', '7', '7', '7', '7', '7', '7', '8', '8', '8', '8', '9', '9', '9', '9', '0', '0', '0', '0', '2', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '2', '9', '3', '3', '3', '3', '4', '4', '4', '4', '4', '1', '4', '4', '4', '4', '5', '5', '5', '5', '5', '5', '6', '6', '6', '6', '6', '6', '6', '7', '7', '7', '7', '7', '8', '8', '8', '8', '2', '1', '8', '8', '9', '9', '9', '9', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '2', '2', '2', '2', '2', '2', '2', '2', '2', '5', '3', '3', '3', '3', '3', '3', '4', '4', '2', '4', '4', '1', '4', '4', '4', '4', '5', '5', '6', '6', '6', '6', '6', '6', '6', '6', '4', '7', '7', '7', '7', '7', '7', '7', '8', '8', '8', '8', '8', '9', '9', '8', '9', '9', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '4', '1', '1', '1', '1', '1', '1', '7', '2', '2', '2', '2', '2', '2', '2', '2', '2', '2', '2', '2', '3', '3', '3', '3', '3', '3', '3', '3', '4', '4', '4', '4', '4', '4', '4', '4', '4', '5', '5', '5', '5', '5', '5', '5', '5', '5', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '8', '8', '8', '8', '8', '8', '8', '8', '8', '8', '8', '8', '8', '5', '9', '9', '3', '9', '9', '9', '9', '9', '8', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '2', '1', '1', '1', '1', '1', '1', '1', '2', '2', '4', '3', '4', '2', '2', '2', '3', '3', '3', '3', '3', '3', '3', '3', '3', '3', '4', '4', '4', '4', '4', '4', '4', '4', '4', '5', '9', '5', '5', '5', '9', '5', '5', '5', '5', '5', '5', '5', '5', '6', '6', '6', '6', '6', '6', '0', '6', '6', '6', '6', '6', '6', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '8', '8', '8', '8', '8', '8', '9', '8', '8', '9', '8', '8', '9', '9', '9', '9', '9', '9', '9', '9', '9', '3', '9']
{'accuracy_score': 0.9308176100628931, 'balanced_accuracy_score': 0.9265345392329989, 'macro_precision_score': 0.9275836204967793, 'macro_recall_score': 0.9265345392329989, 'macro_f1_score': 0.9269013479879498, 'micro_precision_score': 0.9308176100628931, 'micro_recall_score': 0.9308176100628931, 'micro_f1_score': 0.9308176100628931}
('0', Pipeline(steps=[('0', PCA(n_components=0.7883390444632883, random_state=8232)),
                ('1', SelectPercentile(percentile=45.29668937561993)),
                ('2',
                 QuadraticDiscriminantAnalysis(reg_param=0.0894109711576816))]))
('1', Pipeline(steps=[('0', VarianceThreshold()), ('1', MinMaxScaler()),
                ('2', SimpleImputer()),
                ('3',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        criterion='entropy',
                                        max_features='sqrt',
                                        min_samples_split=4, n_estimators=71,
                                        random_state=8232))]))
('2', Pipeline(steps=[('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt', min_samples_leaf=2,
                                        min_samples_split=3, n_estimators=62,
                                        random_state=8232))]))
('3', Pipeline(steps=[('0', MinMaxScaler()),
                ('1',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt', min_samples_leaf=2,
                                        min_samples_split=3, n_estimators=62,
                                        random_state=8232))]))
('4', Pipeline(steps=[('0', MinMaxScaler()), ('1', VarianceThreshold()),
                ('2',
                 RandomOverSampler(random_state=8232,
                                   sampling_strategy='not minority')),
                ('3',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        criterion='entropy',
                                        max_features='sqrt',
                                        min_samples_split=3, n_estimators=62,
                                        random_state=8232))]))
('5', Pipeline(steps=[('0', MinMaxScaler()), ('1', VarianceThreshold()),
                ('2',
                 RandomOverSampler(random_state=8232,
                                   sampling_strategy='not majority')),
                ('3',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_samples_split=4, n_estimators=62,
                                        random_state=8232))]))
('6', Pipeline(steps=[('0', MinMaxScaler()), ('1', MaxAbsScaler()),
                ('2', SimpleImputer(strategy='most_frequent')),
                ('3',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt', min_samples_leaf=2,
                                        min_samples_split=3, n_estimators=99,
                                        random_state=8232))]))
('7', Pipeline(steps=[('0',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_samples_split=4, n_estimators=62,
                                        random_state=8232))]))
('8', Pipeline(steps=[('0', MaxAbsScaler()), ('1', SimpleImputer()),
                ('2',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_samples_split=4, n_estimators=47,
                                        random_state=8232))]))
('9', Pipeline(steps=[('0', SelectPercentile(percentile=88.02443078021079)),
                ('1',
                 RandomForestClassifier(bootstrap=False, max_features='log2',
                                        min_samples_leaf=2, min_samples_split=4,
                                        n_estimators=71, random_state=8232))]))

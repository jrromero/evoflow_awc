['POX', 'NUC', 'CYT', 'NUC', 'CYT', 'EXC', 'CYT', 'CYT', 'CYT', 'ME1', 'ME1', 'ME2', 'MIT', 'ME1', 'CYT', 'CYT', 'CYT', 'MIT', 'MIT', 'NUC', 'ME3', 'CYT', 'CYT', 'ME1', 'MIT', 'MIT', 'MIT', 'POX', 'ME3', 'MIT', 'ME1', 'ME3', 'CYT', 'CYT', 'CYT', 'POX', 'NUC', 'MIT', 'NUC', 'MIT', 'ME3', 'NUC', 'NUC', 'CYT', 'NUC', 'CYT', 'MIT', 'NUC', 'CYT', 'NUC', 'CYT', 'NUC', 'NUC', 'MIT', 'CYT', 'MIT', 'POX', 'NUC', 'CYT', 'ME1', 'ME1', 'MIT', 'MIT', 'ME3', 'MIT', 'MIT', 'MIT', 'EXC', 'CYT', 'CYT', 'EXC', 'VAC', 'CYT', 'ME2', 'CYT', 'MIT', 'EXC', 'EXC', 'CYT', 'CYT', 'CYT', 'CYT', 'ME3', 'POX', 'CYT', 'NUC', 'CYT', 'NUC', 'MIT', 'CYT', 'ME3', 'NUC', 'ME3', 'CYT', 'ME3', 'NUC', 'CYT', 'ME2', 'CYT', 'CYT', 'ME3', 'ME3', 'NUC', 'EXC', 'ERL', 'NUC', 'CYT', 'ME3', 'ME3', 'POX', 'ME3', 'ME2', 'ME1', 'CYT', 'ME3', 'ME3', 'ME1', 'NUC', 'NUC', 'NUC', 'MIT', 'ME3', 'MIT', 'NUC', 'ME3', 'CYT', 'NUC', 'CYT', 'ME3', 'CYT', 'CYT', 'NUC', 'ME2', 'ME2', 'NUC', 'NUC', 'MIT', 'NUC', 'CYT', 'CYT', 'NUC', 'MIT', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'ME3', 'NUC', 'CYT', 'NUC', 'MIT', 'MIT', 'MIT', 'NUC', 'CYT', 'ME3', 'ME3', 'CYT', 'MIT', 'MIT', 'CYT', 'MIT', 'CYT', 'NUC', 'ME1', 'ME3', 'NUC', 'MIT', 'ME1', 'NUC', 'ERL', 'MIT', 'ME3', 'ME2', 'ME2', 'NUC', 'NUC', 'NUC', 'ME3', 'ME3', 'ME2', 'CYT', 'NUC', 'NUC', 'ME3', 'ME2', 'CYT', 'MIT', 'MIT', 'MIT', 'MIT', 'CYT', 'CYT', 'MIT', 'ME3', 'NUC', 'NUC', 'MIT', 'CYT', 'NUC', 'NUC', 'NUC', 'MIT', 'MIT', 'ME3', 'MIT', 'CYT', 'CYT', 'MIT', 'MIT', 'MIT', 'ME3', 'MIT', 'NUC', 'CYT', 'MIT', 'CYT', 'MIT', 'ME3', 'NUC', 'ME3', 'ME2', 'ME3', 'MIT', 'NUC', 'ME3', 'CYT', 'ME2', 'NUC', 'CYT', 'EXC', 'NUC', 'ME2', 'ME3', 'ME1', 'CYT', 'NUC', 'CYT', 'MIT', 'CYT', 'CYT', 'CYT', 'NUC', 'ME3', 'CYT', 'CYT', 'NUC', 'MIT', 'NUC', 'POX', 'MIT', 'CYT', 'EXC', 'CYT', 'CYT', 'NUC', 'CYT', 'ME1', 'ME2', 'ME3', 'NUC', 'NUC', 'CYT', 'CYT', 'ME3', 'CYT', 'ME2', 'MIT', 'CYT', 'NUC', 'CYT', 'MIT', 'NUC', 'CYT', 'NUC', 'NUC', 'CYT', 'MIT', 'MIT', 'MIT', 'NUC', 'CYT', 'ME3', 'CYT', 'ME2', 'CYT', 'NUC', 'CYT', 'MIT', 'NUC', 'NUC', 'MIT', 'NUC', 'NUC', 'ME3', 'CYT', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'NUC', 'ME3', 'CYT', 'CYT', 'NUC', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'MIT', 'CYT', 'MIT', 'NUC', 'MIT', 'CYT', 'CYT', 'CYT', 'MIT', 'MIT', 'CYT', 'MIT', 'MIT', 'MIT', 'ME2', 'CYT', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'ME3', 'ME3', 'CYT', 'EXC', 'NUC', 'MIT', 'MIT', 'CYT', 'CYT', 'CYT', 'ME3', 'CYT', 'NUC', 'CYT', 'ME3', 'ME3', 'NUC', 'MIT', 'ME3', 'CYT', 'CYT', 'ME3', 'MIT', 'NUC', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'NUC', 'NUC', 'CYT', 'MIT', 'NUC', 'CYT', 'ME3', 'ME3', 'EXC', 'ME3', 'ME1', 'NUC', 'MIT', 'NUC', 'NUC', 'ME1', 'NUC', 'CYT', 'CYT', 'MIT', 'CYT', 'CYT', 'CYT', 'CYT', 'NUC', 'NUC', 'NUC', 'CYT', 'MIT', 'NUC', 'NUC', 'NUC', 'NUC', 'CYT', 'ME1', 'ME1', 'CYT', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'ME3', 'CYT', 'CYT', 'CYT', 'ME1', 'CYT', 'ME1', 'NUC', 'ME1', 'CYT', 'ME3', 'POX', 'ME1', 'ME3', 'ME3', 'ME3', 'ME3', 'ME3', 'ME3', 'MIT', 'NUC', 'ME3', 'MIT', 'NUC', 'CYT', 'ME3', 'NUC', 'CYT', 'ME2']
{'accuracy_score': 0.597752808988764, 'balanced_accuracy_score': 0.5885908851473416, 'macro_precision_score': 0.5777800243029938, 'macro_recall_score': 0.5297317966326074, 'macro_f1_score': 0.5191454998288909, 'micro_precision_score': 0.597752808988764, 'micro_recall_score': 0.597752808988764, 'micro_f1_score': 0.597752808988764}
('0', Pipeline(steps=[('0',
                 ExtraTreesClassifier(bootstrap=True,
                                      class_weight='balanced_subsample',
                                      max_features='sqrt', min_samples_split=15,
                                      n_estimators=32, random_state=8))]))
('1', Pipeline(steps=[('0',
                 RandomForestClassifier(class_weight='balanced_subsample',
                                        criterion='entropy',
                                        max_features='log2', min_samples_leaf=2,
                                        min_samples_split=4, n_estimators=15,
                                        random_state=8))]))
('2', Pipeline(steps=[('0',
                 RBFSampler(gamma=0.04507871970789357, n_components=39,
                            random_state=8)),
                ('1', MaxAbsScaler()),
                ('2',
                 ExtraTreesClassifier(bootstrap=True,
                                      class_weight='balanced_subsample',
                                      criterion='entropy', max_features='log2',
                                      min_samples_split=17, n_estimators=47,
                                      random_state=8))]))
('3', Pipeline(steps=[('0', VarianceThreshold()), ('1', MinMaxScaler()),
                ('2', MaxAbsScaler()),
                ('3',
                 ExtraTreesClassifier(bootstrap=True, class_weight='balanced',
                                      max_features='log2', min_samples_leaf=3,
                                      min_samples_split=12, n_estimators=73,
                                      random_state=8))]))
('4', Pipeline(steps=[('0', MinMaxScaler()), ('1', MaxAbsScaler()),
                ('2',
                 ExtraTreesClassifier(bootstrap=True,
                                      class_weight='balanced_subsample',
                                      max_features='sqrt', min_samples_split=14,
                                      n_estimators=28, random_state=8))]))
('5', Pipeline(steps=[('0', MinMaxScaler()), ('1', MaxAbsScaler()),
                ('2',
                 ExtraTreesClassifier(bootstrap=True, class_weight='balanced',
                                      criterion='entropy', max_features='sqrt',
                                      min_samples_split=14, n_estimators=28,
                                      random_state=8))]))
('6', Pipeline(steps=[('0', Normalizer(norm='max')),
                ('1',
                 ExtraTreesClassifier(class_weight='balanced_subsample',
                                      criterion='entropy', max_features='sqrt',
                                      min_samples_leaf=13, min_samples_split=5,
                                      n_estimators=52, random_state=8))]))
('7', Pipeline(steps=[('0', MinMaxScaler()),
                ('1',
                 ExtraTreesClassifier(bootstrap=True, class_weight='balanced',
                                      max_features='log2', min_samples_split=14,
                                      n_estimators=31, random_state=8))]))
('8', Pipeline(steps=[('0', MaxAbsScaler()), ('1', VarianceThreshold()),
                ('2',
                 ExtraTreesClassifier(bootstrap=True, class_weight='balanced',
                                      criterion='entropy', max_features='log2',
                                      min_samples_split=18, n_estimators=32,
                                      random_state=8))]))
('9', Pipeline(steps=[('0', KNNImputer(n_neighbors=2, weights='distance')),
                ('1', MinMaxScaler()),
                ('2',
                 ExtraTreesClassifier(bootstrap=True, class_weight='balanced',
                                      criterion='entropy', max_features='log2',
                                      min_samples_leaf=3, min_samples_split=6,
                                      n_estimators=58, random_state=8))]))


{'accuracy_score': 0.7936170212765957, 'balanced_accuracy_score': 0.628456400973722, 'macro_precision_score': 0.5591787439613527, 'macro_recall_score': 0.628456400973722, 'macro_f1_score': 0.564228295051568, 'micro_precision_score': 0.7936170212765957, 'micro_recall_score': 0.7936170212765957, 'micro_f1_score': 0.7936170212765957}
('0', Pipeline(steps=[('0', SimpleImputer()),
                ('1',
                 SMOTE(k_neighbors=3, random_state=3,
                       sampling_strategy='not majority')),
                ('2',
                 RandomOverSampler(random_state=3,
                                   sampling_strategy='minority')),
                ('3',
                 DecisionTreeClassifier(class_weight='balanced',
                                        max_depth=1.1968924632599218,
                                        max_features=0.9518379952095687,
                                        min_samples_leaf=10,
                                        min_samples_split=8, random_state=3))]))
('1', Pipeline(steps=[('0', SimpleImputer()),
                ('1',
                 SMOTE(k_neighbors=3, random_state=3,
                       sampling_strategy='minority')),
                ('2',
                 RandomOverSampler(random_state=3,
                                   sampling_strategy='minority')),
                ('3',
                 DecisionTreeClassifier(class_weight='balanced',
                                        max_depth=1.1968924632599218,
                                        max_features=0.8158425882683641,
                                        min_samples_leaf=10,
                                        min_samples_split=18,
                                        random_state=3))]))
('2', Pipeline(steps=[('0', SimpleImputer()), ('1', StandardScaler(with_std=False)),
                ('2',
                 AdaBoostClassifier(algorithm='SAMME',
                                    learning_rate=1.9913511083017088,
                                    n_estimators=28, random_state=3))]))
('3', Pipeline(steps=[('0', SimpleImputer()), ('1', StandardScaler(with_mean=False)),
                ('2',
                 SMOTETomek(random_state=3, sampling_strategy='not majority')),
                ('3',
                 AdaBoostClassifier(algorithm='SAMME',
                                    learning_rate=0.11937193282578128,
                                    n_estimators=75, random_state=3))]))
('4', Pipeline(steps=[('0', SimpleImputer(strategy='median')),
                ('1', StandardScaler(with_std=False)),
                ('2',
                 AdaBoostClassifier(algorithm='SAMME',
                                    learning_rate=1.9913511083017088,
                                    n_estimators=32, random_state=3))]))
('5', Pipeline(steps=[('0', SimpleImputer()),
                ('1',
                 DecisionTreeClassifier(class_weight='balanced',
                                        max_depth=1.1968924632599218,
                                        max_features=0.8158425882683641,
                                        min_samples_leaf=10,
                                        min_samples_split=18,
                                        random_state=3))]))
('6', Pipeline(steps=[('0', SimpleImputer()), ('1', StandardScaler(with_mean=False)),
                ('2',
                 AdaBoostClassifier(algorithm='SAMME',
                                    learning_rate=1.9913511083017088,
                                    n_estimators=62, random_state=3))]))
('7', Pipeline(steps=[('0', SimpleImputer(strategy='most_frequent')),
                ('1',
                 SMOTE(k_neighbors=3, random_state=3,
                       sampling_strategy='not majority')),
                ('2',
                 RandomOverSampler(random_state=3,
                                   sampling_strategy='minority')),
                ('3',
                 DecisionTreeClassifier(criterion='entropy',
                                        max_depth=1.304199576145054,
                                        max_features=0.5686352332267375,
                                        min_samples_leaf=9, min_samples_split=8,
                                        random_state=3))]))
('8', Pipeline(steps=[('0', SimpleImputer(strategy='median')),
                ('1', StandardScaler(with_std=False)),
                ('2',
                 AdaBoostClassifier(algorithm='SAMME',
                                    learning_rate=1.9913511083017088,
                                    n_estimators=28, random_state=3))]))
('9', Pipeline(steps=[('0', SimpleImputer()),
                ('1',
                 SMOTE(k_neighbors=3, random_state=3,
                       sampling_strategy='minority')),
                ('2',
                 RandomOverSampler(random_state=3,
                                   sampling_strategy='minority')),
                ('3',
                 AdaBoostClassifier(algorithm='SAMME',
                                    learning_rate=0.1058970453281534,
                                    n_estimators=51, random_state=3))]))

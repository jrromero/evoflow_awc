
{'accuracy_score': 0.9449275362318841, 'balanced_accuracy_score': 0.6812169312169312, 'macro_precision_score': 0.7660768234786361, 'macro_recall_score': 0.6812169312169312, 'macro_f1_score': 0.7140676117775354, 'micro_precision_score': 0.9449275362318841, 'micro_recall_score': 0.9449275362318841, 'micro_f1_score': 0.9449275362318841}
('0', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1', PCA(n_components=0.7727993799238675, random_state=1)),
                ('2',
                 MLPClassifier(activation='logistic',
                               alpha=0.00037981575377879246,
                               learning_rate_init=0.006116799532217015,
                               random_state=1, solver='lbfgs'))]))
('1', Pipeline(steps=[('0',
                 SMOTE(k_neighbors=3, random_state=1,
                       sampling_strategy='not majority')),
                ('1',
                 RandomOverSampler(random_state=1,
                                   sampling_strategy='not majority')),
                ('2',
                 SGDClassifier(alpha=3.7301467752623704e-05,
                               epsilon=5.413805329419312e-05,
                               eta0=0.021641546814036086,
                               l1_ratio=4.9104619044225e-07, loss='perceptron',
                               power_t=0.22856787530361644, random_state=1,
                               tol=0.0007985608052064328))]))
('2', Pipeline(steps=[('0', VarianceThreshold()), ('1', MaxAbsScaler()),
                ('2',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced_subsample',
                                        criterion='entropy',
                                        max_features='sqrt',
                                        min_samples_leaf=12,
                                        min_samples_split=18, n_estimators=84,
                                        random_state=1))]))
('3', Pipeline(steps=[('0', SelectPercentile(percentile=16.38259885969456)),
                ('1', MaxAbsScaler()),
                ('2',
                 PassiveAggressiveClassifier(C=9.030646683882014e-05,
                                             fit_intercept=False,
                                             loss='squared_hinge',
                                             random_state=1))]))
('4', Pipeline(steps=[('0',
                 DecisionTreeClassifier(criterion='entropy',
                                        max_depth=1.1041964148909684,
                                        max_features=0.8532697064189038,
                                        min_samples_leaf=16,
                                        min_samples_split=3, random_state=1))]))
('5', Pipeline(steps=[('0',
                 AdaBoostClassifier(learning_rate=0.6045067365081893,
                                    n_estimators=41, random_state=1))]))
('6', Pipeline(steps=[('0', MinMaxScaler()),
                ('1',
                 SGDClassifier(alpha=0.07306460131394081,
                               class_weight='balanced',
                               epsilon=6.356368874820406e-05,
                               eta0=4.6911797181203657e-07,
                               l1_ratio=4.772675170756073e-06, loss='log',
                               power_t=0.0398772558346217, random_state=1,
                               tol=0.00849279863661896))]))
('7', Pipeline(steps=[('0', MinMaxScaler()), ('1', StandardScaler(with_std=False)),
                ('2', VarianceThreshold()),
                ('3',
                 AdaBoostClassifier(learning_rate=0.2397706409001008,
                                    n_estimators=93, random_state=1))]))
('8', Pipeline(steps=[('0', MinMaxScaler()),
                ('1', SelectFwe(alpha=0.0014646934207089013)),
                ('2',
                 AdaBoostClassifier(algorithm='SAMME',
                                    learning_rate=0.1040574724579072,
                                    n_estimators=61, random_state=1))]))
('9', Pipeline(steps=[('0', KNNImputer(n_neighbors=10, weights='distance')),
                ('1',
                 AdaBoostClassifier(learning_rate=0.045563797058821444,
                                    n_estimators=80, random_state=1))]))

['0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '2', '2', '2', '2', '2', '2', '2', '3', '1', '3', '3', '1', '4', '4', '4', '4', '4', '5', '5', '5', '5', '5', '5', '6', '6', '6', '6', '6', '6', '7', '7', '7', '7', '7', '8', '8', '8', '8', '8', '9', '4', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '2', '2', '2', '2', '3', '3', '7', '3', '3', '3', '3', '3', '6', '1', '4', '4', '4', '4', '4', '4', '5', '5', '5', '5', '6', '1', '6', '6', '1', '7', '7', '7', '7', '7', '7', '9', '8', '8', '8', '8', '9', '9', '9', '9', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '7', '1', '2', '9', '3', '3', '3', '3', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '5', '5', '5', '5', '5', '5', '6', '6', '6', '6', '6', '6', '6', '7', '7', '7', '7', '7', '8', '8', '2', '8', '8', '7', '8', '9', '9', '9', '9', '9', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '2', '2', '2', '2', '2', '2', '2', '2', '2', '5', '3', '3', '3', '3', '3', '5', '4', '4', '1', '4', '4', '1', '4', '4', '4', '4', '5', '5', '6', '6', '6', '6', '6', '6', '6', '6', '7', '7', '7', '7', '7', '7', '7', '7', '8', '8', '8', '8', '8', '9', '9', '0', '9', '9', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '4', '1', '1', '1', '1', '1', '1', '1', '2', '2', '2', '2', '2', '2', '2', '2', '2', '2', '2', '2', '3', '3', '3', '3', '3', '3', '3', '3', '4', '4', '4', '4', '4', '4', '4', '4', '4', '5', '5', '5', '5', '5', '5', '5', '5', '5', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '8', '8', '8', '8', '8', '8', '8', '8', '8', '0', '8', '8', '8', '9', '9', '9', '9', '9', '9', '9', '9', '9', '8', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '2', '1', '1', '1', '1', '1', '1', '1', '2', '2', '4', '2', '4', '2', '2', '2', '3', '3', '3', '3', '3', '3', '3', '3', '3', '3', '4', '4', '4', '4', '4', '4', '4', '4', '4', '5', '5', '5', '5', '5', '9', '5', '5', '5', '5', '5', '5', '5', '5', '6', '6', '6', '6', '6', '6', '0', '6', '6', '6', '6', '6', '6', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '8', '8', '8', '8', '8', '8', '8', '8', '8', '8', '8', '8', '8', '9', '9', '9', '9', '9', '9', '9', '9', '9', '3', '9']
{'accuracy_score': 0.9412997903563941, 'balanced_accuracy_score': 0.9398959571039107, 'macro_precision_score': 0.9427627705740085, 'macro_recall_score': 0.9398959571039107, 'macro_f1_score': 0.9409181796386559, 'micro_precision_score': 0.9412997903563941, 'micro_recall_score': 0.9412997903563941, 'micro_f1_score': 0.9412997903563941}
('0', Pipeline(steps=[('0',
                 FastICA(algorithm='deflation', fun='exp', n_components=48,
                         random_state=6)),
                ('1', KNNImputer(n_neighbors=10)), ('2', StandardScaler()),
                ('3',
                 QuadraticDiscriminantAnalysis(reg_param=0.2540466768424464))]))
('1', Pipeline(steps=[('0',
                 FastICA(algorithm='deflation', fun='exp', n_components=48,
                         random_state=6)),
                ('1', KNNImputer(n_neighbors=10, weights='distance')),
                ('2', StandardScaler()),
                ('3',
                 QuadraticDiscriminantAnalysis(reg_param=0.07718766367186658))]))
('2', Pipeline(steps=[('0',
                 FastICA(algorithm='deflation', fun='exp', n_components=48,
                         random_state=6)),
                ('1', KNNImputer(n_neighbors=10)), ('2', StandardScaler()),
                ('3',
                 QuadraticDiscriminantAnalysis(reg_param=0.20849689720163556))]))
('3', Pipeline(steps=[('0',
                 FastICA(algorithm='deflation', fun='exp', n_components=48,
                         random_state=6)),
                ('1', KNNImputer(n_neighbors=10)), ('2', StandardScaler()),
                ('3',
                 QuadraticDiscriminantAnalysis(reg_param=0.6220314953480636))]))
('4', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1', KNNImputer(n_neighbors=3, weights='distance')),
                ('2', StandardScaler(with_std=False)),
                ('3',
                 MLPClassifier(alpha=0.007511937452864406,
                               learning_rate_init=0.04597019028454793,
                               random_state=6, solver='sgd'))]))
('5', Pipeline(steps=[('0', StandardScaler(with_std=False)),
                ('1',
                 SMOTE(k_neighbors=2, random_state=6,
                       sampling_strategy='minority')),
                ('2', MaxAbsScaler()),
                ('3',
                 MLPClassifier(activation='logistic', alpha=0.0432861803142929,
                               learning_rate_init=0.00298691697992755,
                               random_state=6))]))
('6', Pipeline(steps=[('0',
                 SMOTE(k_neighbors=3, random_state=6,
                       sampling_strategy='not majority')),
                ('1',
                 ExtraTreesClassifier(bootstrap=True,
                                      class_weight='balanced_subsample',
                                      criterion='entropy', max_features='sqrt',
                                      min_samples_split=3, n_estimators=82,
                                      random_state=6))]))
('7', Pipeline(steps=[('0', MinMaxScaler()), ('1', MaxAbsScaler()),
                ('2', RobustScaler()),
                ('3',
                 MLPClassifier(activation='logistic',
                               alpha=0.000902596254260324,
                               learning_rate_init=0.0015810076162819018,
                               random_state=6))]))
('8', Pipeline(steps=[('0', VarianceThreshold()), ('1', MaxAbsScaler()),
                ('2',
                 ExtraTreesClassifier(class_weight='balanced_subsample',
                                      max_features='sqrt', min_samples_leaf=2,
                                      min_samples_split=7, n_estimators=58,
                                      random_state=6))]))
('9', Pipeline(steps=[('0',
                 SMOTE(k_neighbors=2, random_state=6,
                       sampling_strategy='not minority')),
                ('1',
                 RandomUnderSampler(random_state=6, replacement=True,
                                    sampling_strategy='not majority')),
                ('2', PCA(n_components=0.9657781070329488, random_state=6)),
                ('3',
                 MLPClassifier(activation='logistic',
                               alpha=0.020197326673057424,
                               learning_rate_init=0.00827563926220562,
                               random_state=6, solver='lbfgs'))]))

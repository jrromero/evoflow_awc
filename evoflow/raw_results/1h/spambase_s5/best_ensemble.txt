['1', '1', '1', '2', '2', '2', '2', '1', '1', '1', '2', '1', '1', '2', '1', '1', '2', '1', '1', '1', '2', '2', '1', '1', '1', '1', '2', '2', '1', '2', '1', '2', '2', '2', '2', '1', '1', '1', '2', '2', '1', '2', '1', '1', '2', '1', '1', '1', '2', '2', '1', '2', '1', '1', '2', '2', '1', '1', '1', '2', '2', '1', '1', '2', '1', '1', '2', '1', '1', '2', '2', '1', '1', '1', '2', '2', '1', '1', '2', '1', '2', '1', '2', '1', '1', '2', '2', '1', '1', '1', '2', '1', '2', '2', '2', '2', '1', '1', '2', '2', '2', '1', '1', '2', '1', '2', '1', '2', '2', '1', '2', '1', '2', '2', '2', '2', '2', '2', '2', '1', '2', '1', '2', '2', '2', '2', '1', '2', '1', '2', '1', '1', '1', '1', '1', '1', '2', '2', '1', '1', '2', '1', '1', '1', '2', '2', '1', '2', '1', '1', '1', '1', '2', '2', '1', '2', '2', '1', '2', '1', '2', '1', '1', '2', '1', '1', '2', '1', '1', '1', '1', '1', '2', '1', '2', '2', '1', '1', '2', '2', '2', '1', '1', '1', '1', '1', '2', '2', '1', '1', '2', '1', '1', '1', '2', '1', '2', '1', '2', '1', '2', '2', '2', '1', '1', '1', '1', '2', '1', '1', '2', '1', '1', '1', '1', '2', '1', '1', '2', '2', '2', '1', '1', '1', '1', '1', '1', '1', '2', '2', '1', '1', '2', '1', '2', '1', '2', '1', '2', '2', '1', '2', '1', '1', '2', '2', '2', '1', '1', '1', '2', '1', '1', '2', '2', '1', '1', '1', '1', '1', '1', '1', '2', '2', '1', '2', '2', '1', '2', '1', '1', '2', '1', '1', '1', '1', '2', '2', '1', '1', '2', '1', '1', '2', '1', '2', '2', '2', '2', '1', '1', '1', '2', '1', '1', '2', '2', '1', '1', '2', '1', '1', '2', '2', '2', '1', '2', '2', '1', '2', '1', '1', '1', '1', '2', '2', '1', '1', '2', '1', '1', '1', '2', '2', '1', '2', '2', '2', '2', '2', '1', '2', '2', '1', '2', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '2', '2', '2', '1', '1', '2', '2', '1', '2', '1', '1', '2', '1', '1', '1', '1', '1', '2', '1', '1', '1', '1', '2', '1', '1', '2', '1', '1', '1', '2', '2', '1', '1', '1', '1', '1', '1', '1', '2', '1', '2', '2', '2', '1', '1', '1', '1', '2', '1', '1', '2', '2', '2', '1', '1', '1', '1', '1', '1', '2', '1', '1', '1', '1', '2', '1', '1', '1', '1', '2', '2', '1', '2', '1', '2', '1', '1', '2', '1', '2', '1', '2', '1', '1', '2', '1', '1', '1', '1', '1', '2', '2', '2', '1', '1', '1', '2', '1', '1', '2', '1', '2', '1', '1', '2', '1', '1', '1', '1', '1', '2', '1', '2', '2', '2', '1', '2', '2', '1', '2', '1', '1', '1', '1', '2', '1', '2', '2', '2', '2', '1', '2', '2', '1', '1', '1', '1', '1', '1', '1', '1', '2', '2', '1', '1', '2', '1', '2', '1', '1', '1', '1', '1', '1', '2', '2', '2', '1', '1', '2', '1', '1', '1', '1', '2', '1', '1', '1', '1', '1', '1', '1', '1', '1', '2', '1', '2', '2', '1', '1', '1', '2', '2', '1', '2', '2', '1', '1', '1', '1', '1', '2', '2', '1', '2', '1', '2', '1', '1', '2', '2', '1', '1', '1', '2', '2', '1', '2', '1', '1', '1', '2', '2', '1', '2', '1', '1', '1', '2', '2', '1', '1', '2', '2', '1', '2', '1', '1', '1', '2', '2', '1', '1', '2', '2', '1', '1', '2', '2', '2', '2', '1', '1', '1', '1', '1', '2', '1', '2', '1', '2', '1', '2', '1', '1', '1', '1', '1', '2', '1', '1', '2', '1', '1', '2', '2', '2', '1', '1', '2', '2', '1', '1', '2', '2', '2', '1', '1', '1', '1', '1', '1', '1', '2', '1', '2', '2', '2', '1', '1', '1', '1', '2', '1', '1', '1', '1', '1', '1', '2', '2', '1', '1', '1', '1', '1', '1', '1', '2', '1', '1', '1', '1', '1', '1', '1', '2', '2', '1', '1', '2', '2', '1', '1', '1', '1', '2', '1', '1', '2', '1', '2', '1', '1', '1', '2', '1', '2', '1', '1', '1', '2', '2', '1', '2', '1', '2', '1', '1', '2', '2', '2', '2', '2', '2', '1', '1', '2', '1', '1', '2', '2', '1', '1', '2', '1', '1', '2', '1', '2', '1', '1', '1', '1', '1', '1', '2', '1', '1', '1', '2', '1', '1', '1', '1', '2', '2', '1', '2', '1', '1', '1', '1', '1', '1', '1', '2', '2', '1', '1', '1', '1', '2', '2', '1', '2', '1', '2', '1', '1', '1', '1', '1', '1', '1', '1', '2', '1', '1', '1', '1', '2', '2', '2', '2', '1', '2', '2', '1', '2', '2', '1', '1', '1', '2', '1', '2', '1', '1', '2', '1', '2', '1', '2', '1', '1', '1', '2', '1', '2', '2', '2', '2', '1', '1', '1', '1', '2', '2', '1', '1', '1', '2', '1', '1', '2', '2', '2', '1', '1', '2', '2', '1', '1', '2', '2', '2', '2', '1', '1', '2', '1', '1', '1', '1', '1', '1', '2', '1', '1', '1', '1', '2', '1', '1', '1', '1', '2', '1', '2', '2', '1', '1', '2', '2', '1', '1', '1', '1', '1', '1', '1', '2', '1', '1', '1', '2', '2', '1', '1', '1', '1', '1', '2', '1', '2', '2', '2', '2', '2', '1', '1', '1', '2', '1', '2', '1', '1', '1', '1', '2', '1', '2', '1', '2', '1', '1', '1', '2', '2', '1', '1', '1', '2', '1', '2', '2', '2', '2', '1', '2', '1', '2', '1', '2', '2', '1', '1', '1', '2', '2', '2', '1', '1', '1', '1', '2', '1', '1', '2', '1', '2', '1', '1', '2', '1', '1', '2', '1', '2', '1', '1', '1', '1', '1', '1', '1', '1', '2', '2', '1', '1', '2', '1', '1', '1', '2', '2', '2', '1', '1', '1', '1', '1', '2', '2', '1', '2', '2', '2', '1', '2', '2', '1', '1', '1', '1', '1', '1', '1', '1', '1', '2', '2', '1', '1', '1', '1', '1', '1', '2', '2', '2', '1', '1', '1', '1', '1', '1', '1', '2', '1', '1', '1', '2', '2', '2', '1', '1', '1', '2', '2', '1', '1', '1', '1', '1', '2', '1', '1', '2', '1', '2', '2', '1', '1', '1', '2', '2', '1', '1', '1', '2', '2', '1', '1', '2', '1', '1', '1', '2', '1', '1', '1', '2', '1', '1', '1', '2', '2', '2', '1', '1', '1', '2', '2', '2', '1', '1', '1', '2', '2', '2', '1', '2', '2', '1', '2', '1', '2', '2', '1', '2', '2', '2', '1', '1', '1', '2', '2', '2', '1', '1', '1', '1', '2', '1', '1', '2', '2', '1', '1', '1', '2', '1', '1', '1', '2', '1', '2', '2', '1', '1', '1', '1', '2', '1', '2', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '2', '1', '2', '1', '1', '1', '2', '1', '1', '2', '1', '2', '1', '1', '2', '1', '1', '2', '2', '2', '1', '2', '1', '1', '2', '2', '1', '2', '2', '2', '1', '2', '1', '1', '2', '2', '2', '2', '1', '1', '1', '1', '1', '2', '1', '2', '1', '1', '2', '1', '1', '2', '1', '1', '1', '2', '1', '1', '2', '2', '2', '1', '1', '2', '1', '2', '1', '1', '2', '2', '2', '1', '2', '2', '1', '1', '2', '1', '1', '1', '2', '2', '2', '1', '2', '1', '2', '1', '1', '2', '1', '1', '2', '1', '2', '1', '1', '1', '1', '1', '2', '2', '1', '1', '1', '1', '2', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '2', '2', '2', '1', '1', '1', '2', '1', '2', '1', '2', '2', '1', '1', '2', '2', '2', '2', '2', '1', '1', '1', '2', '2', '1', '2', '1', '2', '1', '1', '1', '1', '1', '2', '1', '2', '2', '1', '1', '2', '2', '1', '1', '2', '1', '1', '2', '2', '1', '1', '1', '1', '1', '1', '1', '1', '2', '1', '1', '1', '1', '1', '1', '1', '1', '1', '2', '1', '2', '1', '1', '2', '2', '2', '2', '2', '1', '1', '2', '1', '1', '1', '1', '1', '1', '1', '2', '1', '2', '1', '1', '1', '2', '2', '2', '1', '1', '1', '1', '1', '1', '1', '1', '2', '2', '1', '2', '2', '2', '2', '1', '2', '1', '2', '1', '2', '1', '1', '1', '1', '1', '2', '1', '1', '2', '1', '2', '1', '1', '1', '2', '1', '2', '1', '1', '1', '2', '2', '1', '1', '2', '1', '1', '2', '2', '2', '2', '1', '1', '1', '1', '2', '2', '2', '1', '1', '1', '2', '2', '1', '2', '1', '1', '1', '1', '1', '1', '1', '1', '2', '1', '1', '1', '1', '2', '1', '1', '2', '1', '2', '1', '2', '1', '1', '1', '2', '1', '1', '1', '2', '2', '1', '2', '1', '2', '1', '2', '2', '1', '2', '1', '2', '1', '1', '2', '2', '1', '1', '1', '2', '1', '2', '2', '2', '1', '1', '1', '2', '1', '1', '2', '1', '1', '1', '1', '2', '1', '2', '2', '1', '1', '2', '1', '2', '1', '1', '1', '1', '1', '1', '1', '1', '2', '1', '2', '1', '1', '1', '2', '1', '1', '1', '2', '2', '1', '1', '1', '1', '1', '2', '2', '1', '2', '2', '2', '2', '1', '2', '2', '2', '1', '1', '1', '1', '1', '2', '1', '1', '2', '1', '1', '1', '2', '1', '2', '1', '1', '2', '1', '1', '2', '2', '1', '1', '2']
{'accuracy_score': 0.9641460234680573, 'balanced_accuracy_score': 0.9617247026988536, 'macro_precision_score': 0.9630891057287994, 'macro_recall_score': 0.9617247026988536, 'macro_f1_score': 0.9623951738170213, 'micro_precision_score': 0.9641460234680573, 'micro_recall_score': 0.9641460234680573, 'micro_f1_score': 0.9641460234680573}
('0', Pipeline(steps=[('0', VarianceThreshold()),
                ('1',
                 RandomUnderSampler(random_state=5, replacement=True,
                                    sampling_strategy='not minority')),
                ('2',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        criterion='entropy',
                                        max_features='log2',
                                        min_samples_split=8, n_estimators=71,
                                        random_state=5))]))
('1', Pipeline(steps=[('0', VarianceThreshold()),
                ('1',
                 ExtraTreesClassifier(bootstrap=True, max_features='log2',
                                      min_samples_split=5, n_estimators=21,
                                      random_state=5))]))
('2', Pipeline(steps=[('0', MinMaxScaler()),
                ('1',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced_subsample',
                                        criterion='entropy',
                                        max_features='log2', n_estimators=41,
                                        random_state=5))]))
('3', Pipeline(steps=[('0', VarianceThreshold()),
                ('1',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        criterion='entropy',
                                        max_features='log2', n_estimators=41,
                                        random_state=5))]))
('4', Pipeline(steps=[('0',
                 SMOTE(k_neighbors=3, random_state=5,
                       sampling_strategy='minority')),
                ('1',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        criterion='entropy',
                                        max_features='log2',
                                        min_samples_split=17, n_estimators=71,
                                        random_state=5))]))
('5', Pipeline(steps=[('0', MinMaxScaler()),
                ('1',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        criterion='entropy',
                                        max_features='log2', n_estimators=27,
                                        random_state=5))]))
('6', Pipeline(steps=[('0', SelectPercentile(percentile=67.85890496986777)),
                ('1', VarianceThreshold()),
                ('2',
                 RandomUnderSampler(random_state=5, replacement=True,
                                    sampling_strategy='not minority')),
                ('3',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_samples_split=17, n_estimators=71,
                                        random_state=5))]))
('7', Pipeline(steps=[('0', MinMaxScaler()),
                ('1',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        criterion='entropy',
                                        max_features='log2', n_estimators=41,
                                        random_state=5))]))
('8', Pipeline(steps=[('0',
                 RandomUnderSampler(random_state=5,
                                    sampling_strategy='not minority')),
                ('1', Normalizer()),
                ('2',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        criterion='entropy',
                                        max_features='log2',
                                        min_samples_split=10, n_estimators=71,
                                        random_state=5))]))
('9', Pipeline(steps=[('0',
                 SMOTE(k_neighbors=4, random_state=5,
                       sampling_strategy='minority')),
                ('1',
                 RandomForestClassifier(bootstrap=False, max_features='log2',
                                        min_samples_split=10, n_estimators=71,
                                        random_state=5))]))


{'accuracy_score': 0.6978723404255319, 'balanced_accuracy_score': 0.5888521315773048, 'macro_precision_score': 0.5309395987741529, 'macro_recall_score': 0.5888521315773048, 'macro_f1_score': 0.5036589719181342, 'micro_precision_score': 0.6978723404255319, 'micro_recall_score': 0.6978723404255319, 'micro_f1_score': 0.6978723404255319}
('0', Pipeline(steps=[('0', KNNImputer(n_neighbors=6, weights='distance')),
                ('1', Normalizer(norm='l1')),
                ('2',
                 RandomUnderSampler(random_state=30533, replacement=True,
                                    sampling_strategy='not minority')),
                ('3',
                 AdaBoostClassifier(learning_rate=0.10001890213453367,
                                    random_state=30533))]))
('1', Pipeline(steps=[('0', KNNImputer(n_neighbors=6, weights='distance')),
                ('1', Normalizer(norm='l1')),
                ('2',
                 RandomUnderSampler(random_state=30533, replacement=True,
                                    sampling_strategy='not minority')),
                ('3', BernoulliNB(alpha=2.0272501416479396, fit_prior=False))]))
('2', Pipeline(steps=[('0', KNNImputer(n_neighbors=6)), ('1', Normalizer(norm='l1')),
                ('2',
                 RandomUnderSampler(random_state=30533, replacement=True,
                                    sampling_strategy='not minority')),
                ('3', BernoulliNB(alpha=2.0272501416479396))]))
('3', Pipeline(steps=[('0', MinMaxScaler()),
                ('1', SimpleImputer(strategy='most_frequent')),
                ('2', GaussianNB(var_smoothing=0.0036762384361390434))]))
('4', Pipeline(steps=[('0', SimpleImputer(strategy='most_frequent')),
                ('1', SelectPercentile(percentile=2.641654597356779)),
                ('2',
                 ExtraTreesClassifier(class_weight='balanced_subsample',
                                      criterion='entropy', max_features='sqrt',
                                      min_samples_leaf=17, min_samples_split=20,
                                      n_estimators=53, random_state=30533))]))
('5', Pipeline(steps=[('0', KNNImputer(n_neighbors=4)), ('1', Normalizer(norm='l1')),
                ('2',
                 RandomUnderSampler(random_state=30533, replacement=True,
                                    sampling_strategy='not minority')),
                ('3',
                 AdaBoostClassifier(algorithm='SAMME',
                                    learning_rate=0.10001890213453367,
                                    random_state=30533))]))
('6', Pipeline(steps=[('0', KNNImputer(n_neighbors=9)),
                ('1',
                 SMOTETomek(random_state=30533,
                            sampling_strategy='not majority')),
                ('2', SimpleImputer(strategy='most_frequent')),
                ('3',
                 AdaBoostClassifier(learning_rate=0.10001890213453367,
                                    n_estimators=31, random_state=30533))]))
('7', Pipeline(steps=[('0', MinMaxScaler()), ('1', SimpleImputer(strategy='median')),
                ('2',
                 SGDClassifier(alpha=0.00024410065956812272, average=True,
                               class_weight='balanced',
                               epsilon=0.0009661038878084646,
                               eta0=6.904190314135885e-06,
                               l1_ratio=1.27101068035309e-06, loss='log',
                               power_t=0.5890141501371712, random_state=30533,
                               tol=6.107040082109039e-05))]))
('8', Pipeline(steps=[('0', KNNImputer(n_neighbors=9)), ('1', Normalizer(norm='l1')),
                ('2',
                 RandomUnderSampler(random_state=30533, replacement=True,
                                    sampling_strategy='not minority')),
                ('3',
                 AdaBoostClassifier(learning_rate=0.10001890213453367,
                                    random_state=30533))]))
('9', Pipeline(steps=[('0', KNNImputer(n_neighbors=6)), ('1', Normalizer(norm='l1')),
                ('2',
                 RandomUnderSampler(random_state=30533, replacement=True,
                                    sampling_strategy='not minority')),
                ('3',
                 AdaBoostClassifier(learning_rate=0.10001890213453367,
                                    n_estimators=85, random_state=30533))]))

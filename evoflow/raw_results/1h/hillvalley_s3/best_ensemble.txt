
{'accuracy_score': 1.0, 'balanced_accuracy_score': 1.0, 'macro_precision_score': 1.0, 'macro_recall_score': 1.0, 'macro_f1_score': 1.0, 'micro_precision_score': 1.0, 'micro_recall_score': 1.0, 'micro_f1_score': 1.0}
('0', Pipeline(steps=[('0', Normalizer()), ('1', MinMaxScaler()),
                ('2', KNeighborsClassifier(n_neighbors=2, weights='distance'))]))
('1', Pipeline(steps=[('0', Normalizer(norm='l1')), ('1', MinMaxScaler()),
                ('2', KNeighborsClassifier(n_neighbors=2, weights='distance'))]))
('2', Pipeline(steps=[('0', Normalizer()), ('1', MinMaxScaler()),
                ('2', KNeighborsClassifier(n_neighbors=3, weights='distance'))]))
('3', Pipeline(steps=[('0', VarianceThreshold()), ('1', Normalizer(norm='max')),
                ('2', MinMaxScaler()),
                ('3', KNeighborsClassifier(n_neighbors=7, weights='distance'))]))
('4', Pipeline(steps=[('0', Normalizer(norm='l1')), ('1', MinMaxScaler()),
                ('2', KNeighborsClassifier(n_neighbors=4, weights='distance'))]))
('5', Pipeline(steps=[('0', Normalizer(norm='l1')), ('1', MinMaxScaler()),
                ('2', KNeighborsClassifier(n_neighbors=7, weights='distance'))]))
('6', Pipeline(steps=[('0', Normalizer()), ('1', MinMaxScaler()),
                ('2', KNeighborsClassifier(n_neighbors=2))]))
('7', Pipeline(steps=[('0',
                 RandomOverSampler(random_state=3,
                                   sampling_strategy='not minority')),
                ('1', Normalizer(norm='max')), ('2', MinMaxScaler()),
                ('3', KNeighborsClassifier(n_neighbors=1, weights='distance'))]))
('8', Pipeline(steps=[('0',
                 RandomOverSampler(random_state=3,
                                   sampling_strategy='minority')),
                ('1', MaxAbsScaler()), ('2', Normalizer(norm='l1')),
                ('3',
                 KNeighborsClassifier(n_neighbors=3, p=1, weights='distance'))]))
('9', Pipeline(steps=[('0', Normalizer(norm='l1')),
                ('1', KNeighborsClassifier(n_neighbors=1, weights='distance'))]))

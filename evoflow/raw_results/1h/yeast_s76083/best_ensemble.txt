['POX', 'NUC', 'CYT', 'CYT', 'CYT', 'ME2', 'CYT', 'CYT', 'MIT', 'ME1', 'EXC', 'ME2', 'MIT', 'ME1', 'CYT', 'NUC', 'CYT', 'MIT', 'MIT', 'NUC', 'ME3', 'CYT', 'CYT', 'ME1', 'MIT', 'MIT', 'MIT', 'POX', 'ME3', 'NUC', 'ME1', 'ME3', 'CYT', 'CYT', 'CYT', 'POX', 'NUC', 'MIT', 'CYT', 'MIT', 'ME3', 'NUC', 'NUC', 'CYT', 'NUC', 'CYT', 'MIT', 'NUC', 'CYT', 'NUC', 'CYT', 'NUC', 'NUC', 'MIT', 'CYT', 'MIT', 'POX', 'NUC', 'CYT', 'ME1', 'ME3', 'MIT', 'MIT', 'ME3', 'MIT', 'MIT', 'MIT', 'EXC', 'CYT', 'NUC', 'EXC', 'VAC', 'CYT', 'ME2', 'CYT', 'NUC', 'EXC', 'EXC', 'CYT', 'CYT', 'CYT', 'CYT', 'ME3', 'POX', 'NUC', 'NUC', 'CYT', 'NUC', 'MIT', 'NUC', 'ME3', 'NUC', 'ME3', 'CYT', 'ME3', 'NUC', 'CYT', 'ME2', 'CYT', 'CYT', 'ME3', 'ME3', 'NUC', 'ME1', 'NUC', 'NUC', 'MIT', 'ME3', 'ME3', 'POX', 'ME3', 'ME2', 'ME1', 'CYT', 'ME3', 'ME3', 'ME2', 'CYT', 'NUC', 'NUC', 'MIT', 'ME3', 'MIT', 'NUC', 'ME3', 'CYT', 'NUC', 'CYT', 'ME3', 'CYT', 'CYT', 'NUC', 'ME2', 'ME2', 'NUC', 'NUC', 'MIT', 'NUC', 'CYT', 'CYT', 'NUC', 'MIT', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'ME3', 'NUC', 'CYT', 'NUC', 'MIT', 'MIT', 'MIT', 'NUC', 'CYT', 'ME3', 'ME3', 'CYT', 'MIT', 'MIT', 'CYT', 'MIT', 'CYT', 'NUC', 'ME2', 'ME3', 'NUC', 'MIT', 'ME2', 'NUC', 'MIT', 'MIT', 'ME3', 'ME2', 'ME2', 'CYT', 'NUC', 'NUC', 'ME3', 'ME3', 'ME2', 'CYT', 'NUC', 'NUC', 'ME3', 'ME2', 'CYT', 'MIT', 'MIT', 'MIT', 'MIT', 'ME3', 'CYT', 'MIT', 'ME3', 'NUC', 'NUC', 'MIT', 'CYT', 'NUC', 'NUC', 'NUC', 'MIT', 'MIT', 'ME3', 'MIT', 'CYT', 'CYT', 'MIT', 'MIT', 'MIT', 'ME3', 'MIT', 'NUC', 'MIT', 'MIT', 'CYT', 'MIT', 'ME3', 'NUC', 'ME3', 'VAC', 'ME3', 'MIT', 'NUC', 'ME3', 'CYT', 'ME2', 'NUC', 'CYT', 'EXC', 'NUC', 'ME2', 'ME3', 'ME2', 'CYT', 'NUC', 'CYT', 'MIT', 'CYT', 'CYT', 'CYT', 'NUC', 'ME3', 'CYT', 'ME3', 'NUC', 'MIT', 'NUC', 'POX', 'MIT', 'CYT', 'EXC', 'CYT', 'CYT', 'NUC', 'CYT', 'ME1', 'ME2', 'ME3', 'NUC', 'NUC', 'CYT', 'CYT', 'ME3', 'CYT', 'ME2', 'MIT', 'CYT', 'NUC', 'CYT', 'MIT', 'NUC', 'CYT', 'NUC', 'NUC', 'CYT', 'CYT', 'MIT', 'NUC', 'NUC', 'CYT', 'ME3', 'CYT', 'ME2', 'CYT', 'NUC', 'CYT', 'MIT', 'NUC', 'NUC', 'MIT', 'CYT', 'NUC', 'ME3', 'CYT', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'MIT', 'NUC', 'MIT', 'CYT', 'CYT', 'CYT', 'MIT', 'MIT', 'CYT', 'MIT', 'MIT', 'MIT', 'EXC', 'CYT', 'NUC', 'CYT', 'CYT', 'CYT', 'NUC', 'ME3', 'ME3', 'NUC', 'ME1', 'NUC', 'MIT', 'MIT', 'NUC', 'CYT', 'CYT', 'ME3', 'CYT', 'NUC', 'CYT', 'ME3', 'ME3', 'NUC', 'MIT', 'ME3', 'CYT', 'CYT', 'ME3', 'MIT', 'NUC', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'NUC', 'NUC', 'CYT', 'MIT', 'NUC', 'CYT', 'ME3', 'ME3', 'EXC', 'ME3', 'ME1', 'NUC', 'MIT', 'NUC', 'NUC', 'ME1', 'NUC', 'CYT', 'CYT', 'NUC', 'MIT', 'CYT', 'CYT', 'CYT', 'NUC', 'NUC', 'NUC', 'CYT', 'MIT', 'NUC', 'CYT', 'NUC', 'NUC', 'CYT', 'ME1', 'ME1', 'CYT', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'ME3', 'CYT', 'CYT', 'CYT', 'ME1', 'CYT', 'ME2', 'NUC', 'ME1', 'CYT', 'ME3', 'POX', 'ME3', 'ME3', 'ME3', 'ME3', 'ME3', 'ME3', 'ME3', 'MIT', 'NUC', 'ME3', 'MIT', 'NUC', 'CYT', 'ME3', 'NUC', 'CYT', 'ME2']
{'accuracy_score': 0.5887640449438202, 'balanced_accuracy_score': 0.5510928445689118, 'macro_precision_score': 0.5652042810315465, 'macro_recall_score': 0.5510928445689118, 'macro_f1_score': 0.5453958414040205, 'micro_precision_score': 0.5887640449438202, 'micro_recall_score': 0.5887640449438202, 'micro_f1_score': 0.5887640449438202}
('0', Pipeline(steps=[('0',
                 RBFSampler(gamma=0.0020081831181628087, n_components=26,
                            random_state=76083)),
                ('1',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        max_features='log2', min_samples_leaf=5,
                                        n_estimators=90, random_state=76083))]))
('1', Pipeline(steps=[('0', SelectPercentile(percentile=79.65316543130629)),
                ('1',
                 LinearSVC(C=1.537254958202741, class_weight='balanced',
                           dual=False, random_state=76083,
                           tol=0.04017640193212308))]))
('2', Pipeline(steps=[('0', MinMaxScaler()),
                ('1', KNNImputer(n_neighbors=4, weights='distance')),
                ('2', MaxAbsScaler()),
                ('3',
                 LinearSVC(C=1.537254958202741, class_weight='balanced',
                           dual=False, random_state=76083,
                           tol=0.08364415316144339))]))
('3', Pipeline(steps=[('0',
                 RBFSampler(gamma=0.008562071012598616, n_components=46,
                            random_state=76083)),
                ('1', KNNImputer(n_neighbors=3, weights='distance')),
                ('2',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        criterion='entropy',
                                        max_features='log2', min_samples_leaf=7,
                                        min_samples_split=8, n_estimators=35,
                                        random_state=76083))]))
('4', Pipeline(steps=[('0',
                 RBFSampler(gamma=0.022416700291832514, n_components=72,
                            random_state=76083)),
                ('1', KNNImputer(n_neighbors=3)),
                ('2',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        max_features='log2',
                                        min_samples_split=15, n_estimators=32,
                                        random_state=76083))]))
('5', Pipeline(steps=[('0',
                 RBFSampler(gamma=0.0020081831181628087, n_components=63,
                            random_state=76083)),
                ('1', KNNImputer(n_neighbors=4)),
                ('2',
                 RandomForestClassifier(class_weight='balanced',
                                        criterion='entropy',
                                        max_features='sqrt',
                                        min_samples_split=11, n_estimators=32,
                                        random_state=76083))]))
('6', Pipeline(steps=[('0', MinMaxScaler()), ('1', MaxAbsScaler()),
                ('2',
                 RandomForestClassifier(class_weight='balanced',
                                        max_features='sqrt',
                                        min_samples_split=11, n_estimators=61,
                                        random_state=76083))]))
('7', Pipeline(steps=[('0', SimpleImputer()), ('1', MinMaxScaler()),
                ('2',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        criterion='entropy',
                                        max_features='sqrt',
                                        min_samples_split=16, n_estimators=33,
                                        random_state=76083))]))
('8', Pipeline(steps=[('0',
                 RBFSampler(gamma=0.001740142637302218, n_components=44,
                            random_state=76083)),
                ('1',
                 RandomForestClassifier(class_weight='balanced',
                                        criterion='entropy',
                                        max_features='log2', min_samples_leaf=2,
                                        min_samples_split=15, n_estimators=33,
                                        random_state=76083))]))
('9', Pipeline(steps=[('0',
                 RBFSampler(gamma=0.0016458639741242166, n_components=35,
                            random_state=76083)),
                ('1', MinMaxScaler()),
                ('2', KNNImputer(n_neighbors=3, weights='distance')),
                ('3',
                 LinearSVC(C=2.776689002602449, class_weight='balanced',
                           dual=False, penalty='l1', random_state=76083,
                           tol=0.04017640193212308))]))

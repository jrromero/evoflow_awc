
{'accuracy_score': 0.8063829787234043, 'balanced_accuracy_score': 0.6230260283378066, 'macro_precision_score': 0.5607883049592894, 'macro_recall_score': 0.6230260283378066, 'macro_f1_score': 0.5684113865932048, 'micro_precision_score': 0.8063829787234043, 'micro_recall_score': 0.8063829787234043, 'micro_f1_score': 0.8063829787234043}
('0', Pipeline(steps=[('0', KNNImputer(n_neighbors=4, weights='distance')),
                ('1', MaxAbsScaler()),
                ('2',
                 DecisionTreeClassifier(class_weight='balanced',
                                        max_depth=1.8921716380028952,
                                        max_features=0.66942907871232,
                                        min_samples_leaf=6,
                                        min_samples_split=11,
                                        random_state=5))]))
('1', Pipeline(steps=[('0', KNNImputer(n_neighbors=4, weights='distance')),
                ('1', MaxAbsScaler()),
                ('2',
                 DecisionTreeClassifier(class_weight='balanced',
                                        max_depth=1.8921716380028952,
                                        max_features=0.33362237951540574,
                                        min_samples_leaf=6,
                                        min_samples_split=11,
                                        random_state=5))]))
('2', Pipeline(steps=[('0', KNNImputer(n_neighbors=6, weights='distance')),
                ('1', MaxAbsScaler()),
                ('2',
                 DecisionTreeClassifier(class_weight='balanced',
                                        max_depth=1.8921716380028952,
                                        max_features=0.6364193209468625,
                                        min_samples_split=11,
                                        random_state=5))]))
('3', Pipeline(steps=[('0', KNNImputer(n_neighbors=3, weights='distance')),
                ('1', MaxAbsScaler()),
                ('2',
                 PassiveAggressiveClassifier(C=0.0003975417085885743,
                                             fit_intercept=False,
                                             random_state=5))]))
('4', Pipeline(steps=[('0', SimpleImputer(strategy='median')), ('1', MinMaxScaler()),
                ('2',
                 DecisionTreeClassifier(class_weight='balanced',
                                        max_depth=1.8921716380028952,
                                        max_features=0.33362237951540574,
                                        min_samples_leaf=2,
                                        min_samples_split=11,
                                        random_state=5))]))
('5', Pipeline(steps=[('0', KNNImputer(n_neighbors=2, weights='distance')),
                ('1', MaxAbsScaler()),
                ('2',
                 BernoulliNB(alpha=0.013311262969553952, fit_prior=False))]))
('6', Pipeline(steps=[('0', SimpleImputer()),
                ('1',
                 SMOTETomek(random_state=5, sampling_strategy='not majority')),
                ('2',
                 DecisionTreeClassifier(max_depth=1.8921716380028952,
                                        max_features=0.33362237951540574,
                                        min_samples_leaf=6,
                                        min_samples_split=11,
                                        random_state=5))]))
('7', Pipeline(steps=[('0', SimpleImputer(strategy='median')),
                ('1',
                 DecisionTreeClassifier(class_weight='balanced',
                                        max_depth=1.8921716380028952,
                                        max_features=0.2060256983682106,
                                        min_samples_leaf=6, min_samples_split=7,
                                        random_state=5))]))
('8', Pipeline(steps=[('0', MinMaxScaler()),
                ('1', KNNImputer(n_neighbors=3, weights='distance')),
                ('2',
                 SMOTETomek(random_state=5, sampling_strategy='not minority')),
                ('3',
                 DecisionTreeClassifier(class_weight='balanced',
                                        max_depth=1.8921716380028952,
                                        max_features=0.2060256983682106,
                                        min_samples_leaf=6, min_samples_split=7,
                                        random_state=5))]))
('9', Pipeline(steps=[('0', KNNImputer(n_neighbors=4, weights='distance')),
                ('1', MaxAbsScaler()),
                ('2',
                 BernoulliNB(alpha=0.018144811630679773, fit_prior=False))]))

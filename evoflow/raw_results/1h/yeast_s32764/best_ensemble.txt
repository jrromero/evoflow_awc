['POX', 'NUC', 'CYT', 'CYT', 'CYT', 'EXC', 'CYT', 'CYT', 'CYT', 'ME1', 'ME1', 'ME2', 'MIT', 'ME1', 'CYT', 'NUC', 'CYT', 'MIT', 'MIT', 'NUC', 'ME3', 'CYT', 'CYT', 'ME1', 'MIT', 'MIT', 'MIT', 'POX', 'ME3', 'MIT', 'ME1', 'ME3', 'CYT', 'CYT', 'CYT', 'POX', 'NUC', 'MIT', 'CYT', 'EXC', 'ME3', 'NUC', 'NUC', 'CYT', 'NUC', 'CYT', 'MIT', 'NUC', 'CYT', 'NUC', 'CYT', 'NUC', 'NUC', 'MIT', 'NUC', 'MIT', 'POX', 'NUC', 'CYT', 'ME1', 'ME1', 'MIT', 'MIT', 'ME3', 'MIT', 'MIT', 'MIT', 'EXC', 'CYT', 'CYT', 'EXC', 'VAC', 'CYT', 'ME2', 'CYT', 'NUC', 'EXC', 'EXC', 'CYT', 'CYT', 'CYT', 'NUC', 'ME3', 'POX', 'NUC', 'NUC', 'NUC', 'NUC', 'MIT', 'NUC', 'ME3', 'NUC', 'ME3', 'CYT', 'ME3', 'NUC', 'CYT', 'ME2', 'CYT', 'CYT', 'ME3', 'ME3', 'NUC', 'EXC', 'ERL', 'NUC', 'CYT', 'ME3', 'ME3', 'POX', 'ME3', 'ME1', 'ME1', 'CYT', 'ME3', 'ME3', 'ME1', 'NUC', 'NUC', 'NUC', 'MIT', 'ME3', 'MIT', 'NUC', 'ME3', 'NUC', 'NUC', 'NUC', 'ME3', 'CYT', 'CYT', 'NUC', 'VAC', 'ME2', 'NUC', 'NUC', 'MIT', 'NUC', 'CYT', 'CYT', 'NUC', 'MIT', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'ME3', 'NUC', 'CYT', 'NUC', 'MIT', 'MIT', 'MIT', 'NUC', 'CYT', 'ME3', 'ME3', 'CYT', 'MIT', 'MIT', 'CYT', 'MIT', 'CYT', 'NUC', 'ME1', 'ME3', 'NUC', 'MIT', 'ME1', 'NUC', 'ERL', 'MIT', 'ME3', 'ME2', 'ME2', 'NUC', 'NUC', 'NUC', 'ME3', 'ME3', 'ME2', 'CYT', 'NUC', 'NUC', 'ME3', 'ME2', 'CYT', 'MIT', 'MIT', 'MIT', 'MIT', 'ME3', 'CYT', 'MIT', 'ME3', 'NUC', 'NUC', 'MIT', 'CYT', 'NUC', 'NUC', 'NUC', 'MIT', 'MIT', 'MIT', 'MIT', 'CYT', 'CYT', 'MIT', 'MIT', 'MIT', 'ME3', 'MIT', 'NUC', 'CYT', 'MIT', 'CYT', 'MIT', 'ME3', 'NUC', 'ME3', 'EXC', 'ME3', 'MIT', 'NUC', 'ME3', 'CYT', 'ME2', 'NUC', 'CYT', 'EXC', 'NUC', 'ME2', 'ME3', 'ME1', 'CYT', 'NUC', 'CYT', 'MIT', 'CYT', 'CYT', 'CYT', 'NUC', 'ME3', 'NUC', 'POX', 'VAC', 'MIT', 'NUC', 'POX', 'MIT', 'CYT', 'EXC', 'CYT', 'CYT', 'NUC', 'CYT', 'ME1', 'ME2', 'ME3', 'NUC', 'NUC', 'CYT', 'CYT', 'ME3', 'CYT', 'ME2', 'MIT', 'CYT', 'NUC', 'CYT', 'MIT', 'NUC', 'CYT', 'NUC', 'NUC', 'CYT', 'MIT', 'MIT', 'MIT', 'NUC', 'CYT', 'ME3', 'CYT', 'ME2', 'CYT', 'NUC', 'CYT', 'MIT', 'NUC', 'NUC', 'MIT', 'CYT', 'NUC', 'MIT', 'CYT', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'NUC', 'ME3', 'CYT', 'CYT', 'CYT', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'MIT', 'CYT', 'MIT', 'NUC', 'MIT', 'CYT', 'CYT', 'CYT', 'MIT', 'MIT', 'CYT', 'MIT', 'MIT', 'MIT', 'EXC', 'ME3', 'NUC', 'CYT', 'CYT', 'CYT', 'NUC', 'ME3', 'ME3', 'CYT', 'EXC', 'NUC', 'MIT', 'MIT', 'CYT', 'CYT', 'CYT', 'ME3', 'CYT', 'NUC', 'CYT', 'ME3', 'ME3', 'NUC', 'MIT', 'ME3', 'CYT', 'CYT', 'ME3', 'MIT', 'NUC', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'NUC', 'NUC', 'CYT', 'MIT', 'NUC', 'NUC', 'ME3', 'ME3', 'EXC', 'ME3', 'ME1', 'NUC', 'MIT', 'NUC', 'NUC', 'ME1', 'NUC', 'CYT', 'CYT', 'MIT', 'CYT', 'CYT', 'CYT', 'CYT', 'NUC', 'NUC', 'NUC', 'CYT', 'MIT', 'NUC', 'NUC', 'NUC', 'NUC', 'CYT', 'ME1', 'ME1', 'CYT', 'NUC', 'CYT', 'CYT', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'ME3', 'CYT', 'NUC', 'CYT', 'ME1', 'CYT', 'ME1', 'NUC', 'ME1', 'CYT', 'ME3', 'POX', 'ME1', 'ME3', 'ME3', 'ME3', 'ME3', 'ME3', 'ME3', 'MIT', 'NUC', 'ME3', 'MIT', 'NUC', 'CYT', 'CYT', 'NUC', 'CYT', 'ME2']
{'accuracy_score': 0.597752808988764, 'balanced_accuracy_score': 0.6085588660555841, 'macro_precision_score': 0.5354965117955772, 'macro_recall_score': 0.5477029794500256, 'macro_f1_score': 0.5290437161854852, 'micro_precision_score': 0.597752808988764, 'micro_recall_score': 0.597752808988764, 'micro_f1_score': 0.597752808988764}
('0', Pipeline(steps=[('0', VarianceThreshold()),
                ('1',
                 RandomOverSampler(random_state=32764,
                                   sampling_strategy='not majority')),
                ('2',
                 MLPClassifier(activation='identity',
                               alpha=0.0027549520812750563,
                               learning_rate_init=0.043551653718398094,
                               random_state=32764, solver='lbfgs'))]))
('1', Pipeline(steps=[('0',
                 RandomOverSampler(random_state=32764,
                                   sampling_strategy='minority')),
                ('1', KNNImputer(n_neighbors=9)),
                ('2',
                 ExtraTreesClassifier(class_weight='balanced_subsample',
                                      criterion='entropy', max_features='log2',
                                      min_samples_leaf=3, min_samples_split=9,
                                      n_estimators=96, random_state=32764))]))
('2', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1',
                 ExtraTreesClassifier(class_weight='balanced',
                                      max_features='sqrt', min_samples_leaf=3,
                                      min_samples_split=6, n_estimators=53,
                                      random_state=32764))]))
('3', Pipeline(steps=[('0',
                 ExtraTreesClassifier(class_weight='balanced_subsample',
                                      criterion='entropy', max_features='log2',
                                      min_samples_leaf=4, min_samples_split=11,
                                      n_estimators=17, random_state=32764))]))
('4', Pipeline(steps=[('0',
                 RandomOverSampler(random_state=32764,
                                   sampling_strategy='minority')),
                ('1', KNNImputer(n_neighbors=9)),
                ('2',
                 ExtraTreesClassifier(bootstrap=True,
                                      class_weight='balanced_subsample',
                                      max_features='sqrt', min_samples_split=19,
                                      n_estimators=48, random_state=32764))]))
('5', Pipeline(steps=[('0',
                 RandomOverSampler(random_state=32764,
                                   sampling_strategy='not majority')),
                ('1', KNNImputer(n_neighbors=4, weights='distance')),
                ('2',
                 ExtraTreesClassifier(criterion='entropy', max_features='log2',
                                      min_samples_leaf=4, min_samples_split=12,
                                      n_estimators=48, random_state=32764))]))
('6', Pipeline(steps=[('0', VarianceThreshold()), ('1', KNNImputer(n_neighbors=9)),
                ('2',
                 ExtraTreesClassifier(class_weight='balanced',
                                      max_features='sqrt', min_samples_leaf=3,
                                      min_samples_split=17, n_estimators=61,
                                      random_state=32764))]))
('7', Pipeline(steps=[('0',
                 RandomOverSampler(random_state=32764,
                                   sampling_strategy='minority')),
                ('1', KNNImputer(n_neighbors=2)),
                ('2',
                 ExtraTreesClassifier(class_weight='balanced',
                                      max_features='sqrt', min_samples_split=19,
                                      n_estimators=75, random_state=32764))]))
('8', Pipeline(steps=[('0', MinMaxScaler()), ('1', MaxAbsScaler()),
                ('2', KNNImputer(n_neighbors=10)),
                ('3',
                 ExtraTreesClassifier(class_weight='balanced_subsample',
                                      criterion='entropy', max_features='sqrt',
                                      min_samples_leaf=3, min_samples_split=10,
                                      n_estimators=69, random_state=32764))]))
('9', Pipeline(steps=[('0', MinMaxScaler()), ('1', RobustScaler()),
                ('2', VarianceThreshold()),
                ('3',
                 ExtraTreesClassifier(class_weight='balanced',
                                      max_features='sqrt', min_samples_leaf=3,
                                      min_samples_split=10, n_estimators=48,
                                      random_state=32764))]))

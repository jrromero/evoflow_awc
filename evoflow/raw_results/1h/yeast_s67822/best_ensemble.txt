['POX', 'NUC', 'CYT', 'CYT', 'CYT', 'ME2', 'CYT', 'CYT', 'MIT', 'ME1', 'EXC', 'ME2', 'MIT', 'ME2', 'CYT', 'CYT', 'CYT', 'MIT', 'MIT', 'NUC', 'CYT', 'CYT', 'CYT', 'ME1', 'MIT', 'MIT', 'MIT', 'POX', 'ME3', 'MIT', 'ME1', 'ME3', 'CYT', 'CYT', 'VAC', 'POX', 'NUC', 'MIT', 'CYT', 'MIT', 'ME3', 'CYT', 'NUC', 'CYT', 'NUC', 'CYT', 'MIT', 'NUC', 'CYT', 'NUC', 'CYT', 'NUC', 'NUC', 'MIT', 'CYT', 'MIT', 'POX', 'NUC', 'CYT', 'ME1', 'ME1', 'MIT', 'MIT', 'ME3', 'MIT', 'MIT', 'MIT', 'EXC', 'CYT', 'NUC', 'EXC', 'NUC', 'CYT', 'ME2', 'CYT', 'NUC', 'EXC', 'EXC', 'CYT', 'CYT', 'CYT', 'CYT', 'ME3', 'POX', 'CYT', 'NUC', 'CYT', 'NUC', 'MIT', 'NUC', 'ME3', 'NUC', 'ME3', 'CYT', 'ME3', 'NUC', 'MIT', 'ME2', 'CYT', 'CYT', 'ME3', 'ME3', 'NUC', 'ME1', 'NUC', 'NUC', 'CYT', 'ME3', 'ME3', 'POX', 'ME3', 'ME2', 'ME1', 'CYT', 'ME3', 'ME3', 'ME2', 'CYT', 'NUC', 'NUC', 'MIT', 'ME3', 'NUC', 'NUC', 'ME3', 'CYT', 'NUC', 'CYT', 'ME3', 'CYT', 'CYT', 'NUC', 'CYT', 'ME2', 'NUC', 'NUC', 'MIT', 'NUC', 'CYT', 'CYT', 'NUC', 'MIT', 'NUC', 'CYT', 'CYT', 'CYT', 'MIT', 'MIT', 'ME3', 'NUC', 'CYT', 'NUC', 'MIT', 'MIT', 'MIT', 'NUC', 'CYT', 'ME3', 'ME3', 'CYT', 'MIT', 'MIT', 'NUC', 'MIT', 'CYT', 'NUC', 'ME2', 'ME3', 'NUC', 'MIT', 'ME2', 'NUC', 'ERL', 'MIT', 'ME3', 'ME2', 'ME2', 'CYT', 'NUC', 'NUC', 'ME3', 'ME3', 'ME2', 'CYT', 'NUC', 'NUC', 'ME3', 'ME2', 'CYT', 'MIT', 'MIT', 'MIT', 'MIT', 'CYT', 'CYT', 'MIT', 'ME3', 'NUC', 'NUC', 'MIT', 'CYT', 'NUC', 'NUC', 'NUC', 'MIT', 'MIT', 'ME3', 'MIT', 'CYT', 'CYT', 'MIT', 'MIT', 'MIT', 'ME3', 'MIT', 'NUC', 'CYT', 'MIT', 'CYT', 'MIT', 'ME3', 'NUC', 'ME3', 'VAC', 'ME3', 'MIT', 'NUC', 'ME3', 'CYT', 'ME2', 'NUC', 'VAC', 'EXC', 'NUC', 'ME2', 'ME3', 'ME2', 'CYT', 'NUC', 'CYT', 'MIT', 'CYT', 'CYT', 'CYT', 'NUC', 'ME3', 'CYT', 'CYT', 'CYT', 'MIT', 'NUC', 'POX', 'MIT', 'CYT', 'EXC', 'CYT', 'CYT', 'NUC', 'MIT', 'ME1', 'ME2', 'ME3', 'NUC', 'NUC', 'CYT', 'CYT', 'ME3', 'CYT', 'ME2', 'MIT', 'CYT', 'NUC', 'CYT', 'MIT', 'NUC', 'CYT', 'NUC', 'NUC', 'CYT', 'MIT', 'MIT', 'MIT', 'NUC', 'CYT', 'ME3', 'CYT', 'ME2', 'CYT', 'NUC', 'CYT', 'MIT', 'NUC', 'NUC', 'MIT', 'NUC', 'NUC', 'MIT', 'CYT', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'MIT', 'CYT', 'MIT', 'NUC', 'MIT', 'CYT', 'CYT', 'CYT', 'MIT', 'MIT', 'CYT', 'MIT', 'MIT', 'MIT', 'ME2', 'CYT', 'NUC', 'CYT', 'CYT', 'NUC', 'NUC', 'ME3', 'ME3', 'NUC', 'EXC', 'NUC', 'MIT', 'MIT', 'NUC', 'CYT', 'CYT', 'ME3', 'CYT', 'NUC', 'CYT', 'ME3', 'ME3', 'NUC', 'MIT', 'ME3', 'CYT', 'CYT', 'ME3', 'MIT', 'NUC', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'NUC', 'NUC', 'CYT', 'MIT', 'NUC', 'NUC', 'CYT', 'CYT', 'EXC', 'ME3', 'ME1', 'NUC', 'MIT', 'NUC', 'NUC', 'ME1', 'CYT', 'MIT', 'CYT', 'NUC', 'MIT', 'CYT', 'CYT', 'VAC', 'NUC', 'NUC', 'NUC', 'CYT', 'MIT', 'NUC', 'NUC', 'NUC', 'NUC', 'CYT', 'ME1', 'ME1', 'CYT', 'NUC', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'CYT', 'ME3', 'CYT', 'CYT', 'CYT', 'ME1', 'CYT', 'ME2', 'NUC', 'ME1', 'CYT', 'ME3', 'POX', 'ME2', 'ME3', 'ME3', 'ME3', 'ME3', 'ME3', 'ME3', 'MIT', 'NUC', 'ME3', 'MIT', 'NUC', 'CYT', 'CYT', 'NUC', 'CYT', 'ME2']
{'accuracy_score': 0.5662921348314607, 'balanced_accuracy_score': 0.518222762642994, 'macro_precision_score': 0.4522225449461927, 'macro_recall_score': 0.46640048637869463, 'macro_f1_score': 0.45721807815489657, 'micro_precision_score': 0.5662921348314607, 'micro_recall_score': 0.5662921348314607, 'micro_f1_score': 0.5662921348314607}
('0', Pipeline(steps=[('0',
                 RandomOverSampler(random_state=67822,
                                   sampling_strategy='not majority')),
                ('1',
                 RBFSampler(gamma=0.014265547388187933, n_components=72,
                            random_state=67822)),
                ('2', MinMaxScaler()),
                ('3',
                 SGDClassifier(alpha=0.0002924858816570282, average=True,
                               class_weight='balanced',
                               epsilon=0.0016776486623889825,
                               eta0=5.541379694790432e-07,
                               l1_ratio=1.5592946890173248e-07,
                               loss='perceptron', power_t=0.0002094118224960755,
                               random_state=67822, tol=0.012345225775606624))]))
('1', Pipeline(steps=[('0', VarianceThreshold()),
                ('1',
                 RBFSampler(gamma=0.007491797773094527, n_components=72,
                            random_state=67822)),
                ('2', MinMaxScaler()),
                ('3',
                 RandomForestClassifier(class_weight='balanced',
                                        criterion='entropy',
                                        max_features='sqrt', min_samples_leaf=3,
                                        min_samples_split=11, n_estimators=30,
                                        random_state=67822))]))
('2', Pipeline(steps=[('0',
                 SMOTE(k_neighbors=2, random_state=67822,
                       sampling_strategy='not minority')),
                ('1', VarianceThreshold()),
                ('2',
                 RBFSampler(gamma=0.039838244537343984, n_components=76,
                            random_state=67822)),
                ('3',
                 RandomForestClassifier(class_weight='balanced_subsample',
                                        criterion='entropy',
                                        max_features='sqrt',
                                        min_samples_leaf=17,
                                        min_samples_split=8, n_estimators=69,
                                        random_state=67822))]))
('3', Pipeline(steps=[('0',
                 RandomOverSampler(random_state=67822,
                                   sampling_strategy='not majority')),
                ('1',
                 RBFSampler(gamma=0.2978235757452935, n_components=31,
                            random_state=67822)),
                ('2', MinMaxScaler()),
                ('3',
                 RandomForestClassifier(class_weight='balanced_subsample',
                                        max_features='sqrt',
                                        min_samples_leaf=17,
                                        min_samples_split=9, n_estimators=31,
                                        random_state=67822))]))
('4', Pipeline(steps=[('0',
                 RandomOverSampler(random_state=67822,
                                   sampling_strategy='not majority')),
                ('1',
                 RBFSampler(gamma=0.052652241703903147, n_components=49,
                            random_state=67822)),
                ('2', MinMaxScaler()),
                ('3',
                 RandomForestClassifier(class_weight='balanced',
                                        criterion='entropy',
                                        max_features='sqrt', min_samples_leaf=3,
                                        min_samples_split=4, n_estimators=30,
                                        random_state=67822))]))
('5', Pipeline(steps=[('0',
                 SMOTE(k_neighbors=2, random_state=67822,
                       sampling_strategy='not minority')),
                ('1', VarianceThreshold()),
                ('2',
                 RBFSampler(gamma=0.052652241703903147, n_components=49,
                            random_state=67822)),
                ('3',
                 RandomForestClassifier(class_weight='balanced',
                                        criterion='entropy',
                                        max_features='sqrt',
                                        min_samples_leaf=14,
                                        min_samples_split=16, n_estimators=69,
                                        random_state=67822))]))
('6', Pipeline(steps=[('0', MinMaxScaler()),
                ('1',
                 FastICA(fun='cube', n_components=88, random_state=67822,
                         whiten=False)),
                ('2', MaxAbsScaler()),
                ('3',
                 KNeighborsClassifier(n_neighbors=16, p=1,
                                      weights='distance'))]))
('7', Pipeline(steps=[('0',
                 RandomOverSampler(random_state=67822,
                                   sampling_strategy='not majority')),
                ('1',
                 RBFSampler(gamma=0.7606155623648976, n_components=72,
                            random_state=67822)),
                ('2', MinMaxScaler()),
                ('3',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='log2',
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=30,
                                        random_state=67822))]))
('8', Pipeline(steps=[('0',
                 RandomOverSampler(random_state=67822,
                                   sampling_strategy='not majority')),
                ('1',
                 RBFSampler(gamma=0.2777653948067207, n_components=58,
                            random_state=67822)),
                ('2', MinMaxScaler()),
                ('3',
                 SGDClassifier(alpha=0.0020846595309369576, average=True,
                               class_weight='balanced',
                               epsilon=0.0007646223527873868,
                               eta0=2.4573244629791277e-05,
                               l1_ratio=0.0023835473521565944, loss='log',
                               power_t=0.8025610582426664, random_state=67822,
                               tol=0.00014963405411751973))]))
('9', Pipeline(steps=[('0',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        max_features='log2', min_samples_leaf=2,
                                        min_samples_split=20, n_estimators=35,
                                        random_state=67822))]))

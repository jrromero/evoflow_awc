
{'accuracy_score': 0.7936170212765957, 'balanced_accuracy_score': 0.628456400973722, 'macro_precision_score': 0.5591787439613527, 'macro_recall_score': 0.628456400973722, 'macro_f1_score': 0.564228295051568, 'micro_precision_score': 0.7936170212765957, 'micro_recall_score': 0.7936170212765957, 'micro_f1_score': 0.7936170212765957}
('0', Pipeline(steps=[('0', SimpleImputer()),
                ('1',
                 SMOTE(k_neighbors=2, random_state=38727,
                       sampling_strategy='not majority')),
                ('2', Normalizer(norm='max')),
                ('3',
                 DecisionTreeClassifier(max_depth=1.8631326091006168,
                                        max_features=0.4090187971898722,
                                        min_samples_leaf=18,
                                        min_samples_split=4,
                                        random_state=38727))]))
('1', Pipeline(steps=[('0', SimpleImputer()),
                ('1',
                 SMOTE(k_neighbors=2, random_state=38727,
                       sampling_strategy='not majority')),
                ('2', Normalizer(norm='max')),
                ('3',
                 DecisionTreeClassifier(class_weight='balanced',
                                        max_depth=1.1404636411185727,
                                        max_features=0.4090187971898722,
                                        min_samples_leaf=3, min_samples_split=4,
                                        random_state=38727))]))
('2', Pipeline(steps=[('0', SimpleImputer()),
                ('1',
                 SMOTE(k_neighbors=2, random_state=38727,
                       sampling_strategy='not majority')),
                ('2', Normalizer(norm='max')),
                ('3',
                 AdaBoostClassifier(algorithm='SAMME',
                                    learning_rate=0.11527595291872285,
                                    n_estimators=15, random_state=38727))]))
('3', Pipeline(steps=[('0', SimpleImputer()),
                ('1',
                 SMOTE(k_neighbors=3, random_state=38727,
                       sampling_strategy='not majority')),
                ('2', Normalizer(norm='max')),
                ('3',
                 DecisionTreeClassifier(class_weight='balanced',
                                        max_depth=1.7211412023143926,
                                        max_features=0.4090187971898722,
                                        min_samples_leaf=18,
                                        min_samples_split=4,
                                        random_state=38727))]))
('4', Pipeline(steps=[('0', KNNImputer(n_neighbors=3)),
                ('1',
                 SMOTE(k_neighbors=2, random_state=38727,
                       sampling_strategy='not majority')),
                ('2', Normalizer(norm='max')),
                ('3',
                 AdaBoostClassifier(algorithm='SAMME',
                                    learning_rate=0.11527595291872285,
                                    n_estimators=15, random_state=38727))]))
('5', Pipeline(steps=[('0', SimpleImputer()),
                ('1',
                 SMOTE(k_neighbors=2, random_state=38727,
                       sampling_strategy='not majority')),
                ('2', Normalizer(norm='max')),
                ('3',
                 DecisionTreeClassifier(max_depth=1.7312734860295904,
                                        max_features=0.4090187971898722,
                                        min_samples_leaf=18,
                                        min_samples_split=4,
                                        random_state=38727))]))
('6', Pipeline(steps=[('0',
                 RandomOverSampler(random_state=38727,
                                   sampling_strategy='not minority')),
                ('1', KNNImputer(n_neighbors=8)), ('2', MinMaxScaler()),
                ('3',
                 BernoulliNB(alpha=0.035598187168201616, fit_prior=False))]))
('7', Pipeline(steps=[('0',
                 RandomOverSampler(random_state=38727,
                                   sampling_strategy='not minority')),
                ('1', KNNImputer(n_neighbors=8)), ('2', MinMaxScaler()),
                ('3',
                 BernoulliNB(alpha=0.035598187168201616, fit_prior=False))]))
('8', Pipeline(steps=[('0', SimpleImputer(strategy='median')),
                ('1',
                 SMOTE(k_neighbors=2, random_state=38727,
                       sampling_strategy='not majority')),
                ('2', Normalizer(norm='max')),
                ('3',
                 DecisionTreeClassifier(max_depth=1.8631326091006168,
                                        max_features=0.9657737950039332,
                                        min_samples_leaf=17,
                                        min_samples_split=4,
                                        random_state=38727))]))
('9', Pipeline(steps=[('0', KNNImputer(n_neighbors=3)),
                ('1',
                 DecisionTreeClassifier(class_weight='balanced',
                                        max_depth=1.7211412023143926,
                                        max_features=0.4090187971898722,
                                        min_samples_leaf=10,
                                        min_samples_split=4,
                                        random_state=38727))]))

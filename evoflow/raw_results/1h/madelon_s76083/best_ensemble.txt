['-1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '1', '-1', '-1', '-1', '-1', '1', '1', '-1', '-1', '1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '1', '1', '1', '1', '-1', '-1', '1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '1', '1', '-1', '-1', '-1', '-1', '-1', '1', '1', '1', '1', '1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '1', '1', '1', '1', '1', '1', '1', '-1', '1', '1', '-1', '1', '-1', '-1', '-1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '1', '1', '1', '-1', '1', '-1', '-1', '1', '1', '-1', '1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '1', '1', '-1', '-1', '1', '1', '-1', '-1', '1', '1', '-1', '-1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '1', '1', '1', '1', '-1', '-1', '1', '1', '-1', '-1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '-1', '1', '-1', '-1', '1', '-1', '1', '-1', '-1', '1', '-1', '-1', '1', '1', '1', '1', '1', '1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '1', '-1', '1', '-1', '-1', '1', '1', '1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '-1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '-1', '1', '1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '1', '1', '-1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '1', '-1', '1', '1', '-1', '-1', '1', '1', '1', '1', '1', '1', '-1', '-1', '-1', '-1', '1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '1', '-1', '-1', '1', '1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '1', '-1', '1', '-1', '1', '1', '-1', '-1', '1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '1', '1', '-1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '-1', '1', '-1', '1', '1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '1', '1', '-1', '-1', '1', '1', '1', '-1', '-1', '1', '1', '-1', '1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '-1', '-1', '1', '1', '-1', '1', '-1', '-1', '1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '1', '1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '1', '1', '1', '1', '1', '-1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '1', '1', '1', '-1', '1', '-1', '1', '1', '1', '1', '1', '1', '-1', '-1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '1', '1']
{'accuracy_score': 0.8307692307692308, 'balanced_accuracy_score': 0.8310672207027141, 'macro_precision_score': 0.8353267094643191, 'macro_recall_score': 0.8310672207027141, 'macro_f1_score': 0.8302771348881373, 'micro_precision_score': 0.8307692307692308, 'micro_recall_score': 0.8307692307692308, 'micro_f1_score': 0.8307692307692308}
('0', Pipeline(steps=[('0', VarianceThreshold()),
                ('1', FeatureAgglomeration(linkage='average', n_clusters=10)),
                ('2',
                 KNeighborsClassifier(n_neighbors=2, p=1, weights='distance'))]))
('1', Pipeline(steps=[('0',
                 FeatureAgglomeration(affinity='cosine', linkage='average',
                                      n_clusters=23)),
                ('1', KNeighborsClassifier(n_neighbors=2, weights='distance'))]))
('2', Pipeline(steps=[('0',
                 FeatureAgglomeration(affinity='cosine', linkage='average',
                                      n_clusters=16)),
                ('1',
                 ExtraTreesClassifier(class_weight='balanced_subsample',
                                      max_features='sqrt', min_samples_leaf=4,
                                      min_samples_split=17, n_estimators=56,
                                      random_state=76083))]))
('3', Pipeline(steps=[('0',
                 FeatureAgglomeration(affinity='cosine', linkage='average',
                                      n_clusters=9)),
                ('1',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced_subsample',
                                        criterion='entropy',
                                        max_features='log2',
                                        min_samples_leaf=12,
                                        min_samples_split=12, n_estimators=81,
                                        random_state=76083))]))
('4', Pipeline(steps=[('0', SelectPercentile(percentile=3.2211357628340247)),
                ('1',
                 ExtraTreesClassifier(criterion='entropy', max_features='sqrt',
                                      min_samples_leaf=6, min_samples_split=20,
                                      n_estimators=94, random_state=76083))]))
('5', Pipeline(steps=[('0',
                 FeatureAgglomeration(affinity='manhattan', linkage='average',
                                      n_clusters=12)),
                ('1',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='sqrt', min_samples_leaf=7,
                                      min_samples_split=20, n_estimators=71,
                                      random_state=76083))]))
('6', Pipeline(steps=[('0', StandardScaler(with_mean=False)),
                ('1', SelectPercentile(percentile=7.721835049773523)),
                ('2',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        criterion='entropy',
                                        max_features='sqrt',
                                        min_samples_leaf=11,
                                        min_samples_split=7, n_estimators=29,
                                        random_state=76083))]))
('7', Pipeline(steps=[('0',
                 FeatureAgglomeration(affinity='manhattan', linkage='complete',
                                      n_clusters=23)),
                ('1',
                 ExtraTreesClassifier(bootstrap=True, criterion='entropy',
                                      max_features='sqrt', min_samples_leaf=2,
                                      min_samples_split=14, n_estimators=69,
                                      random_state=76083))]))
('8', Pipeline(steps=[('0', VarianceThreshold()),
                ('1', FeatureAgglomeration(linkage='average', n_clusters=10)),
                ('2',
                 ExtraTreesClassifier(class_weight='balanced_subsample',
                                      max_features='sqrt', min_samples_leaf=4,
                                      min_samples_split=17, n_estimators=56,
                                      random_state=76083))]))
('9', Pipeline(steps=[('0', VarianceThreshold()),
                ('1', FeatureAgglomeration(linkage='average', n_clusters=10)),
                ('2',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        max_features='log2',
                                        min_samples_leaf=15,
                                        min_samples_split=18, n_estimators=62,
                                        random_state=76083))]))


{'accuracy_score': 0.7276595744680852, 'balanced_accuracy_score': 0.580300855127645, 'macro_precision_score': 0.5304648464325463, 'macro_recall_score': 0.580300855127645, 'macro_f1_score': 0.5130952766356955, 'micro_precision_score': 0.7276595744680852, 'micro_recall_score': 0.7276595744680852, 'micro_f1_score': 0.7276595744680852}
('0', Pipeline(steps=[('0', MaxAbsScaler()), ('1', KNNImputer(n_neighbors=9)),
                ('2', GaussianNB(var_smoothing=0.007661173723722483))]))
('1', Pipeline(steps=[('0', KNNImputer(n_neighbors=6, weights='distance')),
                ('1',
                 SMOTE(k_neighbors=4, random_state=8,
                       sampling_strategy='not majority')),
                ('2', SelectPercentile(percentile=89.63555052100511)),
                ('3', BernoulliNB(alpha=0.7383679815204154, fit_prior=False))]))
('2', Pipeline(steps=[('0', MaxAbsScaler()), ('1', KNNImputer(n_neighbors=6)),
                ('2', GaussianNB(var_smoothing=0.0006836620738432726))]))
('3', Pipeline(steps=[('0', KNNImputer(n_neighbors=10, weights='distance')),
                ('1',
                 SMOTE(k_neighbors=3, random_state=8,
                       sampling_strategy='not minority')),
                ('2', SelectPercentile(percentile=89.63555052100511)),
                ('3',
                 BernoulliNB(alpha=0.019891268112926658, fit_prior=False))]))
('4', Pipeline(steps=[('0', SimpleImputer()),
                ('1',
                 SMOTE(k_neighbors=3, random_state=8,
                       sampling_strategy='not minority')),
                ('2', SelectPercentile(percentile=89.63555052100511)),
                ('3',
                 SGDClassifier(alpha=0.00041091685190150463, average=True,
                               class_weight='balanced',
                               epsilon=1.0835439328321801e-05,
                               eta0=0.015686680734499747,
                               l1_ratio=3.9566713382763147e-07,
                               loss='perceptron', power_t=0.11636686627427545,
                               random_state=8, tol=0.0030785103953528434))]))
('5', Pipeline(steps=[('0', KNNImputer(n_neighbors=7, weights='distance')),
                ('1',
                 SMOTE(k_neighbors=3, random_state=8,
                       sampling_strategy='not minority')),
                ('2', SelectPercentile(percentile=89.63555052100511)),
                ('3',
                 BernoulliNB(alpha=0.019891268112926658, fit_prior=False))]))
('6', Pipeline(steps=[('0', KNNImputer(n_neighbors=6, weights='distance')),
                ('1',
                 SMOTE(k_neighbors=2, random_state=8,
                       sampling_strategy='not majority')),
                ('2', SelectPercentile(percentile=41.877196818395554)),
                ('3', BernoulliNB(alpha=0.01828212307014774))]))
('7', Pipeline(steps=[('0', MaxAbsScaler()), ('1', KNNImputer(n_neighbors=7)),
                ('2', GaussianNB(var_smoothing=0.006162834990003416))]))
('8', Pipeline(steps=[('0', MinMaxScaler()),
                ('1', KNNImputer(n_neighbors=9, weights='distance')),
                ('2',
                 MultinomialNB(alpha=0.04347745188564752, fit_prior=False))]))
('9', Pipeline(steps=[('0', KNNImputer(n_neighbors=9, weights='distance')),
                ('1',
                 SMOTE(k_neighbors=3, random_state=8,
                       sampling_strategy='not minority')),
                ('2', SelectPercentile(percentile=89.63555052100511)),
                ('3',
                 BernoulliNB(alpha=0.019891268112926658, fit_prior=False))]))

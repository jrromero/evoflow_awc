['good', 'bad', 'good', 'bad', 'bad', 'bad', 'bad', 'bad', 'good', 'bad', 'good', 'good', 'bad', 'good', 'good', 'bad', 'good', 'good', 'good', 'good', 'good', 'good', 'good', 'bad', 'good', 'good', 'good', 'good', 'good', 'good', 'good', 'good', 'good', 'good', 'good', 'bad', 'bad', 'bad', 'good', 'good', 'good', 'bad', 'good', 'good', 'good', 'bad', 'good', 'good', 'good', 'good', 'bad', 'bad', 'good', 'good', 'bad', 'good', 'good', 'bad', 'bad', 'good', 'bad', 'bad', 'bad', 'bad', 'good', 'good', 'bad', 'good', 'bad', 'good', 'good', 'good', 'bad', 'good', 'good', 'bad', 'good', 'good', 'good', 'good', 'bad', 'good', 'good', 'good', 'bad', 'bad', 'bad', 'good', 'good', 'bad', 'good', 'bad', 'good', 'good', 'bad', 'bad', 'bad', 'bad', 'good', 'good', 'good', 'good', 'good', 'good', 'bad', 'bad', 'good', 'good', 'good', 'bad', 'bad', 'good', 'bad', 'good', 'bad', 'bad', 'bad', 'good', 'good', 'bad', 'bad', 'good', 'bad', 'good', 'good', 'good', 'good', 'good', 'good', 'bad', 'good', 'good', 'good', 'good', 'good', 'bad', 'bad', 'bad', 'good', 'bad', 'good', 'good', 'bad', 'good', 'good', 'good', 'bad', 'good', 'bad', 'good', 'good', 'bad', 'good', 'good', 'good', 'good', 'good', 'good', 'good', 'bad', 'bad', 'bad', 'bad', 'bad', 'bad', 'good', 'bad', 'good', 'good', 'bad', 'good', 'good', 'bad', 'bad', 'bad', 'bad', 'bad', 'good', 'good', 'good', 'bad', 'good', 'bad', 'bad', 'good', 'good', 'good', 'bad', 'good', 'bad', 'bad', 'good', 'good', 'good', 'good', 'bad', 'good', 'good', 'good', 'good', 'bad', 'good', 'bad', 'bad', 'good', 'good', 'good', 'good', 'good', 'bad', 'good', 'good', 'good', 'bad', 'good', 'bad', 'bad', 'good', 'bad', 'good', 'bad', 'good', 'good', 'good', 'good', 'good', 'good', 'bad', 'good', 'bad', 'good', 'good', 'good', 'good', 'good', 'bad', 'good', 'bad', 'good', 'bad', 'good', 'bad', 'good', 'good', 'good', 'good', 'good', 'good', 'bad', 'good', 'good', 'good', 'good', 'bad', 'good', 'good', 'bad', 'good', 'good', 'good', 'good', 'bad', 'good', 'good', 'good', 'bad', 'good', 'bad', 'bad', 'good', 'good', 'good', 'bad', 'good', 'good', 'bad', 'bad', 'bad', 'bad', 'good', 'bad', 'bad', 'good', 'good', 'good', 'bad', 'bad', 'good', 'good', 'good', 'bad', 'good', 'bad', 'good', 'good', 'bad', 'good', 'bad', 'good', 'good']
{'accuracy_score': 0.7033333333333334, 'balanced_accuracy_score': 0.6825116185087896, 'macro_precision_score': 0.6709810231413562, 'macro_recall_score': 0.6825116185087896, 'macro_f1_score': 0.6747036391768906, 'micro_precision_score': 0.7033333333333334, 'micro_recall_score': 0.7033333333333334, 'micro_f1_score': 0.7033333333333334}
('0', Pipeline(steps=[('0', SelectPercentile(percentile=73.76457156707836)),
                ('1', MinMaxScaler()),
                ('2',
                 MultinomialNB(alpha=0.014182982602541274, fit_prior=False))]))
('1', Pipeline(steps=[('0', RobustScaler(with_scaling=False)), ('1', MinMaxScaler()),
                ('2',
                 RandomForestClassifier(class_weight='balanced_subsample',
                                        max_features='log2', min_samples_leaf=7,
                                        min_samples_split=8, n_estimators=40,
                                        random_state=1))]))
('2', Pipeline(steps=[('0', SelectPercentile(percentile=79.10254139822995)),
                ('1', MinMaxScaler()),
                ('2',
                 MultinomialNB(alpha=0.014843634876884875, fit_prior=False))]))
('3', Pipeline(steps=[('0', VarianceThreshold()), ('1', MaxAbsScaler()),
                ('2',
                 RandomForestClassifier(class_weight='balanced',
                                        max_features='log2', min_samples_leaf=8,
                                        min_samples_split=14, n_estimators=18,
                                        random_state=1))]))
('4', Pipeline(steps=[('0', SMOTETomek(random_state=1, sampling_strategy='minority')),
                ('1',
                 QuadraticDiscriminantAnalysis(reg_param=0.3542061065037053))]))
('5', Pipeline(steps=[('0', MinMaxScaler()), ('1', VarianceThreshold()),
                ('2', StandardScaler()),
                ('3',
                 BernoulliNB(alpha=0.015912591378477392, fit_prior=False))]))
('6', Pipeline(steps=[('0', Normalizer(norm='l1')), ('1', StandardScaler()),
                ('2', MaxAbsScaler()),
                ('3',
                 ExtraTreesClassifier(class_weight='balanced',
                                      max_features='log2', min_samples_leaf=5,
                                      min_samples_split=10, n_estimators=82,
                                      random_state=1))]))
('7', Pipeline(steps=[('0', VarianceThreshold()),
                ('1',
                 RandomForestClassifier(class_weight='balanced_subsample',
                                        criterion='entropy',
                                        max_features='log2', min_samples_leaf=8,
                                        min_samples_split=17, n_estimators=29,
                                        random_state=1))]))
('8', Pipeline(steps=[('0', MinMaxScaler()), ('1', VarianceThreshold()),
                ('2', StandardScaler()),
                ('3', BernoulliNB(alpha=0.01339704992912639, fit_prior=False))]))
('9', Pipeline(steps=[('0', VarianceThreshold()),
                ('1',
                 RandomForestClassifier(class_weight='balanced',
                                        max_features='log2', min_samples_leaf=8,
                                        min_samples_split=11, n_estimators=29,
                                        random_state=1))]))

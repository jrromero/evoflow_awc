['0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '2', '2', '2', '2', '2', '2', '2', '3', '1', '3', '3', '1', '4', '4', '4', '4', '4', '5', '5', '5', '5', '5', '5', '6', '6', '6', '6', '6', '6', '7', '7', '7', '7', '7', '8', '8', '8', '8', '9', '9', '9', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '2', '2', '2', '2', '3', '3', '7', '3', '3', '3', '3', '3', '6', '1', '4', '4', '4', '4', '4', '4', '5', '5', '5', '5', '6', '7', '6', '6', '7', '7', '7', '7', '7', '7', '7', '7', '8', '8', '8', '8', '9', '9', '9', '9', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '2', '9', '3', '3', '3', '3', '4', '4', '4', '4', '4', '1', '4', '4', '4', '4', '5', '5', '5', '5', '5', '5', '6', '6', '6', '6', '6', '6', '6', '7', '7', '7', '7', '7', '8', '8', '2', '8', '8', '1', '8', '8', '9', '9', '9', '9', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '2', '2', '2', '2', '2', '2', '2', '2', '2', '5', '3', '3', '3', '3', '3', '3', '4', '4', '2', '4', '4', '1', '4', '4', '4', '4', '5', '5', '6', '6', '6', '6', '6', '6', '6', '6', '7', '7', '7', '7', '7', '7', '7', '7', '8', '8', '8', '8', '8', '9', '9', '8', '9', '9', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '4', '1', '1', '1', '1', '1', '1', '7', '2', '2', '2', '2', '2', '2', '2', '2', '2', '2', '2', '2', '3', '3', '3', '3', '3', '3', '3', '3', '4', '4', '4', '4', '4', '4', '4', '4', '4', '5', '5', '5', '5', '5', '5', '5', '5', '5', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '6', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '8', '8', '8', '8', '8', '8', '8', '8', '8', '8', '8', '8', '8', '5', '9', '9', '3', '9', '9', '9', '9', '9', '8', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '1', '1', '2', '1', '1', '1', '1', '1', '1', '1', '2', '2', '4', '2', '4', '2', '2', '2', '3', '3', '3', '3', '3', '3', '3', '3', '3', '3', '4', '4', '4', '4', '4', '4', '4', '4', '4', '5', '9', '5', '5', '5', '9', '5', '5', '5', '5', '5', '5', '5', '5', '6', '6', '6', '6', '6', '6', '0', '6', '6', '6', '6', '6', '6', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '7', '1', '8', '8', '8', '8', '8', '8', '8', '8', '8', '9', '8', '8', '9', '9', '9', '9', '9', '9', '9', '9', '9', '3', '9']
{'accuracy_score': 0.9371069182389937, 'balanced_accuracy_score': 0.9339589244781689, 'macro_precision_score': 0.9356674305471928, 'macro_recall_score': 0.9339589244781689, 'macro_f1_score': 0.9345062685882091, 'micro_precision_score': 0.9371069182389937, 'micro_recall_score': 0.9371069182389937, 'micro_f1_score': 0.9371069182389937}
('0', Pipeline(steps=[('0', KNNImputer(n_neighbors=2)), ('1', MinMaxScaler()),
                ('2', VarianceThreshold()),
                ('3',
                 RandomForestClassifier(bootstrap=False, max_features='log2',
                                        min_samples_split=5, n_estimators=89,
                                        random_state=5))]))
('1', Pipeline(steps=[('0', KNNImputer(n_neighbors=4)), ('1', MinMaxScaler()),
                ('2', VarianceThreshold()),
                ('3',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_samples_split=5, n_estimators=89,
                                        random_state=5))]))
('2', Pipeline(steps=[('0', SelectFwe(alpha=0.03839003474165254)),
                ('1', StandardScaler(with_mean=False)), ('2', MaxAbsScaler()),
                ('3',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2',
                                        min_samples_split=5, n_estimators=89,
                                        random_state=5))]))
('3', Pipeline(steps=[('0', MinMaxScaler()),
                ('1',
                 RandomForestClassifier(bootstrap=False, max_features='log2',
                                        n_estimators=64, random_state=5))]))
('4', Pipeline(steps=[('0', VarianceThreshold()),
                ('1',
                 RandomForestClassifier(bootstrap=False, max_features='log2',
                                        n_estimators=64, random_state=5))]))
('5', Pipeline(steps=[('0', MinMaxScaler()),
                ('1',
                 RandomForestClassifier(bootstrap=False, max_features='log2',
                                        min_samples_split=5, n_estimators=89,
                                        random_state=5))]))
('6', Pipeline(steps=[('0',
                 RandomForestClassifier(bootstrap=False, max_features='log2',
                                        min_samples_leaf=3, n_estimators=67,
                                        random_state=5))]))
('7', Pipeline(steps=[('0', MinMaxScaler()),
                ('1',
                 RandomForestClassifier(bootstrap=False, max_features='log2',
                                        min_samples_split=5, n_estimators=67,
                                        random_state=5))]))
('8', Pipeline(steps=[('0', VarianceThreshold()),
                ('1',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        max_features='sqrt',
                                        min_samples_split=5, n_estimators=89,
                                        random_state=5))]))
('9', Pipeline(steps=[('0', SelectFwe(alpha=0.028625286816962928)),
                ('1', StandardScaler(with_mean=False)),
                ('2',
                 ExtraTreesClassifier(class_weight='balanced',
                                      max_features='log2', min_samples_split=5,
                                      n_estimators=75, random_state=5))]))

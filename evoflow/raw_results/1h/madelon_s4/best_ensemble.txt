['-1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '1', '-1', '-1', '-1', '-1', '1', '1', '-1', '-1', '1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '1', '1', '1', '1', '-1', '-1', '1', '1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '1', '1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '1', '1', '1', '1', '1', '1', '1', '-1', '1', '1', '-1', '1', '-1', '-1', '-1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '-1', '-1', '1', '1', '-1', '-1', '1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '1', '1', '-1', '-1', '1', '1', '-1', '1', '1', '-1', '-1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '1', '-1', '1', '1', '-1', '-1', '1', '1', '1', '-1', '1', '-1', '1', '1', '1', '-1', '1', '1', '1', '1', '-1', '1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '-1', '1', '-1', '1', '1', '-1', '1', '-1', '-1', '1', '-1', '-1', '1', '1', '1', '1', '1', '1', '-1', '1', '1', '1', '-1', '1', '1', '1', '-1', '1', '-1', '1', '-1', '-1', '1', '1', '1', '-1', '1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '-1', '1', '-1', '1', '1', '1', '-1', '-1', '-1', '-1', '1', '1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '1', '1', '-1', '1', '-1', '1', '1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '1', '-1', '1', '1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '1', '-1', '-1', '-1', '1', '1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '-1', '1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '-1', '-1', '1', '1', '-1', '1', '-1', '1', '-1', '1', '1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '1', '1', '-1', '-1', '1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '1', '-1', '1', '-1', '1', '1', '-1', '-1', '1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '1', '1', '-1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '-1', '1', '-1', '1', '1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '1', '1', '-1', '-1', '1', '1', '1', '-1', '-1', '1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '1', '-1', '1', '1', '-1', '1', '-1', '-1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '1', '1', '1', '1', '1', '-1', '-1', '-1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '1', '1', '1', '-1', '1', '-1', '1', '-1', '-1', '1', '1', '1', '-1', '-1', '1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '1', '1', '1', '1', '1']
{'accuracy_score': 0.8551282051282051, 'balanced_accuracy_score': 0.8553282137597307, 'macro_precision_score': 0.8572944419836175, 'macro_recall_score': 0.8553282137597307, 'macro_f1_score': 0.8549544078950617, 'micro_precision_score': 0.8551282051282051, 'micro_recall_score': 0.8551282051282051, 'micro_f1_score': 0.8551282051282051}
('0', Pipeline(steps=[('0',
                 FeatureAgglomeration(affinity='manhattan', linkage='average',
                                      n_clusters=12)),
                ('1',
                 SMOTETomek(random_state=4, sampling_strategy='not minority')),
                ('2', KNNImputer(n_neighbors=2)),
                ('3', KNeighborsClassifier(n_neighbors=3, weights='distance'))]))
('1', Pipeline(steps=[('0',
                 FeatureAgglomeration(affinity='manhattan', linkage='complete',
                                      n_clusters=21)),
                ('1', SMOTETomek(random_state=4, sampling_strategy='minority')),
                ('2', KNNImputer(n_neighbors=4, weights='distance')),
                ('3', KNeighborsClassifier(n_neighbors=11, p=1))]))
('2', Pipeline(steps=[('0',
                 FeatureAgglomeration(affinity='manhattan', linkage='complete',
                                      n_clusters=25)),
                ('1', SMOTETomek(random_state=4, sampling_strategy='minority')),
                ('2', KNNImputer(n_neighbors=2)),
                ('3', KNeighborsClassifier(n_neighbors=11, p=1))]))
('3', Pipeline(steps=[('0',
                 FeatureAgglomeration(affinity='manhattan', linkage='complete',
                                      n_clusters=21)),
                ('1', SMOTETomek(random_state=4, sampling_strategy='minority')),
                ('2', KNNImputer(n_neighbors=3, weights='distance')),
                ('3', KNeighborsClassifier(n_neighbors=11))]))
('4', Pipeline(steps=[('0', FeatureAgglomeration(linkage='complete', n_clusters=21)),
                ('1', SMOTETomek(random_state=4, sampling_strategy='minority')),
                ('2', KNNImputer(n_neighbors=4, weights='distance')),
                ('3', KNeighborsClassifier(n_neighbors=1))]))
('5', Pipeline(steps=[('0', SelectPercentile(percentile=9.466674709657163)),
                ('1', KNNImputer(n_neighbors=10)),
                ('2',
                 KNeighborsClassifier(n_neighbors=22, p=1,
                                      weights='distance'))]))
('6', Pipeline(steps=[('0', SelectPercentile(percentile=9.466674709657163)),
                ('1', KNNImputer(n_neighbors=8)),
                ('2',
                 KNeighborsClassifier(n_neighbors=22, p=1,
                                      weights='distance'))]))
('7', Pipeline(steps=[('0',
                 FeatureAgglomeration(affinity='manhattan', linkage='average',
                                      n_clusters=20)),
                ('1',
                 SMOTETomek(random_state=4, sampling_strategy='not minority')),
                ('2', KNNImputer(n_neighbors=2)),
                ('3',
                 KNeighborsClassifier(n_neighbors=18, p=1,
                                      weights='distance'))]))
('8', Pipeline(steps=[('0',
                 FeatureAgglomeration(affinity='manhattan', linkage='complete',
                                      n_clusters=21)),
                ('1',
                 SMOTETomek(random_state=4, sampling_strategy='not minority')),
                ('2', KNNImputer(n_neighbors=3)),
                ('3',
                 RandomForestClassifier(bootstrap=False, max_features='sqrt',
                                        min_samples_leaf=12,
                                        min_samples_split=4, n_estimators=67,
                                        random_state=4))]))
('9', Pipeline(steps=[('0',
                 FeatureAgglomeration(affinity='manhattan', linkage='complete',
                                      n_clusters=21)),
                ('1', SMOTETomek(random_state=4, sampling_strategy='minority')),
                ('2', KNNImputer(n_neighbors=4, weights='distance')),
                ('3', KNeighborsClassifier(n_neighbors=33, p=1))]))

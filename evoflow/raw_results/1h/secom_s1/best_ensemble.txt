
{'accuracy_score': 0.8340425531914893, 'balanced_accuracy_score': 0.6380375756819175, 'macro_precision_score': 0.578064880511137, 'macro_recall_score': 0.6380375756819175, 'macro_f1_score': 0.592013888888889, 'micro_precision_score': 0.8340425531914893, 'micro_recall_score': 0.8340425531914893, 'micro_f1_score': 0.8340425531914893}
('0', Pipeline(steps=[('0', VarianceThreshold()), ('1', MinMaxScaler()),
                ('2', KNNImputer(n_neighbors=6)),
                ('3',
                 BernoulliNB(alpha=0.039278056040068614, fit_prior=False))]))
('1', Pipeline(steps=[('0', SimpleImputer()), ('1', VarianceThreshold()),
                ('2',
                 DecisionTreeClassifier(class_weight='balanced',
                                        max_depth=1.2448414731884727,
                                        max_features=0.7620170763387868,
                                        min_samples_leaf=5,
                                        min_samples_split=19,
                                        random_state=1))]))
('2', Pipeline(steps=[('0', SimpleImputer(strategy='most_frequent')),
                ('1', VarianceThreshold()),
                ('2',
                 DecisionTreeClassifier(class_weight='balanced',
                                        max_depth=1.2448414731884727,
                                        max_features=0.742046758935078,
                                        min_samples_leaf=5,
                                        min_samples_split=19,
                                        random_state=1))]))
('3', Pipeline(steps=[('0', MaxAbsScaler()), ('1', MinMaxScaler()),
                ('2', KNNImputer(n_neighbors=8)),
                ('3',
                 SGDClassifier(alpha=0.001049071858452933,
                               class_weight='balanced',
                               epsilon=0.003606653539762846,
                               eta0=0.01135945950913377,
                               l1_ratio=2.5107017870108633e-09,
                               loss='squared_hinge', power_t=0.7962050491551118,
                               random_state=1, tol=0.0019915856469920564))]))
('4', Pipeline(steps=[('0',
                 RandomUnderSampler(random_state=1,
                                    sampling_strategy='not minority')),
                ('1', SimpleImputer(strategy='median')),
                ('2',
                 DecisionTreeClassifier(max_depth=1.018558237853161,
                                        max_features=0.742046758935078,
                                        min_samples_leaf=5,
                                        min_samples_split=19,
                                        random_state=1))]))
('5', Pipeline(steps=[('0', MaxAbsScaler()), ('1', SimpleImputer()),
                ('2', MinMaxScaler()),
                ('3',
                 DecisionTreeClassifier(class_weight='balanced',
                                        max_depth=1.2448414731884727,
                                        max_features=0.7620170763387868,
                                        min_samples_leaf=5,
                                        min_samples_split=17,
                                        random_state=1))]))
('6', Pipeline(steps=[('0', SimpleImputer(strategy='most_frequent')),
                ('1',
                 RandomUnderSampler(random_state=1, replacement=True,
                                    sampling_strategy='not minority')),
                ('2', KNNImputer(n_neighbors=7, weights='distance')),
                ('3',
                 AdaBoostClassifier(algorithm='SAMME',
                                    learning_rate=0.09153118647202095,
                                    n_estimators=96, random_state=1))]))
('7', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1', SimpleImputer(strategy='most_frequent')),
                ('2', MinMaxScaler()),
                ('3', BernoulliNB(alpha=0.08247655385449594, fit_prior=False))]))
('8', Pipeline(steps=[('0', MinMaxScaler()),
                ('1',
                 RandomUnderSampler(random_state=1, replacement=True,
                                    sampling_strategy='not majority')),
                ('2', SimpleImputer(strategy='most_frequent')),
                ('3',
                 DecisionTreeClassifier(class_weight='balanced',
                                        criterion='entropy',
                                        max_depth=1.2448414731884727,
                                        max_features=0.7620170763387868,
                                        min_samples_leaf=16,
                                        min_samples_split=10,
                                        random_state=1))]))
('9', Pipeline(steps=[('0', VarianceThreshold()), ('1', MinMaxScaler()),
                ('2', KNNImputer(n_neighbors=10, weights='distance')),
                ('3',
                 DecisionTreeClassifier(class_weight='balanced',
                                        max_depth=1.2448414731884727,
                                        max_features=0.07671995684150879,
                                        min_samples_leaf=16,
                                        min_samples_split=18,
                                        random_state=1))]))

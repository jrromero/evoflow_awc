['-1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '1', '-1', '-1', '-1', '-1', '1', '1', '-1', '-1', '1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '-1', '1', '1', '1', '-1', '-1', '1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '1', '1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '1', '1', '-1', '-1', '1', '1', '1', '1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '1', '1', '1', '1', '1', '1', '1', '-1', '1', '1', '-1', '1', '-1', '-1', '-1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '1', '-1', '1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '1', '1', '-1', '-1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '1', '-1', '1', '1', '1', '-1', '1', '1', '1', '-1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '1', '1', '1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '-1', '1', '-1', '1', '1', '-1', '1', '-1', '-1', '1', '-1', '-1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '-1', '1', '1', '1', '-1', '1', '-1', '1', '-1', '-1', '1', '1', '1', '-1', '1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '1', '-1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '-1', '1', '1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '1', '1', '-1', '1', '-1', '1', '1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '1', '-1', '1', '1', '-1', '-1', '-1', '1', '1', '1', '-1', '1', '-1', '1', '1', '-1', '1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '-1', '1', '-1', '-1', '1', '-1', '1', '-1', '-1', '-1', '1', '1', '-1', '1', '1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '1', '-1', '-1', '1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '1', '-1', '-1', '1', '1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '1', '1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '1', '-1', '1', '-1', '1', '1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '-1', '1', '-1', '1', '1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '1', '1', '-1', '-1', '1', '1', '1', '-1', '-1', '1', '1', '-1', '1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '1', '-1', '1', '1', '-1', '1', '-1', '-1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '-1', '1', '1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '1', '1', '-1', '-1', '-1', '1', '1', '1', '-1', '-1', '-1', '-1', '1', '1', '-1', '-1', '1', '-1', '1', '1', '1', '-1', '1', '1', '1', '1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '1', '1', '-1', '1', '1']
{'accuracy_score': 0.882051282051282, 'balanced_accuracy_score': 0.8822454239427729, 'macro_precision_score': 0.8842158132649555, 'macro_recall_score': 0.8822454239427729, 'macro_f1_score': 0.8819200821425516, 'micro_precision_score': 0.882051282051282, 'micro_recall_score': 0.882051282051282, 'micro_f1_score': 0.882051282051282}
('0', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1', KNNImputer(n_neighbors=6, weights='distance')),
                ('2',
                 FeatureAgglomeration(affinity='manhattan', linkage='average',
                                      n_clusters=13)),
                ('3', KNeighborsClassifier(n_neighbors=2))]))
('1', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1', KNNImputer(n_neighbors=6, weights='distance')),
                ('2',
                 FeatureAgglomeration(affinity='cosine', linkage='average',
                                      n_clusters=12)),
                ('3', KNeighborsClassifier(n_neighbors=13, p=1))]))
('2', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1', KNNImputer(n_neighbors=6, weights='distance')),
                ('2',
                 FeatureAgglomeration(affinity='cosine', linkage='average',
                                      n_clusters=12)),
                ('3',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        max_features='sqrt', min_samples_leaf=8,
                                        min_samples_split=20, n_estimators=78,
                                        random_state=67822))]))
('3', Pipeline(steps=[('0', VarianceThreshold()), ('1', MinMaxScaler()),
                ('2', FeatureAgglomeration(n_clusters=13)),
                ('3', KNeighborsClassifier(n_neighbors=34, p=1))]))
('4', Pipeline(steps=[('0', VarianceThreshold()), ('1', MaxAbsScaler()),
                ('2',
                 FeatureAgglomeration(affinity='manhattan', linkage='average',
                                      n_clusters=24)),
                ('3',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='log2', min_samples_leaf=7,
                                        min_samples_split=11, n_estimators=83,
                                        random_state=67822))]))
('5', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1', KNNImputer(n_neighbors=7, weights='distance')),
                ('2',
                 FeatureAgglomeration(affinity='manhattan', linkage='average',
                                      n_clusters=13)),
                ('3',
                 KNeighborsClassifier(n_neighbors=39, p=1,
                                      weights='distance'))]))
('6', Pipeline(steps=[('0', MinMaxScaler()), ('1', MaxAbsScaler()),
                ('2',
                 FeatureAgglomeration(affinity='manhattan', linkage='complete',
                                      n_clusters=8)),
                ('3', KNeighborsClassifier(n_neighbors=3, p=1))]))
('7', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1', KNNImputer(n_neighbors=6, weights='distance')),
                ('2',
                 FeatureAgglomeration(affinity='manhattan', linkage='average',
                                      n_clusters=13)),
                ('3',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        max_features='sqrt',
                                        min_samples_leaf=17,
                                        min_samples_split=8, n_estimators=80,
                                        random_state=67822))]))
('8', Pipeline(steps=[('0', VarianceThreshold()), ('1', MaxAbsScaler()),
                ('2',
                 FeatureAgglomeration(affinity='manhattan', linkage='complete',
                                      n_clusters=24)),
                ('3',
                 RandomForestClassifier(class_weight='balanced',
                                        criterion='entropy',
                                        max_features='log2', min_samples_leaf=7,
                                        min_samples_split=11, n_estimators=83,
                                        random_state=67822))]))
('9', Pipeline(steps=[('0', MinMaxScaler()), ('1', MaxAbsScaler()),
                ('2',
                 FeatureAgglomeration(affinity='manhattan', linkage='complete',
                                      n_clusters=9)),
                ('3',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced',
                                        max_features='sqrt', min_samples_leaf=8,
                                        min_samples_split=20, n_estimators=78,
                                        random_state=67822))]))

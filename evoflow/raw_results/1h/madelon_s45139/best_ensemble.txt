['-1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '1', '-1', '1', '-1', '1', '1', '1', '-1', '-1', '-1', '1', '-1', '1', '-1', '-1', '-1', '-1', '1', '1', '-1', '-1', '1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '-1', '1', '1', '1', '-1', '-1', '-1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '1', '1', '-1', '-1', '-1', '-1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '1', '-1', '1', '1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '1', '-1', '1', '1', '-1', '1', '-1', '-1', '-1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '1', '1', '1', '-1', '1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '1', '1', '-1', '1', '1', '-1', '-1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '1', '1', '1', '1', '1', '-1', '1', '1', '1', '-1', '1', '-1', '1', '1', '1', '-1', '1', '1', '1', '1', '-1', '1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '1', '-1', '-1', '1', '1', '1', '-1', '-1', '1', '-1', '1', '1', '-1', '1', '-1', '-1', '1', '-1', '-1', '1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '1', '1', '1', '1', '1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '1', '-1', '1', '-1', '-1', '1', '1', '1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '1', '-1', '1', '1', '1', '-1', '1', '1', '1', '-1', '-1', '-1', '-1', '1', '1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '1', '1', '1', '1', '1', '1', '1', '-1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '1', '1', '-1', '1', '1', '-1', '-1', '-1', '-1', '1', '-1', '1', '1', '-1', '-1', '1', '1', '1', '1', '1', '1', '-1', '1', '1', '-1', '1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '1', '-1', '-1', '-1', '1', '1', '-1', '1', '1', '-1', '1', '-1', '-1', '-1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '-1', '-1', '1', '1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '1', '1', '-1', '1', '1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '-1', '1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '1', '-1', '1', '-1', '1', '1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '1', '1', '-1', '1', '-1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '1', '1', '-1', '-1', '1', '1', '1', '-1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '-1', '-1', '-1', '1', '1', '-1', '1', '-1', '-1', '1', '-1', '1', '1', '1', '-1', '-1', '1', '-1', '1', '1', '1', '1', '1', '-1', '1', '-1', '1', '-1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '-1', '1', '1', '1', '1', '1', '1', '-1', '-1', '-1', '1', '1', '-1', '-1', '1', '-1', '-1', '1', '1', '-1', '-1', '1', '-1', '-1', '1', '1', '-1', '1', '-1', '1', '1', '1', '1', '1', '1', '-1', '-1', '1', '-1', '1', '-1', '-1', '1', '-1', '-1', '-1', '-1', '-1', '-1', '1', '1', '1', '1', '-1', '1', '1']
{'accuracy_score': 0.8269230769230769, 'balanced_accuracy_score': 0.827188091731538, 'macro_precision_score': 0.8304843304843305, 'macro_recall_score': 0.827188091731538, 'macro_f1_score': 0.8265327470919936, 'micro_precision_score': 0.8269230769230769, 'micro_recall_score': 0.8269230769230769, 'micro_f1_score': 0.8269230769230769}
('0', Pipeline(steps=[('0', SelectPercentile(percentile=18.94184160460768)),
                ('1', SelectFwe(alpha=0.026055177630632812)),
                ('2', MinMaxScaler()),
                ('3',
                 RandomForestClassifier(criterion='entropy',
                                        max_features='log2', min_samples_leaf=3,
                                        min_samples_split=16, n_estimators=38,
                                        random_state=45139))]))
('1', Pipeline(steps=[('0', SelectPercentile(percentile=18.94184160460768)),
                ('1', SelectFwe(alpha=0.026055177630632812)),
                ('2', MinMaxScaler()),
                ('3',
                 ExtraTreesClassifier(class_weight='balanced',
                                      criterion='entropy', max_features='sqrt',
                                      min_samples_leaf=3, min_samples_split=19,
                                      n_estimators=15, random_state=45139))]))
('2', Pipeline(steps=[('0', RobustScaler(with_centering=False, with_scaling=False)),
                ('1',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_samples_split=11, n_estimators=90,
                                        random_state=45139))]))
('3', Pipeline(steps=[('0',
                 SMOTETomek(random_state=45139,
                            sampling_strategy='not minority')),
                ('1',
                 SMOTE(k_neighbors=4, random_state=45139,
                       sampling_strategy='not minority')),
                ('2', VarianceThreshold()),
                ('3',
                 KNeighborsClassifier(n_neighbors=16, p=1,
                                      weights='distance'))]))
('4', Pipeline(steps=[('0', MaxAbsScaler()),
                ('1',
                 RandomForestClassifier(bootstrap=False, criterion='entropy',
                                        max_features='sqrt',
                                        min_samples_split=11, n_estimators=97,
                                        random_state=45139))]))
('5', Pipeline(steps=[('0', SelectPercentile(percentile=62.814184164750806)),
                ('1', SelectFwe(alpha=0.016990687286019813)),
                ('2', MinMaxScaler()),
                ('3',
                 ExtraTreesClassifier(class_weight='balanced',
                                      criterion='entropy', max_features='sqrt',
                                      min_samples_leaf=3, min_samples_split=19,
                                      n_estimators=15, random_state=45139))]))
('6', Pipeline(steps=[('0', RobustScaler(with_scaling=False)),
                ('1',
                 KNeighborsClassifier(n_neighbors=13, p=1,
                                      weights='distance'))]))
('7', Pipeline(steps=[('0',
                 KNeighborsClassifier(n_neighbors=16, p=1,
                                      weights='distance'))]))
('8', Pipeline(steps=[('0', MinMaxScaler()), ('1', VarianceThreshold()),
                ('2',
                 RandomForestClassifier(bootstrap=False,
                                        class_weight='balanced_subsample',
                                        max_features='sqrt',
                                        min_samples_leaf=10,
                                        min_samples_split=15, n_estimators=47,
                                        random_state=45139))]))
('9', Pipeline(steps=[('0',
                 Nystroem(coef0=0.12977932001813874, degree=3,
                          gamma=0.007812001850920125, kernel='poly',
                          n_components=84, random_state=45139)),
                ('1', SimpleImputer(strategy='most_frequent')),
                ('2',
                 KNeighborsClassifier(n_neighbors=3, p=1, weights='distance'))]))
